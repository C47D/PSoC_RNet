ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccApaELb.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"queue.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.prvGetDisinheritPriorityAfterTimeout,"ax",%progbits
  20              		.align	2
  21              		.code	16
  22              		.thumb_func
  23              		.type	prvGetDisinheritPriorityAfterTimeout, %function
  24              	prvGetDisinheritPriorityAfterTimeout:
  25              	.LFB52:
  26              		.file 1 "..\\FreeRTOS\\queue.c"
   1:..\FreeRTOS/queue.c **** /*
   2:..\FreeRTOS/queue.c ****  * FreeRTOS Kernel V10.0.0
   3:..\FreeRTOS/queue.c ****  * Copyright (C) 2017 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:..\FreeRTOS/queue.c ****  *
   5:..\FreeRTOS/queue.c ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:..\FreeRTOS/queue.c ****  * this software and associated documentation files (the "Software"), to deal in
   7:..\FreeRTOS/queue.c ****  * the Software without restriction, including without limitation the rights to
   8:..\FreeRTOS/queue.c ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:..\FreeRTOS/queue.c ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:..\FreeRTOS/queue.c ****  * subject to the following conditions:
  11:..\FreeRTOS/queue.c ****  *
  12:..\FreeRTOS/queue.c ****  * The above copyright notice and this permission notice shall be included in all
  13:..\FreeRTOS/queue.c ****  * copies or substantial portions of the Software. If you wish to use our Amazon
  14:..\FreeRTOS/queue.c ****  * FreeRTOS name, please do so in a fair use way that does not cause confusion.
  15:..\FreeRTOS/queue.c ****  *
  16:..\FreeRTOS/queue.c ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  17:..\FreeRTOS/queue.c ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  18:..\FreeRTOS/queue.c ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  19:..\FreeRTOS/queue.c ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  20:..\FreeRTOS/queue.c ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  21:..\FreeRTOS/queue.c ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  22:..\FreeRTOS/queue.c ****  *
  23:..\FreeRTOS/queue.c ****  * http://www.FreeRTOS.org
  24:..\FreeRTOS/queue.c ****  * http://aws.amazon.com/freertos
  25:..\FreeRTOS/queue.c ****  *
  26:..\FreeRTOS/queue.c ****  * 1 tab == 4 spaces!
  27:..\FreeRTOS/queue.c ****  */
  28:..\FreeRTOS/queue.c **** 
  29:..\FreeRTOS/queue.c **** #include <stdlib.h>
  30:..\FreeRTOS/queue.c **** #include <string.h>
  31:..\FreeRTOS/queue.c **** 
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccApaELb.s 			page 2


  32:..\FreeRTOS/queue.c **** /* Defining MPU_WRAPPERS_INCLUDED_FROM_API_FILE prevents task.h from redefining
  33:..\FreeRTOS/queue.c **** all the API functions to use the MPU wrappers.  That should only be done when
  34:..\FreeRTOS/queue.c **** task.h is included from an application file. */
  35:..\FreeRTOS/queue.c **** #define MPU_WRAPPERS_INCLUDED_FROM_API_FILE
  36:..\FreeRTOS/queue.c **** 
  37:..\FreeRTOS/queue.c **** #include "FreeRTOS.h"
  38:..\FreeRTOS/queue.c **** #include "task.h"
  39:..\FreeRTOS/queue.c **** #include "queue.h"
  40:..\FreeRTOS/queue.c **** 
  41:..\FreeRTOS/queue.c **** #if ( configUSE_CO_ROUTINES == 1 )
  42:..\FreeRTOS/queue.c **** 	#include "croutine.h"
  43:..\FreeRTOS/queue.c **** #endif
  44:..\FreeRTOS/queue.c **** 
  45:..\FreeRTOS/queue.c **** /* Lint e961 and e750 are suppressed as a MISRA exception justified because the
  46:..\FreeRTOS/queue.c **** MPU ports require MPU_WRAPPERS_INCLUDED_FROM_API_FILE to be defined for the
  47:..\FreeRTOS/queue.c **** header files above, but not in this file, in order to generate the correct
  48:..\FreeRTOS/queue.c **** privileged Vs unprivileged linkage and placement. */
  49:..\FreeRTOS/queue.c **** #undef MPU_WRAPPERS_INCLUDED_FROM_API_FILE /*lint !e961 !e750. */
  50:..\FreeRTOS/queue.c **** 
  51:..\FreeRTOS/queue.c **** 
  52:..\FreeRTOS/queue.c **** /* Constants used with the cRxLock and cTxLock structure members. */
  53:..\FreeRTOS/queue.c **** #define queueUNLOCKED					( ( int8_t ) -1 )
  54:..\FreeRTOS/queue.c **** #define queueLOCKED_UNMODIFIED			( ( int8_t ) 0 )
  55:..\FreeRTOS/queue.c **** 
  56:..\FreeRTOS/queue.c **** /* When the Queue_t structure is used to represent a base queue its pcHead and
  57:..\FreeRTOS/queue.c **** pcTail members are used as pointers into the queue storage area.  When the
  58:..\FreeRTOS/queue.c **** Queue_t structure is used to represent a mutex pcHead and pcTail pointers are
  59:..\FreeRTOS/queue.c **** not necessary, and the pcHead pointer is set to NULL to indicate that the
  60:..\FreeRTOS/queue.c **** pcTail pointer actually points to the mutex holder (if any).  Map alternative
  61:..\FreeRTOS/queue.c **** names to the pcHead and pcTail structure members to ensure the readability of
  62:..\FreeRTOS/queue.c **** the code is maintained despite this dual use of two structure members.  An
  63:..\FreeRTOS/queue.c **** alternative implementation would be to use a union, but use of a union is
  64:..\FreeRTOS/queue.c **** against the coding standard (although an exception to the standard has been
  65:..\FreeRTOS/queue.c **** permitted where the dual use also significantly changes the type of the
  66:..\FreeRTOS/queue.c **** structure member). */
  67:..\FreeRTOS/queue.c **** #define pxMutexHolder					pcTail
  68:..\FreeRTOS/queue.c **** #define uxQueueType						pcHead
  69:..\FreeRTOS/queue.c **** #define queueQUEUE_IS_MUTEX				NULL
  70:..\FreeRTOS/queue.c **** 
  71:..\FreeRTOS/queue.c **** /* Semaphores do not actually store or copy data, so have an item size of
  72:..\FreeRTOS/queue.c **** zero. */
  73:..\FreeRTOS/queue.c **** #define queueSEMAPHORE_QUEUE_ITEM_LENGTH ( ( UBaseType_t ) 0 )
  74:..\FreeRTOS/queue.c **** #define queueMUTEX_GIVE_BLOCK_TIME		 ( ( TickType_t ) 0U )
  75:..\FreeRTOS/queue.c **** 
  76:..\FreeRTOS/queue.c **** #if( configUSE_PREEMPTION == 0 )
  77:..\FreeRTOS/queue.c **** 	/* If the cooperative scheduler is being used then a yield should not be
  78:..\FreeRTOS/queue.c **** 	performed just because a higher priority task has been woken. */
  79:..\FreeRTOS/queue.c **** 	#define queueYIELD_IF_USING_PREEMPTION()
  80:..\FreeRTOS/queue.c **** #else
  81:..\FreeRTOS/queue.c **** 	#define queueYIELD_IF_USING_PREEMPTION() portYIELD_WITHIN_API()
  82:..\FreeRTOS/queue.c **** #endif
  83:..\FreeRTOS/queue.c **** 
  84:..\FreeRTOS/queue.c **** /*
  85:..\FreeRTOS/queue.c ****  * Definition of the queue used by the scheduler.
  86:..\FreeRTOS/queue.c ****  * Items are queued by copy, not reference.  See the following link for the
  87:..\FreeRTOS/queue.c ****  * rationale: http://www.freertos.org/Embedded-RTOS-Queues.html
  88:..\FreeRTOS/queue.c ****  */
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccApaELb.s 			page 3


  89:..\FreeRTOS/queue.c **** typedef struct QueueDefinition
  90:..\FreeRTOS/queue.c **** {
  91:..\FreeRTOS/queue.c **** 	int8_t *pcHead;					/*< Points to the beginning of the queue storage area. */
  92:..\FreeRTOS/queue.c **** 	int8_t *pcTail;					/*< Points to the byte at the end of the queue storage area.  Once more byte i
  93:..\FreeRTOS/queue.c **** 	int8_t *pcWriteTo;				/*< Points to the free next place in the storage area. */
  94:..\FreeRTOS/queue.c **** 
  95:..\FreeRTOS/queue.c **** 	union							/* Use of a union is an exception to the coding standard to ensure two mutually exclus
  96:..\FreeRTOS/queue.c **** 	{
  97:..\FreeRTOS/queue.c **** 		int8_t *pcReadFrom;			/*< Points to the last place that a queued item was read from when the stru
  98:..\FreeRTOS/queue.c **** 		UBaseType_t uxRecursiveCallCount;/*< Maintains a count of the number of times a recursive mutex h
  99:..\FreeRTOS/queue.c **** 	} u;
 100:..\FreeRTOS/queue.c **** 
 101:..\FreeRTOS/queue.c **** 	List_t xTasksWaitingToSend;		/*< List of tasks that are blocked waiting to post onto this queue.  
 102:..\FreeRTOS/queue.c **** 	List_t xTasksWaitingToReceive;	/*< List of tasks that are blocked waiting to read from this queue.
 103:..\FreeRTOS/queue.c **** 
 104:..\FreeRTOS/queue.c **** 	volatile UBaseType_t uxMessagesWaiting;/*< The number of items currently in the queue. */
 105:..\FreeRTOS/queue.c **** 	UBaseType_t uxLength;			/*< The length of the queue defined as the number of items it will hold, n
 106:..\FreeRTOS/queue.c **** 	UBaseType_t uxItemSize;			/*< The size of each items that the queue will hold. */
 107:..\FreeRTOS/queue.c **** 
 108:..\FreeRTOS/queue.c **** 	volatile int8_t cRxLock;		/*< Stores the number of items received from the queue (removed from the
 109:..\FreeRTOS/queue.c **** 	volatile int8_t cTxLock;		/*< Stores the number of items transmitted to the queue (added to the qu
 110:..\FreeRTOS/queue.c **** 
 111:..\FreeRTOS/queue.c **** 	#if( ( configSUPPORT_STATIC_ALLOCATION == 1 ) && ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) )
 112:..\FreeRTOS/queue.c **** 		uint8_t ucStaticallyAllocated;	/*< Set to pdTRUE if the memory used by the queue was statically a
 113:..\FreeRTOS/queue.c **** 	#endif
 114:..\FreeRTOS/queue.c **** 
 115:..\FreeRTOS/queue.c **** 	#if ( configUSE_QUEUE_SETS == 1 )
 116:..\FreeRTOS/queue.c **** 		struct QueueDefinition *pxQueueSetContainer;
 117:..\FreeRTOS/queue.c **** 	#endif
 118:..\FreeRTOS/queue.c **** 
 119:..\FreeRTOS/queue.c **** 	#if ( configUSE_TRACE_FACILITY == 1 )
 120:..\FreeRTOS/queue.c **** 		UBaseType_t uxQueueNumber;
 121:..\FreeRTOS/queue.c **** 		uint8_t ucQueueType;
 122:..\FreeRTOS/queue.c **** 	#endif
 123:..\FreeRTOS/queue.c **** 
 124:..\FreeRTOS/queue.c **** } xQUEUE;
 125:..\FreeRTOS/queue.c **** 
 126:..\FreeRTOS/queue.c **** /* The old xQUEUE name is maintained above then typedefed to the new Queue_t
 127:..\FreeRTOS/queue.c **** name below to enable the use of older kernel aware debuggers. */
 128:..\FreeRTOS/queue.c **** typedef xQUEUE Queue_t;
 129:..\FreeRTOS/queue.c **** 
 130:..\FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
 131:..\FreeRTOS/queue.c **** 
 132:..\FreeRTOS/queue.c **** /*
 133:..\FreeRTOS/queue.c ****  * The queue registry is just a means for kernel aware debuggers to locate
 134:..\FreeRTOS/queue.c ****  * queue structures.  It has no other purpose so is an optional component.
 135:..\FreeRTOS/queue.c ****  */
 136:..\FreeRTOS/queue.c **** #if ( configQUEUE_REGISTRY_SIZE > 0 )
 137:..\FreeRTOS/queue.c **** 
 138:..\FreeRTOS/queue.c **** 	/* The type stored within the queue registry array.  This allows a name
 139:..\FreeRTOS/queue.c **** 	to be assigned to each queue making kernel aware debugging a little
 140:..\FreeRTOS/queue.c **** 	more user friendly. */
 141:..\FreeRTOS/queue.c **** 	typedef struct QUEUE_REGISTRY_ITEM
 142:..\FreeRTOS/queue.c **** 	{
 143:..\FreeRTOS/queue.c **** 		const char *pcQueueName; /*lint !e971 Unqualified char types are allowed for strings and single c
 144:..\FreeRTOS/queue.c **** 		QueueHandle_t xHandle;
 145:..\FreeRTOS/queue.c **** 	} xQueueRegistryItem;
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccApaELb.s 			page 4


 146:..\FreeRTOS/queue.c **** 
 147:..\FreeRTOS/queue.c **** 	/* The old xQueueRegistryItem name is maintained above then typedefed to the
 148:..\FreeRTOS/queue.c **** 	new xQueueRegistryItem name below to enable the use of older kernel aware
 149:..\FreeRTOS/queue.c **** 	debuggers. */
 150:..\FreeRTOS/queue.c **** 	typedef xQueueRegistryItem QueueRegistryItem_t;
 151:..\FreeRTOS/queue.c **** 
 152:..\FreeRTOS/queue.c **** 	/* The queue registry is simply an array of QueueRegistryItem_t structures.
 153:..\FreeRTOS/queue.c **** 	The pcQueueName member of a structure being NULL is indicative of the
 154:..\FreeRTOS/queue.c **** 	array position being vacant. */
 155:..\FreeRTOS/queue.c **** 	PRIVILEGED_DATA QueueRegistryItem_t xQueueRegistry[ configQUEUE_REGISTRY_SIZE ];
 156:..\FreeRTOS/queue.c **** 
 157:..\FreeRTOS/queue.c **** #endif /* configQUEUE_REGISTRY_SIZE */
 158:..\FreeRTOS/queue.c **** 
 159:..\FreeRTOS/queue.c **** /*
 160:..\FreeRTOS/queue.c ****  * Unlocks a queue locked by a call to prvLockQueue.  Locking a queue does not
 161:..\FreeRTOS/queue.c ****  * prevent an ISR from adding or removing items to the queue, but does prevent
 162:..\FreeRTOS/queue.c ****  * an ISR from removing tasks from the queue event lists.  If an ISR finds a
 163:..\FreeRTOS/queue.c ****  * queue is locked it will instead increment the appropriate queue lock count
 164:..\FreeRTOS/queue.c ****  * to indicate that a task may require unblocking.  When the queue in unlocked
 165:..\FreeRTOS/queue.c ****  * these lock counts are inspected, and the appropriate action taken.
 166:..\FreeRTOS/queue.c ****  */
 167:..\FreeRTOS/queue.c **** static void prvUnlockQueue( Queue_t * const pxQueue ) PRIVILEGED_FUNCTION;
 168:..\FreeRTOS/queue.c **** 
 169:..\FreeRTOS/queue.c **** /*
 170:..\FreeRTOS/queue.c ****  * Uses a critical section to determine if there is any data in a queue.
 171:..\FreeRTOS/queue.c ****  *
 172:..\FreeRTOS/queue.c ****  * @return pdTRUE if the queue contains no items, otherwise pdFALSE.
 173:..\FreeRTOS/queue.c ****  */
 174:..\FreeRTOS/queue.c **** static BaseType_t prvIsQueueEmpty( const Queue_t *pxQueue ) PRIVILEGED_FUNCTION;
 175:..\FreeRTOS/queue.c **** 
 176:..\FreeRTOS/queue.c **** /*
 177:..\FreeRTOS/queue.c ****  * Uses a critical section to determine if there is any space in a queue.
 178:..\FreeRTOS/queue.c ****  *
 179:..\FreeRTOS/queue.c ****  * @return pdTRUE if there is no space, otherwise pdFALSE;
 180:..\FreeRTOS/queue.c ****  */
 181:..\FreeRTOS/queue.c **** static BaseType_t prvIsQueueFull( const Queue_t *pxQueue ) PRIVILEGED_FUNCTION;
 182:..\FreeRTOS/queue.c **** 
 183:..\FreeRTOS/queue.c **** /*
 184:..\FreeRTOS/queue.c ****  * Copies an item into the queue, either at the front of the queue or the
 185:..\FreeRTOS/queue.c ****  * back of the queue.
 186:..\FreeRTOS/queue.c ****  */
 187:..\FreeRTOS/queue.c **** static BaseType_t prvCopyDataToQueue( Queue_t * const pxQueue, const void *pvItemToQueue, const Bas
 188:..\FreeRTOS/queue.c **** 
 189:..\FreeRTOS/queue.c **** /*
 190:..\FreeRTOS/queue.c ****  * Copies an item out of a queue.
 191:..\FreeRTOS/queue.c ****  */
 192:..\FreeRTOS/queue.c **** static void prvCopyDataFromQueue( Queue_t * const pxQueue, void * const pvBuffer ) PRIVILEGED_FUNCT
 193:..\FreeRTOS/queue.c **** 
 194:..\FreeRTOS/queue.c **** #if ( configUSE_QUEUE_SETS == 1 )
 195:..\FreeRTOS/queue.c **** 	/*
 196:..\FreeRTOS/queue.c **** 	 * Checks to see if a queue is a member of a queue set, and if so, notifies
 197:..\FreeRTOS/queue.c **** 	 * the queue set that the queue contains data.
 198:..\FreeRTOS/queue.c **** 	 */
 199:..\FreeRTOS/queue.c **** 	static BaseType_t prvNotifyQueueSetContainer( const Queue_t * const pxQueue, const BaseType_t xCop
 200:..\FreeRTOS/queue.c **** #endif
 201:..\FreeRTOS/queue.c **** 
 202:..\FreeRTOS/queue.c **** /*
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccApaELb.s 			page 5


 203:..\FreeRTOS/queue.c ****  * Called after a Queue_t structure has been allocated either statically or
 204:..\FreeRTOS/queue.c ****  * dynamically to fill in the structure's members.
 205:..\FreeRTOS/queue.c ****  */
 206:..\FreeRTOS/queue.c **** static void prvInitialiseNewQueue( const UBaseType_t uxQueueLength, const UBaseType_t uxItemSize, u
 207:..\FreeRTOS/queue.c **** 
 208:..\FreeRTOS/queue.c **** /*
 209:..\FreeRTOS/queue.c ****  * Mutexes are a special type of queue.  When a mutex is created, first the
 210:..\FreeRTOS/queue.c ****  * queue is created, then prvInitialiseMutex() is called to configure the queue
 211:..\FreeRTOS/queue.c ****  * as a mutex.
 212:..\FreeRTOS/queue.c ****  */
 213:..\FreeRTOS/queue.c **** #if( configUSE_MUTEXES == 1 )
 214:..\FreeRTOS/queue.c **** 	static void prvInitialiseMutex( Queue_t *pxNewQueue ) PRIVILEGED_FUNCTION;
 215:..\FreeRTOS/queue.c **** #endif
 216:..\FreeRTOS/queue.c **** 
 217:..\FreeRTOS/queue.c **** #if( configUSE_MUTEXES == 1 )
 218:..\FreeRTOS/queue.c **** 	/*
 219:..\FreeRTOS/queue.c **** 	 * If a task waiting for a mutex causes the mutex holder to inherit a
 220:..\FreeRTOS/queue.c **** 	 * priority, but the waiting task times out, then the holder should
 221:..\FreeRTOS/queue.c **** 	 * disinherit the priority - but only down to the highest priority of any
 222:..\FreeRTOS/queue.c **** 	 * other tasks that are waiting for the same mutex.  This function returns
 223:..\FreeRTOS/queue.c **** 	 * that priority.
 224:..\FreeRTOS/queue.c **** 	 */
 225:..\FreeRTOS/queue.c **** 	static UBaseType_t prvGetDisinheritPriorityAfterTimeout( const Queue_t * const pxQueue ) PRIVILEGE
 226:..\FreeRTOS/queue.c **** #endif
 227:..\FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
 228:..\FreeRTOS/queue.c **** 
 229:..\FreeRTOS/queue.c **** /*
 230:..\FreeRTOS/queue.c ****  * Macro to mark a queue as locked.  Locking a queue prevents an ISR from
 231:..\FreeRTOS/queue.c ****  * accessing the queue event lists.
 232:..\FreeRTOS/queue.c ****  */
 233:..\FreeRTOS/queue.c **** #define prvLockQueue( pxQueue )								\
 234:..\FreeRTOS/queue.c **** 	taskENTER_CRITICAL();									\
 235:..\FreeRTOS/queue.c **** 	{														\
 236:..\FreeRTOS/queue.c **** 		if( ( pxQueue )->cRxLock == queueUNLOCKED )			\
 237:..\FreeRTOS/queue.c **** 		{													\
 238:..\FreeRTOS/queue.c **** 			( pxQueue )->cRxLock = queueLOCKED_UNMODIFIED;	\
 239:..\FreeRTOS/queue.c **** 		}													\
 240:..\FreeRTOS/queue.c **** 		if( ( pxQueue )->cTxLock == queueUNLOCKED )			\
 241:..\FreeRTOS/queue.c **** 		{													\
 242:..\FreeRTOS/queue.c **** 			( pxQueue )->cTxLock = queueLOCKED_UNMODIFIED;	\
 243:..\FreeRTOS/queue.c **** 		}													\
 244:..\FreeRTOS/queue.c **** 	}														\
 245:..\FreeRTOS/queue.c **** 	taskEXIT_CRITICAL()
 246:..\FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
 247:..\FreeRTOS/queue.c **** 
 248:..\FreeRTOS/queue.c **** BaseType_t xQueueGenericReset( QueueHandle_t xQueue, BaseType_t xNewQueue )
 249:..\FreeRTOS/queue.c **** {
 250:..\FreeRTOS/queue.c **** Queue_t * const pxQueue = ( Queue_t * ) xQueue;
 251:..\FreeRTOS/queue.c **** 
 252:..\FreeRTOS/queue.c **** 	configASSERT( pxQueue );
 253:..\FreeRTOS/queue.c **** 
 254:..\FreeRTOS/queue.c **** 	taskENTER_CRITICAL();
 255:..\FreeRTOS/queue.c **** 	{
 256:..\FreeRTOS/queue.c **** 		pxQueue->pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize );
 257:..\FreeRTOS/queue.c **** 		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 258:..\FreeRTOS/queue.c **** 		pxQueue->pcWriteTo = pxQueue->pcHead;
 259:..\FreeRTOS/queue.c **** 		pxQueue->u.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - ( UBaseType_t ) 1U ) * pxQueue-
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccApaELb.s 			page 6


 260:..\FreeRTOS/queue.c **** 		pxQueue->cRxLock = queueUNLOCKED;
 261:..\FreeRTOS/queue.c **** 		pxQueue->cTxLock = queueUNLOCKED;
 262:..\FreeRTOS/queue.c **** 
 263:..\FreeRTOS/queue.c **** 		if( xNewQueue == pdFALSE )
 264:..\FreeRTOS/queue.c **** 		{
 265:..\FreeRTOS/queue.c **** 			/* If there are tasks blocked waiting to read from the queue, then
 266:..\FreeRTOS/queue.c **** 			the tasks will remain blocked as after this function exits the queue
 267:..\FreeRTOS/queue.c **** 			will still be empty.  If there are tasks blocked waiting to write to
 268:..\FreeRTOS/queue.c **** 			the queue, then one should be unblocked as after this function exits
 269:..\FreeRTOS/queue.c **** 			it will be possible to write to it. */
 270:..\FreeRTOS/queue.c **** 			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 271:..\FreeRTOS/queue.c **** 			{
 272:..\FreeRTOS/queue.c **** 				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 273:..\FreeRTOS/queue.c **** 				{
 274:..\FreeRTOS/queue.c **** 					queueYIELD_IF_USING_PREEMPTION();
 275:..\FreeRTOS/queue.c **** 				}
 276:..\FreeRTOS/queue.c **** 				else
 277:..\FreeRTOS/queue.c **** 				{
 278:..\FreeRTOS/queue.c **** 					mtCOVERAGE_TEST_MARKER();
 279:..\FreeRTOS/queue.c **** 				}
 280:..\FreeRTOS/queue.c **** 			}
 281:..\FreeRTOS/queue.c **** 			else
 282:..\FreeRTOS/queue.c **** 			{
 283:..\FreeRTOS/queue.c **** 				mtCOVERAGE_TEST_MARKER();
 284:..\FreeRTOS/queue.c **** 			}
 285:..\FreeRTOS/queue.c **** 		}
 286:..\FreeRTOS/queue.c **** 		else
 287:..\FreeRTOS/queue.c **** 		{
 288:..\FreeRTOS/queue.c **** 			/* Ensure the event queues start in the correct state. */
 289:..\FreeRTOS/queue.c **** 			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 290:..\FreeRTOS/queue.c **** 			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 291:..\FreeRTOS/queue.c **** 		}
 292:..\FreeRTOS/queue.c **** 	}
 293:..\FreeRTOS/queue.c **** 	taskEXIT_CRITICAL();
 294:..\FreeRTOS/queue.c **** 
 295:..\FreeRTOS/queue.c **** 	/* A value is returned for calling semantic consistency with previous
 296:..\FreeRTOS/queue.c **** 	versions. */
 297:..\FreeRTOS/queue.c **** 	return pdPASS;
 298:..\FreeRTOS/queue.c **** }
 299:..\FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
 300:..\FreeRTOS/queue.c **** 
 301:..\FreeRTOS/queue.c **** #if( configSUPPORT_STATIC_ALLOCATION == 1 )
 302:..\FreeRTOS/queue.c **** 
 303:..\FreeRTOS/queue.c **** 	QueueHandle_t xQueueGenericCreateStatic( const UBaseType_t uxQueueLength, const UBaseType_t uxItem
 304:..\FreeRTOS/queue.c **** 	{
 305:..\FreeRTOS/queue.c **** 	Queue_t *pxNewQueue;
 306:..\FreeRTOS/queue.c **** 
 307:..\FreeRTOS/queue.c **** 		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 308:..\FreeRTOS/queue.c **** 
 309:..\FreeRTOS/queue.c **** 		/* The StaticQueue_t structure and the queue storage area must be
 310:..\FreeRTOS/queue.c **** 		supplied. */
 311:..\FreeRTOS/queue.c **** 		configASSERT( pxStaticQueue != NULL );
 312:..\FreeRTOS/queue.c **** 
 313:..\FreeRTOS/queue.c **** 		/* A queue storage area should be provided if the item size is not 0, and
 314:..\FreeRTOS/queue.c **** 		should not be provided if the item size is 0. */
 315:..\FreeRTOS/queue.c **** 		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
 316:..\FreeRTOS/queue.c **** 		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccApaELb.s 			page 7


 317:..\FreeRTOS/queue.c **** 
 318:..\FreeRTOS/queue.c **** 		#if( configASSERT_DEFINED == 1 )
 319:..\FreeRTOS/queue.c **** 		{
 320:..\FreeRTOS/queue.c **** 			/* Sanity check that the size of the structure used to declare a
 321:..\FreeRTOS/queue.c **** 			variable of type StaticQueue_t or StaticSemaphore_t equals the size of
 322:..\FreeRTOS/queue.c **** 			the real queue and semaphore structures. */
 323:..\FreeRTOS/queue.c **** 			volatile size_t xSize = sizeof( StaticQueue_t );
 324:..\FreeRTOS/queue.c **** 			configASSERT( xSize == sizeof( Queue_t ) );
 325:..\FreeRTOS/queue.c **** 		}
 326:..\FreeRTOS/queue.c **** 		#endif /* configASSERT_DEFINED */
 327:..\FreeRTOS/queue.c **** 
 328:..\FreeRTOS/queue.c **** 		/* The address of a statically allocated queue was passed in, use it.
 329:..\FreeRTOS/queue.c **** 		The address of a statically allocated storage area was also passed in
 330:..\FreeRTOS/queue.c **** 		but is already set. */
 331:..\FreeRTOS/queue.c **** 		pxNewQueue = ( Queue_t * ) pxStaticQueue; /*lint !e740 Unusual cast is ok as the structures are d
 332:..\FreeRTOS/queue.c **** 
 333:..\FreeRTOS/queue.c **** 		if( pxNewQueue != NULL )
 334:..\FreeRTOS/queue.c **** 		{
 335:..\FreeRTOS/queue.c **** 			#if( configSUPPORT_DYNAMIC_ALLOCATION == 1 )
 336:..\FreeRTOS/queue.c **** 			{
 337:..\FreeRTOS/queue.c **** 				/* Queues can be allocated wither statically or dynamically, so
 338:..\FreeRTOS/queue.c **** 				note this queue was allocated statically in case the queue is
 339:..\FreeRTOS/queue.c **** 				later deleted. */
 340:..\FreeRTOS/queue.c **** 				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 341:..\FreeRTOS/queue.c **** 			}
 342:..\FreeRTOS/queue.c **** 			#endif /* configSUPPORT_DYNAMIC_ALLOCATION */
 343:..\FreeRTOS/queue.c **** 
 344:..\FreeRTOS/queue.c **** 			prvInitialiseNewQueue( uxQueueLength, uxItemSize, pucQueueStorage, ucQueueType, pxNewQueue );
 345:..\FreeRTOS/queue.c **** 		}
 346:..\FreeRTOS/queue.c **** 		else
 347:..\FreeRTOS/queue.c **** 		{
 348:..\FreeRTOS/queue.c **** 			traceQUEUE_CREATE_FAILED( ucQueueType );
 349:..\FreeRTOS/queue.c **** 		}
 350:..\FreeRTOS/queue.c **** 
 351:..\FreeRTOS/queue.c **** 		return pxNewQueue;
 352:..\FreeRTOS/queue.c **** 	}
 353:..\FreeRTOS/queue.c **** 
 354:..\FreeRTOS/queue.c **** #endif /* configSUPPORT_STATIC_ALLOCATION */
 355:..\FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
 356:..\FreeRTOS/queue.c **** 
 357:..\FreeRTOS/queue.c **** #if( configSUPPORT_DYNAMIC_ALLOCATION == 1 )
 358:..\FreeRTOS/queue.c **** 
 359:..\FreeRTOS/queue.c **** 	QueueHandle_t xQueueGenericCreate( const UBaseType_t uxQueueLength, const UBaseType_t uxItemSize, 
 360:..\FreeRTOS/queue.c **** 	{
 361:..\FreeRTOS/queue.c **** 	Queue_t *pxNewQueue;
 362:..\FreeRTOS/queue.c **** 	size_t xQueueSizeInBytes;
 363:..\FreeRTOS/queue.c **** 	uint8_t *pucQueueStorage;
 364:..\FreeRTOS/queue.c **** 
 365:..\FreeRTOS/queue.c **** 		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 366:..\FreeRTOS/queue.c **** 
 367:..\FreeRTOS/queue.c **** 		if( uxItemSize == ( UBaseType_t ) 0 )
 368:..\FreeRTOS/queue.c **** 		{
 369:..\FreeRTOS/queue.c **** 			/* There is not going to be a queue storage area. */
 370:..\FreeRTOS/queue.c **** 			xQueueSizeInBytes = ( size_t ) 0;
 371:..\FreeRTOS/queue.c **** 		}
 372:..\FreeRTOS/queue.c **** 		else
 373:..\FreeRTOS/queue.c **** 		{
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccApaELb.s 			page 8


 374:..\FreeRTOS/queue.c **** 			/* Allocate enough space to hold the maximum number of items that
 375:..\FreeRTOS/queue.c **** 			can be in the queue at any time. */
 376:..\FreeRTOS/queue.c **** 			xQueueSizeInBytes = ( size_t ) ( uxQueueLength * uxItemSize ); /*lint !e961 MISRA exception as t
 377:..\FreeRTOS/queue.c **** 		}
 378:..\FreeRTOS/queue.c **** 
 379:..\FreeRTOS/queue.c **** 		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes );
 380:..\FreeRTOS/queue.c **** 
 381:..\FreeRTOS/queue.c **** 		if( pxNewQueue != NULL )
 382:..\FreeRTOS/queue.c **** 		{
 383:..\FreeRTOS/queue.c **** 			/* Jump past the queue structure to find the location of the queue
 384:..\FreeRTOS/queue.c **** 			storage area. */
 385:..\FreeRTOS/queue.c **** 			pucQueueStorage = ( ( uint8_t * ) pxNewQueue ) + sizeof( Queue_t );
 386:..\FreeRTOS/queue.c **** 
 387:..\FreeRTOS/queue.c **** 			#if( configSUPPORT_STATIC_ALLOCATION == 1 )
 388:..\FreeRTOS/queue.c **** 			{
 389:..\FreeRTOS/queue.c **** 				/* Queues can be created either statically or dynamically, so
 390:..\FreeRTOS/queue.c **** 				note this task was created dynamically in case it is later
 391:..\FreeRTOS/queue.c **** 				deleted. */
 392:..\FreeRTOS/queue.c **** 				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 393:..\FreeRTOS/queue.c **** 			}
 394:..\FreeRTOS/queue.c **** 			#endif /* configSUPPORT_STATIC_ALLOCATION */
 395:..\FreeRTOS/queue.c **** 
 396:..\FreeRTOS/queue.c **** 			prvInitialiseNewQueue( uxQueueLength, uxItemSize, pucQueueStorage, ucQueueType, pxNewQueue );
 397:..\FreeRTOS/queue.c **** 		}
 398:..\FreeRTOS/queue.c **** 		else
 399:..\FreeRTOS/queue.c **** 		{
 400:..\FreeRTOS/queue.c **** 			traceQUEUE_CREATE_FAILED( ucQueueType );
 401:..\FreeRTOS/queue.c **** 		}
 402:..\FreeRTOS/queue.c **** 
 403:..\FreeRTOS/queue.c **** 		return pxNewQueue;
 404:..\FreeRTOS/queue.c **** 	}
 405:..\FreeRTOS/queue.c **** 
 406:..\FreeRTOS/queue.c **** #endif /* configSUPPORT_STATIC_ALLOCATION */
 407:..\FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
 408:..\FreeRTOS/queue.c **** 
 409:..\FreeRTOS/queue.c **** static void prvInitialiseNewQueue( const UBaseType_t uxQueueLength, const UBaseType_t uxItemSize, u
 410:..\FreeRTOS/queue.c **** {
 411:..\FreeRTOS/queue.c **** 	/* Remove compiler warnings about unused parameters should
 412:..\FreeRTOS/queue.c **** 	configUSE_TRACE_FACILITY not be set to 1. */
 413:..\FreeRTOS/queue.c **** 	( void ) ucQueueType;
 414:..\FreeRTOS/queue.c **** 
 415:..\FreeRTOS/queue.c **** 	if( uxItemSize == ( UBaseType_t ) 0 )
 416:..\FreeRTOS/queue.c **** 	{
 417:..\FreeRTOS/queue.c **** 		/* No RAM was allocated for the queue storage area, but PC head cannot
 418:..\FreeRTOS/queue.c **** 		be set to NULL because NULL is used as a key to say the queue is used as
 419:..\FreeRTOS/queue.c **** 		a mutex.  Therefore just set pcHead to point to the queue as a benign
 420:..\FreeRTOS/queue.c **** 		value that is known to be within the memory map. */
 421:..\FreeRTOS/queue.c **** 		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
 422:..\FreeRTOS/queue.c **** 	}
 423:..\FreeRTOS/queue.c **** 	else
 424:..\FreeRTOS/queue.c **** 	{
 425:..\FreeRTOS/queue.c **** 		/* Set the head to the start of the queue storage area. */
 426:..\FreeRTOS/queue.c **** 		pxNewQueue->pcHead = ( int8_t * ) pucQueueStorage;
 427:..\FreeRTOS/queue.c **** 	}
 428:..\FreeRTOS/queue.c **** 
 429:..\FreeRTOS/queue.c **** 	/* Initialise the queue members as described where the queue type is
 430:..\FreeRTOS/queue.c **** 	defined. */
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccApaELb.s 			page 9


 431:..\FreeRTOS/queue.c **** 	pxNewQueue->uxLength = uxQueueLength;
 432:..\FreeRTOS/queue.c **** 	pxNewQueue->uxItemSize = uxItemSize;
 433:..\FreeRTOS/queue.c **** 	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 434:..\FreeRTOS/queue.c **** 
 435:..\FreeRTOS/queue.c **** 	#if ( configUSE_TRACE_FACILITY == 1 )
 436:..\FreeRTOS/queue.c **** 	{
 437:..\FreeRTOS/queue.c **** 		pxNewQueue->ucQueueType = ucQueueType;
 438:..\FreeRTOS/queue.c **** 	}
 439:..\FreeRTOS/queue.c **** 	#endif /* configUSE_TRACE_FACILITY */
 440:..\FreeRTOS/queue.c **** 
 441:..\FreeRTOS/queue.c **** 	#if( configUSE_QUEUE_SETS == 1 )
 442:..\FreeRTOS/queue.c **** 	{
 443:..\FreeRTOS/queue.c **** 		pxNewQueue->pxQueueSetContainer = NULL;
 444:..\FreeRTOS/queue.c **** 	}
 445:..\FreeRTOS/queue.c **** 	#endif /* configUSE_QUEUE_SETS */
 446:..\FreeRTOS/queue.c **** 
 447:..\FreeRTOS/queue.c **** 	traceQUEUE_CREATE( pxNewQueue );
 448:..\FreeRTOS/queue.c **** }
 449:..\FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
 450:..\FreeRTOS/queue.c **** 
 451:..\FreeRTOS/queue.c **** #if( configUSE_MUTEXES == 1 )
 452:..\FreeRTOS/queue.c **** 
 453:..\FreeRTOS/queue.c **** 	static void prvInitialiseMutex( Queue_t *pxNewQueue )
 454:..\FreeRTOS/queue.c **** 	{
 455:..\FreeRTOS/queue.c **** 		if( pxNewQueue != NULL )
 456:..\FreeRTOS/queue.c **** 		{
 457:..\FreeRTOS/queue.c **** 			/* The queue create function will set all the queue structure members
 458:..\FreeRTOS/queue.c **** 			correctly for a generic queue, but this function is creating a
 459:..\FreeRTOS/queue.c **** 			mutex.  Overwrite those members that need to be set differently -
 460:..\FreeRTOS/queue.c **** 			in particular the information required for priority inheritance. */
 461:..\FreeRTOS/queue.c **** 			pxNewQueue->pxMutexHolder = NULL;
 462:..\FreeRTOS/queue.c **** 			pxNewQueue->uxQueueType = queueQUEUE_IS_MUTEX;
 463:..\FreeRTOS/queue.c **** 
 464:..\FreeRTOS/queue.c **** 			/* In case this is a recursive mutex. */
 465:..\FreeRTOS/queue.c **** 			pxNewQueue->u.uxRecursiveCallCount = 0;
 466:..\FreeRTOS/queue.c **** 
 467:..\FreeRTOS/queue.c **** 			traceCREATE_MUTEX( pxNewQueue );
 468:..\FreeRTOS/queue.c **** 
 469:..\FreeRTOS/queue.c **** 			/* Start with the semaphore in the expected state. */
 470:..\FreeRTOS/queue.c **** 			( void ) xQueueGenericSend( pxNewQueue, NULL, ( TickType_t ) 0U, queueSEND_TO_BACK );
 471:..\FreeRTOS/queue.c **** 		}
 472:..\FreeRTOS/queue.c **** 		else
 473:..\FreeRTOS/queue.c **** 		{
 474:..\FreeRTOS/queue.c **** 			traceCREATE_MUTEX_FAILED();
 475:..\FreeRTOS/queue.c **** 		}
 476:..\FreeRTOS/queue.c **** 	}
 477:..\FreeRTOS/queue.c **** 
 478:..\FreeRTOS/queue.c **** #endif /* configUSE_MUTEXES */
 479:..\FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
 480:..\FreeRTOS/queue.c **** 
 481:..\FreeRTOS/queue.c **** #if( ( configUSE_MUTEXES == 1 ) && ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) )
 482:..\FreeRTOS/queue.c **** 
 483:..\FreeRTOS/queue.c **** 	QueueHandle_t xQueueCreateMutex( const uint8_t ucQueueType )
 484:..\FreeRTOS/queue.c **** 	{
 485:..\FreeRTOS/queue.c **** 	Queue_t *pxNewQueue;
 486:..\FreeRTOS/queue.c **** 	const UBaseType_t uxMutexLength = ( UBaseType_t ) 1, uxMutexSize = ( UBaseType_t ) 0;
 487:..\FreeRTOS/queue.c **** 
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccApaELb.s 			page 10


 488:..\FreeRTOS/queue.c **** 		pxNewQueue = ( Queue_t * ) xQueueGenericCreate( uxMutexLength, uxMutexSize, ucQueueType );
 489:..\FreeRTOS/queue.c **** 		prvInitialiseMutex( pxNewQueue );
 490:..\FreeRTOS/queue.c **** 
 491:..\FreeRTOS/queue.c **** 		return pxNewQueue;
 492:..\FreeRTOS/queue.c **** 	}
 493:..\FreeRTOS/queue.c **** 
 494:..\FreeRTOS/queue.c **** #endif /* configUSE_MUTEXES */
 495:..\FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
 496:..\FreeRTOS/queue.c **** 
 497:..\FreeRTOS/queue.c **** #if( ( configUSE_MUTEXES == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 1 ) )
 498:..\FreeRTOS/queue.c **** 
 499:..\FreeRTOS/queue.c **** 	QueueHandle_t xQueueCreateMutexStatic( const uint8_t ucQueueType, StaticQueue_t *pxStaticQueue )
 500:..\FreeRTOS/queue.c **** 	{
 501:..\FreeRTOS/queue.c **** 	Queue_t *pxNewQueue;
 502:..\FreeRTOS/queue.c **** 	const UBaseType_t uxMutexLength = ( UBaseType_t ) 1, uxMutexSize = ( UBaseType_t ) 0;
 503:..\FreeRTOS/queue.c **** 
 504:..\FreeRTOS/queue.c **** 		/* Prevent compiler warnings about unused parameters if
 505:..\FreeRTOS/queue.c **** 		configUSE_TRACE_FACILITY does not equal 1. */
 506:..\FreeRTOS/queue.c **** 		( void ) ucQueueType;
 507:..\FreeRTOS/queue.c **** 
 508:..\FreeRTOS/queue.c **** 		pxNewQueue = ( Queue_t * ) xQueueGenericCreateStatic( uxMutexLength, uxMutexSize, NULL, pxStaticQ
 509:..\FreeRTOS/queue.c **** 		prvInitialiseMutex( pxNewQueue );
 510:..\FreeRTOS/queue.c **** 
 511:..\FreeRTOS/queue.c **** 		return pxNewQueue;
 512:..\FreeRTOS/queue.c **** 	}
 513:..\FreeRTOS/queue.c **** 
 514:..\FreeRTOS/queue.c **** #endif /* configUSE_MUTEXES */
 515:..\FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
 516:..\FreeRTOS/queue.c **** 
 517:..\FreeRTOS/queue.c **** #if ( ( configUSE_MUTEXES == 1 ) && ( INCLUDE_xSemaphoreGetMutexHolder == 1 ) )
 518:..\FreeRTOS/queue.c **** 
 519:..\FreeRTOS/queue.c **** 	void* xQueueGetMutexHolder( QueueHandle_t xSemaphore )
 520:..\FreeRTOS/queue.c **** 	{
 521:..\FreeRTOS/queue.c **** 	void *pxReturn;
 522:..\FreeRTOS/queue.c **** 
 523:..\FreeRTOS/queue.c **** 		/* This function is called by xSemaphoreGetMutexHolder(), and should not
 524:..\FreeRTOS/queue.c **** 		be called directly.  Note:  This is a good way of determining if the
 525:..\FreeRTOS/queue.c **** 		calling task is the mutex holder, but not a good way of determining the
 526:..\FreeRTOS/queue.c **** 		identity of the mutex holder, as the holder may change between the
 527:..\FreeRTOS/queue.c **** 		following critical section exiting and the function returning. */
 528:..\FreeRTOS/queue.c **** 		taskENTER_CRITICAL();
 529:..\FreeRTOS/queue.c **** 		{
 530:..\FreeRTOS/queue.c **** 			if( ( ( Queue_t * ) xSemaphore )->uxQueueType == queueQUEUE_IS_MUTEX )
 531:..\FreeRTOS/queue.c **** 			{
 532:..\FreeRTOS/queue.c **** 				pxReturn = ( void * ) ( ( Queue_t * ) xSemaphore )->pxMutexHolder;
 533:..\FreeRTOS/queue.c **** 			}
 534:..\FreeRTOS/queue.c **** 			else
 535:..\FreeRTOS/queue.c **** 			{
 536:..\FreeRTOS/queue.c **** 				pxReturn = NULL;
 537:..\FreeRTOS/queue.c **** 			}
 538:..\FreeRTOS/queue.c **** 		}
 539:..\FreeRTOS/queue.c **** 		taskEXIT_CRITICAL();
 540:..\FreeRTOS/queue.c **** 
 541:..\FreeRTOS/queue.c **** 		return pxReturn;
 542:..\FreeRTOS/queue.c **** 	} /*lint !e818 xSemaphore cannot be a pointer to const because it is a typedef. */
 543:..\FreeRTOS/queue.c **** 
 544:..\FreeRTOS/queue.c **** #endif
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccApaELb.s 			page 11


 545:..\FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
 546:..\FreeRTOS/queue.c **** 
 547:..\FreeRTOS/queue.c **** #if ( ( configUSE_MUTEXES == 1 ) && ( INCLUDE_xSemaphoreGetMutexHolder == 1 ) )
 548:..\FreeRTOS/queue.c **** 
 549:..\FreeRTOS/queue.c **** 	void* xQueueGetMutexHolderFromISR( QueueHandle_t xSemaphore )
 550:..\FreeRTOS/queue.c **** 	{
 551:..\FreeRTOS/queue.c **** 	void *pxReturn;
 552:..\FreeRTOS/queue.c **** 
 553:..\FreeRTOS/queue.c **** 		configASSERT( xSemaphore );
 554:..\FreeRTOS/queue.c **** 
 555:..\FreeRTOS/queue.c **** 		/* Mutexes cannot be used in interrupt service routines, so the mutex
 556:..\FreeRTOS/queue.c **** 		holder should not change in an ISR, and therefore a critical section is
 557:..\FreeRTOS/queue.c **** 		not required here. */
 558:..\FreeRTOS/queue.c **** 		if( ( ( Queue_t * ) xSemaphore )->uxQueueType == queueQUEUE_IS_MUTEX )
 559:..\FreeRTOS/queue.c **** 		{
 560:..\FreeRTOS/queue.c **** 			pxReturn = ( void * ) ( ( Queue_t * ) xSemaphore )->pxMutexHolder;
 561:..\FreeRTOS/queue.c **** 		}
 562:..\FreeRTOS/queue.c **** 		else
 563:..\FreeRTOS/queue.c **** 		{
 564:..\FreeRTOS/queue.c **** 			pxReturn = NULL;
 565:..\FreeRTOS/queue.c **** 		}
 566:..\FreeRTOS/queue.c **** 
 567:..\FreeRTOS/queue.c **** 		return pxReturn;
 568:..\FreeRTOS/queue.c **** 	} /*lint !e818 xSemaphore cannot be a pointer to const because it is a typedef. */
 569:..\FreeRTOS/queue.c **** 
 570:..\FreeRTOS/queue.c **** #endif
 571:..\FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
 572:..\FreeRTOS/queue.c **** 
 573:..\FreeRTOS/queue.c **** #if ( configUSE_RECURSIVE_MUTEXES == 1 )
 574:..\FreeRTOS/queue.c **** 
 575:..\FreeRTOS/queue.c **** 	BaseType_t xQueueGiveMutexRecursive( QueueHandle_t xMutex )
 576:..\FreeRTOS/queue.c **** 	{
 577:..\FreeRTOS/queue.c **** 	BaseType_t xReturn;
 578:..\FreeRTOS/queue.c **** 	Queue_t * const pxMutex = ( Queue_t * ) xMutex;
 579:..\FreeRTOS/queue.c **** 
 580:..\FreeRTOS/queue.c **** 		configASSERT( pxMutex );
 581:..\FreeRTOS/queue.c **** 
 582:..\FreeRTOS/queue.c **** 		/* If this is the task that holds the mutex then pxMutexHolder will not
 583:..\FreeRTOS/queue.c **** 		change outside of this task.  If this task does not hold the mutex then
 584:..\FreeRTOS/queue.c **** 		pxMutexHolder can never coincidentally equal the tasks handle, and as
 585:..\FreeRTOS/queue.c **** 		this is the only condition we are interested in it does not matter if
 586:..\FreeRTOS/queue.c **** 		pxMutexHolder is accessed simultaneously by another task.  Therefore no
 587:..\FreeRTOS/queue.c **** 		mutual exclusion is required to test the pxMutexHolder variable. */
 588:..\FreeRTOS/queue.c **** 		if( pxMutex->pxMutexHolder == ( void * ) xTaskGetCurrentTaskHandle() ) /*lint !e961 Not a redunda
 589:..\FreeRTOS/queue.c **** 		{
 590:..\FreeRTOS/queue.c **** 			traceGIVE_MUTEX_RECURSIVE( pxMutex );
 591:..\FreeRTOS/queue.c **** 
 592:..\FreeRTOS/queue.c **** 			/* uxRecursiveCallCount cannot be zero if pxMutexHolder is equal to
 593:..\FreeRTOS/queue.c **** 			the task handle, therefore no underflow check is required.  Also,
 594:..\FreeRTOS/queue.c **** 			uxRecursiveCallCount is only modified by the mutex holder, and as
 595:..\FreeRTOS/queue.c **** 			there can only be one, no mutual exclusion is required to modify the
 596:..\FreeRTOS/queue.c **** 			uxRecursiveCallCount member. */
 597:..\FreeRTOS/queue.c **** 			( pxMutex->u.uxRecursiveCallCount )--;
 598:..\FreeRTOS/queue.c **** 
 599:..\FreeRTOS/queue.c **** 			/* Has the recursive call count unwound to 0? */
 600:..\FreeRTOS/queue.c **** 			if( pxMutex->u.uxRecursiveCallCount == ( UBaseType_t ) 0 )
 601:..\FreeRTOS/queue.c **** 			{
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccApaELb.s 			page 12


 602:..\FreeRTOS/queue.c **** 				/* Return the mutex.  This will automatically unblock any other
 603:..\FreeRTOS/queue.c **** 				task that might be waiting to access the mutex. */
 604:..\FreeRTOS/queue.c **** 				( void ) xQueueGenericSend( pxMutex, NULL, queueMUTEX_GIVE_BLOCK_TIME, queueSEND_TO_BACK );
 605:..\FreeRTOS/queue.c **** 			}
 606:..\FreeRTOS/queue.c **** 			else
 607:..\FreeRTOS/queue.c **** 			{
 608:..\FreeRTOS/queue.c **** 				mtCOVERAGE_TEST_MARKER();
 609:..\FreeRTOS/queue.c **** 			}
 610:..\FreeRTOS/queue.c **** 
 611:..\FreeRTOS/queue.c **** 			xReturn = pdPASS;
 612:..\FreeRTOS/queue.c **** 		}
 613:..\FreeRTOS/queue.c **** 		else
 614:..\FreeRTOS/queue.c **** 		{
 615:..\FreeRTOS/queue.c **** 			/* The mutex cannot be given because the calling task is not the
 616:..\FreeRTOS/queue.c **** 			holder. */
 617:..\FreeRTOS/queue.c **** 			xReturn = pdFAIL;
 618:..\FreeRTOS/queue.c **** 
 619:..\FreeRTOS/queue.c **** 			traceGIVE_MUTEX_RECURSIVE_FAILED( pxMutex );
 620:..\FreeRTOS/queue.c **** 		}
 621:..\FreeRTOS/queue.c **** 
 622:..\FreeRTOS/queue.c **** 		return xReturn;
 623:..\FreeRTOS/queue.c **** 	}
 624:..\FreeRTOS/queue.c **** 
 625:..\FreeRTOS/queue.c **** #endif /* configUSE_RECURSIVE_MUTEXES */
 626:..\FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
 627:..\FreeRTOS/queue.c **** 
 628:..\FreeRTOS/queue.c **** #if ( configUSE_RECURSIVE_MUTEXES == 1 )
 629:..\FreeRTOS/queue.c **** 
 630:..\FreeRTOS/queue.c **** 	BaseType_t xQueueTakeMutexRecursive( QueueHandle_t xMutex, TickType_t xTicksToWait )
 631:..\FreeRTOS/queue.c **** 	{
 632:..\FreeRTOS/queue.c **** 	BaseType_t xReturn;
 633:..\FreeRTOS/queue.c **** 	Queue_t * const pxMutex = ( Queue_t * ) xMutex;
 634:..\FreeRTOS/queue.c **** 
 635:..\FreeRTOS/queue.c **** 		configASSERT( pxMutex );
 636:..\FreeRTOS/queue.c **** 
 637:..\FreeRTOS/queue.c **** 		/* Comments regarding mutual exclusion as per those within
 638:..\FreeRTOS/queue.c **** 		xQueueGiveMutexRecursive(). */
 639:..\FreeRTOS/queue.c **** 
 640:..\FreeRTOS/queue.c **** 		traceTAKE_MUTEX_RECURSIVE( pxMutex );
 641:..\FreeRTOS/queue.c **** 
 642:..\FreeRTOS/queue.c **** 		if( pxMutex->pxMutexHolder == ( void * ) xTaskGetCurrentTaskHandle() ) /*lint !e961 Cast is not r
 643:..\FreeRTOS/queue.c **** 		{
 644:..\FreeRTOS/queue.c **** 			( pxMutex->u.uxRecursiveCallCount )++;
 645:..\FreeRTOS/queue.c **** 			xReturn = pdPASS;
 646:..\FreeRTOS/queue.c **** 		}
 647:..\FreeRTOS/queue.c **** 		else
 648:..\FreeRTOS/queue.c **** 		{
 649:..\FreeRTOS/queue.c **** 			xReturn = xQueueSemaphoreTake( pxMutex, xTicksToWait );
 650:..\FreeRTOS/queue.c **** 
 651:..\FreeRTOS/queue.c **** 			/* pdPASS will only be returned if the mutex was successfully
 652:..\FreeRTOS/queue.c **** 			obtained.  The calling task may have entered the Blocked state
 653:..\FreeRTOS/queue.c **** 			before reaching here. */
 654:..\FreeRTOS/queue.c **** 			if( xReturn != pdFAIL )
 655:..\FreeRTOS/queue.c **** 			{
 656:..\FreeRTOS/queue.c **** 				( pxMutex->u.uxRecursiveCallCount )++;
 657:..\FreeRTOS/queue.c **** 			}
 658:..\FreeRTOS/queue.c **** 			else
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccApaELb.s 			page 13


 659:..\FreeRTOS/queue.c **** 			{
 660:..\FreeRTOS/queue.c **** 				traceTAKE_MUTEX_RECURSIVE_FAILED( pxMutex );
 661:..\FreeRTOS/queue.c **** 			}
 662:..\FreeRTOS/queue.c **** 		}
 663:..\FreeRTOS/queue.c **** 
 664:..\FreeRTOS/queue.c **** 		return xReturn;
 665:..\FreeRTOS/queue.c **** 	}
 666:..\FreeRTOS/queue.c **** 
 667:..\FreeRTOS/queue.c **** #endif /* configUSE_RECURSIVE_MUTEXES */
 668:..\FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
 669:..\FreeRTOS/queue.c **** 
 670:..\FreeRTOS/queue.c **** #if( ( configUSE_COUNTING_SEMAPHORES == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 1 ) )
 671:..\FreeRTOS/queue.c **** 
 672:..\FreeRTOS/queue.c **** 	QueueHandle_t xQueueCreateCountingSemaphoreStatic( const UBaseType_t uxMaxCount, const UBaseType_t
 673:..\FreeRTOS/queue.c **** 	{
 674:..\FreeRTOS/queue.c **** 	QueueHandle_t xHandle;
 675:..\FreeRTOS/queue.c **** 
 676:..\FreeRTOS/queue.c **** 		configASSERT( uxMaxCount != 0 );
 677:..\FreeRTOS/queue.c **** 		configASSERT( uxInitialCount <= uxMaxCount );
 678:..\FreeRTOS/queue.c **** 
 679:..\FreeRTOS/queue.c **** 		xHandle = xQueueGenericCreateStatic( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, NULL, pxStatic
 680:..\FreeRTOS/queue.c **** 
 681:..\FreeRTOS/queue.c **** 		if( xHandle != NULL )
 682:..\FreeRTOS/queue.c **** 		{
 683:..\FreeRTOS/queue.c **** 			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 684:..\FreeRTOS/queue.c **** 
 685:..\FreeRTOS/queue.c **** 			traceCREATE_COUNTING_SEMAPHORE();
 686:..\FreeRTOS/queue.c **** 		}
 687:..\FreeRTOS/queue.c **** 		else
 688:..\FreeRTOS/queue.c **** 		{
 689:..\FreeRTOS/queue.c **** 			traceCREATE_COUNTING_SEMAPHORE_FAILED();
 690:..\FreeRTOS/queue.c **** 		}
 691:..\FreeRTOS/queue.c **** 
 692:..\FreeRTOS/queue.c **** 		return xHandle;
 693:..\FreeRTOS/queue.c **** 	}
 694:..\FreeRTOS/queue.c **** 
 695:..\FreeRTOS/queue.c **** #endif /* ( ( configUSE_COUNTING_SEMAPHORES == 1 ) && ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) ) *
 696:..\FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
 697:..\FreeRTOS/queue.c **** 
 698:..\FreeRTOS/queue.c **** #if( ( configUSE_COUNTING_SEMAPHORES == 1 ) && ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) )
 699:..\FreeRTOS/queue.c **** 
 700:..\FreeRTOS/queue.c **** 	QueueHandle_t xQueueCreateCountingSemaphore( const UBaseType_t uxMaxCount, const UBaseType_t uxIni
 701:..\FreeRTOS/queue.c **** 	{
 702:..\FreeRTOS/queue.c **** 	QueueHandle_t xHandle;
 703:..\FreeRTOS/queue.c **** 
 704:..\FreeRTOS/queue.c **** 		configASSERT( uxMaxCount != 0 );
 705:..\FreeRTOS/queue.c **** 		configASSERT( uxInitialCount <= uxMaxCount );
 706:..\FreeRTOS/queue.c **** 
 707:..\FreeRTOS/queue.c **** 		xHandle = xQueueGenericCreate( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, queueQUEUE_TYPE_COUN
 708:..\FreeRTOS/queue.c **** 
 709:..\FreeRTOS/queue.c **** 		if( xHandle != NULL )
 710:..\FreeRTOS/queue.c **** 		{
 711:..\FreeRTOS/queue.c **** 			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 712:..\FreeRTOS/queue.c **** 
 713:..\FreeRTOS/queue.c **** 			traceCREATE_COUNTING_SEMAPHORE();
 714:..\FreeRTOS/queue.c **** 		}
 715:..\FreeRTOS/queue.c **** 		else
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccApaELb.s 			page 14


 716:..\FreeRTOS/queue.c **** 		{
 717:..\FreeRTOS/queue.c **** 			traceCREATE_COUNTING_SEMAPHORE_FAILED();
 718:..\FreeRTOS/queue.c **** 		}
 719:..\FreeRTOS/queue.c **** 
 720:..\FreeRTOS/queue.c **** 		return xHandle;
 721:..\FreeRTOS/queue.c **** 	}
 722:..\FreeRTOS/queue.c **** 
 723:..\FreeRTOS/queue.c **** #endif /* ( ( configUSE_COUNTING_SEMAPHORES == 1 ) && ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) ) *
 724:..\FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
 725:..\FreeRTOS/queue.c **** 
 726:..\FreeRTOS/queue.c **** BaseType_t xQueueGenericSend( QueueHandle_t xQueue, const void * const pvItemToQueue, TickType_t xT
 727:..\FreeRTOS/queue.c **** {
 728:..\FreeRTOS/queue.c **** BaseType_t xEntryTimeSet = pdFALSE, xYieldRequired;
 729:..\FreeRTOS/queue.c **** TimeOut_t xTimeOut;
 730:..\FreeRTOS/queue.c **** Queue_t * const pxQueue = ( Queue_t * ) xQueue;
 731:..\FreeRTOS/queue.c **** 
 732:..\FreeRTOS/queue.c **** 	configASSERT( pxQueue );
 733:..\FreeRTOS/queue.c **** 	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 734:..\FreeRTOS/queue.c **** 	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 735:..\FreeRTOS/queue.c **** 	#if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
 736:..\FreeRTOS/queue.c **** 	{
 737:..\FreeRTOS/queue.c **** 		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 )
 738:..\FreeRTOS/queue.c **** 	}
 739:..\FreeRTOS/queue.c **** 	#endif
 740:..\FreeRTOS/queue.c **** 
 741:..\FreeRTOS/queue.c **** 
 742:..\FreeRTOS/queue.c **** 	/* This function relaxes the coding standard somewhat to allow return
 743:..\FreeRTOS/queue.c **** 	statements within the function itself.  This is done in the interest
 744:..\FreeRTOS/queue.c **** 	of execution time efficiency. */
 745:..\FreeRTOS/queue.c **** 	for( ;; )
 746:..\FreeRTOS/queue.c **** 	{
 747:..\FreeRTOS/queue.c **** 		taskENTER_CRITICAL();
 748:..\FreeRTOS/queue.c **** 		{
 749:..\FreeRTOS/queue.c **** 			/* Is there room on the queue now?  The running task must be the
 750:..\FreeRTOS/queue.c **** 			highest priority task wanting to access the queue.  If the head item
 751:..\FreeRTOS/queue.c **** 			in the queue is to be overwritten then it does not matter if the
 752:..\FreeRTOS/queue.c **** 			queue is full. */
 753:..\FreeRTOS/queue.c **** 			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 754:..\FreeRTOS/queue.c **** 			{
 755:..\FreeRTOS/queue.c **** 				traceQUEUE_SEND( pxQueue );
 756:..\FreeRTOS/queue.c **** 				xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 757:..\FreeRTOS/queue.c **** 
 758:..\FreeRTOS/queue.c **** 				#if ( configUSE_QUEUE_SETS == 1 )
 759:..\FreeRTOS/queue.c **** 				{
 760:..\FreeRTOS/queue.c **** 					if( pxQueue->pxQueueSetContainer != NULL )
 761:..\FreeRTOS/queue.c **** 					{
 762:..\FreeRTOS/queue.c **** 						if( prvNotifyQueueSetContainer( pxQueue, xCopyPosition ) != pdFALSE )
 763:..\FreeRTOS/queue.c **** 						{
 764:..\FreeRTOS/queue.c **** 							/* The queue is a member of a queue set, and posting
 765:..\FreeRTOS/queue.c **** 							to the queue set caused a higher priority task to
 766:..\FreeRTOS/queue.c **** 							unblock. A context switch is required. */
 767:..\FreeRTOS/queue.c **** 							queueYIELD_IF_USING_PREEMPTION();
 768:..\FreeRTOS/queue.c **** 						}
 769:..\FreeRTOS/queue.c **** 						else
 770:..\FreeRTOS/queue.c **** 						{
 771:..\FreeRTOS/queue.c **** 							mtCOVERAGE_TEST_MARKER();
 772:..\FreeRTOS/queue.c **** 						}
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccApaELb.s 			page 15


 773:..\FreeRTOS/queue.c **** 					}
 774:..\FreeRTOS/queue.c **** 					else
 775:..\FreeRTOS/queue.c **** 					{
 776:..\FreeRTOS/queue.c **** 						/* If there was a task waiting for data to arrive on the
 777:..\FreeRTOS/queue.c **** 						queue then unblock it now. */
 778:..\FreeRTOS/queue.c **** 						if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 779:..\FreeRTOS/queue.c **** 						{
 780:..\FreeRTOS/queue.c **** 							if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 781:..\FreeRTOS/queue.c **** 							{
 782:..\FreeRTOS/queue.c **** 								/* The unblocked task has a priority higher than
 783:..\FreeRTOS/queue.c **** 								our own so yield immediately.  Yes it is ok to
 784:..\FreeRTOS/queue.c **** 								do this from within the critical section - the
 785:..\FreeRTOS/queue.c **** 								kernel takes care of that. */
 786:..\FreeRTOS/queue.c **** 								queueYIELD_IF_USING_PREEMPTION();
 787:..\FreeRTOS/queue.c **** 							}
 788:..\FreeRTOS/queue.c **** 							else
 789:..\FreeRTOS/queue.c **** 							{
 790:..\FreeRTOS/queue.c **** 								mtCOVERAGE_TEST_MARKER();
 791:..\FreeRTOS/queue.c **** 							}
 792:..\FreeRTOS/queue.c **** 						}
 793:..\FreeRTOS/queue.c **** 						else if( xYieldRequired != pdFALSE )
 794:..\FreeRTOS/queue.c **** 						{
 795:..\FreeRTOS/queue.c **** 							/* This path is a special case that will only get
 796:..\FreeRTOS/queue.c **** 							executed if the task was holding multiple mutexes
 797:..\FreeRTOS/queue.c **** 							and the mutexes were given back in an order that is
 798:..\FreeRTOS/queue.c **** 							different to that in which they were taken. */
 799:..\FreeRTOS/queue.c **** 							queueYIELD_IF_USING_PREEMPTION();
 800:..\FreeRTOS/queue.c **** 						}
 801:..\FreeRTOS/queue.c **** 						else
 802:..\FreeRTOS/queue.c **** 						{
 803:..\FreeRTOS/queue.c **** 							mtCOVERAGE_TEST_MARKER();
 804:..\FreeRTOS/queue.c **** 						}
 805:..\FreeRTOS/queue.c **** 					}
 806:..\FreeRTOS/queue.c **** 				}
 807:..\FreeRTOS/queue.c **** 				#else /* configUSE_QUEUE_SETS */
 808:..\FreeRTOS/queue.c **** 				{
 809:..\FreeRTOS/queue.c **** 					/* If there was a task waiting for data to arrive on the
 810:..\FreeRTOS/queue.c **** 					queue then unblock it now. */
 811:..\FreeRTOS/queue.c **** 					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 812:..\FreeRTOS/queue.c **** 					{
 813:..\FreeRTOS/queue.c **** 						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 814:..\FreeRTOS/queue.c **** 						{
 815:..\FreeRTOS/queue.c **** 							/* The unblocked task has a priority higher than
 816:..\FreeRTOS/queue.c **** 							our own so yield immediately.  Yes it is ok to do
 817:..\FreeRTOS/queue.c **** 							this from within the critical section - the kernel
 818:..\FreeRTOS/queue.c **** 							takes care of that. */
 819:..\FreeRTOS/queue.c **** 							queueYIELD_IF_USING_PREEMPTION();
 820:..\FreeRTOS/queue.c **** 						}
 821:..\FreeRTOS/queue.c **** 						else
 822:..\FreeRTOS/queue.c **** 						{
 823:..\FreeRTOS/queue.c **** 							mtCOVERAGE_TEST_MARKER();
 824:..\FreeRTOS/queue.c **** 						}
 825:..\FreeRTOS/queue.c **** 					}
 826:..\FreeRTOS/queue.c **** 					else if( xYieldRequired != pdFALSE )
 827:..\FreeRTOS/queue.c **** 					{
 828:..\FreeRTOS/queue.c **** 						/* This path is a special case that will only get
 829:..\FreeRTOS/queue.c **** 						executed if the task was holding multiple mutexes and
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccApaELb.s 			page 16


 830:..\FreeRTOS/queue.c **** 						the mutexes were given back in an order that is
 831:..\FreeRTOS/queue.c **** 						different to that in which they were taken. */
 832:..\FreeRTOS/queue.c **** 						queueYIELD_IF_USING_PREEMPTION();
 833:..\FreeRTOS/queue.c **** 					}
 834:..\FreeRTOS/queue.c **** 					else
 835:..\FreeRTOS/queue.c **** 					{
 836:..\FreeRTOS/queue.c **** 						mtCOVERAGE_TEST_MARKER();
 837:..\FreeRTOS/queue.c **** 					}
 838:..\FreeRTOS/queue.c **** 				}
 839:..\FreeRTOS/queue.c **** 				#endif /* configUSE_QUEUE_SETS */
 840:..\FreeRTOS/queue.c **** 
 841:..\FreeRTOS/queue.c **** 				taskEXIT_CRITICAL();
 842:..\FreeRTOS/queue.c **** 				return pdPASS;
 843:..\FreeRTOS/queue.c **** 			}
 844:..\FreeRTOS/queue.c **** 			else
 845:..\FreeRTOS/queue.c **** 			{
 846:..\FreeRTOS/queue.c **** 				if( xTicksToWait == ( TickType_t ) 0 )
 847:..\FreeRTOS/queue.c **** 				{
 848:..\FreeRTOS/queue.c **** 					/* The queue was full and no block time is specified (or
 849:..\FreeRTOS/queue.c **** 					the block time has expired) so leave now. */
 850:..\FreeRTOS/queue.c **** 					taskEXIT_CRITICAL();
 851:..\FreeRTOS/queue.c **** 
 852:..\FreeRTOS/queue.c **** 					/* Return to the original privilege level before exiting
 853:..\FreeRTOS/queue.c **** 					the function. */
 854:..\FreeRTOS/queue.c **** 					traceQUEUE_SEND_FAILED( pxQueue );
 855:..\FreeRTOS/queue.c **** 					return errQUEUE_FULL;
 856:..\FreeRTOS/queue.c **** 				}
 857:..\FreeRTOS/queue.c **** 				else if( xEntryTimeSet == pdFALSE )
 858:..\FreeRTOS/queue.c **** 				{
 859:..\FreeRTOS/queue.c **** 					/* The queue was full and a block time was specified so
 860:..\FreeRTOS/queue.c **** 					configure the timeout structure. */
 861:..\FreeRTOS/queue.c **** 					vTaskInternalSetTimeOutState( &xTimeOut );
 862:..\FreeRTOS/queue.c **** 					xEntryTimeSet = pdTRUE;
 863:..\FreeRTOS/queue.c **** 				}
 864:..\FreeRTOS/queue.c **** 				else
 865:..\FreeRTOS/queue.c **** 				{
 866:..\FreeRTOS/queue.c **** 					/* Entry time was already set. */
 867:..\FreeRTOS/queue.c **** 					mtCOVERAGE_TEST_MARKER();
 868:..\FreeRTOS/queue.c **** 				}
 869:..\FreeRTOS/queue.c **** 			}
 870:..\FreeRTOS/queue.c **** 		}
 871:..\FreeRTOS/queue.c **** 		taskEXIT_CRITICAL();
 872:..\FreeRTOS/queue.c **** 
 873:..\FreeRTOS/queue.c **** 		/* Interrupts and other tasks can send to and receive from the queue
 874:..\FreeRTOS/queue.c **** 		now the critical section has been exited. */
 875:..\FreeRTOS/queue.c **** 
 876:..\FreeRTOS/queue.c **** 		vTaskSuspendAll();
 877:..\FreeRTOS/queue.c **** 		prvLockQueue( pxQueue );
 878:..\FreeRTOS/queue.c **** 
 879:..\FreeRTOS/queue.c **** 		/* Update the timeout state to see if it has expired yet. */
 880:..\FreeRTOS/queue.c **** 		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 881:..\FreeRTOS/queue.c **** 		{
 882:..\FreeRTOS/queue.c **** 			if( prvIsQueueFull( pxQueue ) != pdFALSE )
 883:..\FreeRTOS/queue.c **** 			{
 884:..\FreeRTOS/queue.c **** 				traceBLOCKING_ON_QUEUE_SEND( pxQueue );
 885:..\FreeRTOS/queue.c **** 				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
 886:..\FreeRTOS/queue.c **** 
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccApaELb.s 			page 17


 887:..\FreeRTOS/queue.c **** 				/* Unlocking the queue means queue events can effect the
 888:..\FreeRTOS/queue.c **** 				event list.  It is possible that interrupts occurring now
 889:..\FreeRTOS/queue.c **** 				remove this task from the event list again - but as the
 890:..\FreeRTOS/queue.c **** 				scheduler is suspended the task will go onto the pending
 891:..\FreeRTOS/queue.c **** 				ready last instead of the actual ready list. */
 892:..\FreeRTOS/queue.c **** 				prvUnlockQueue( pxQueue );
 893:..\FreeRTOS/queue.c **** 
 894:..\FreeRTOS/queue.c **** 				/* Resuming the scheduler will move tasks from the pending
 895:..\FreeRTOS/queue.c **** 				ready list into the ready list - so it is feasible that this
 896:..\FreeRTOS/queue.c **** 				task is already in a ready list before it yields - in which
 897:..\FreeRTOS/queue.c **** 				case the yield will not cause a context switch unless there
 898:..\FreeRTOS/queue.c **** 				is also a higher priority task in the pending ready list. */
 899:..\FreeRTOS/queue.c **** 				if( xTaskResumeAll() == pdFALSE )
 900:..\FreeRTOS/queue.c **** 				{
 901:..\FreeRTOS/queue.c **** 					portYIELD_WITHIN_API();
 902:..\FreeRTOS/queue.c **** 				}
 903:..\FreeRTOS/queue.c **** 			}
 904:..\FreeRTOS/queue.c **** 			else
 905:..\FreeRTOS/queue.c **** 			{
 906:..\FreeRTOS/queue.c **** 				/* Try again. */
 907:..\FreeRTOS/queue.c **** 				prvUnlockQueue( pxQueue );
 908:..\FreeRTOS/queue.c **** 				( void ) xTaskResumeAll();
 909:..\FreeRTOS/queue.c **** 			}
 910:..\FreeRTOS/queue.c **** 		}
 911:..\FreeRTOS/queue.c **** 		else
 912:..\FreeRTOS/queue.c **** 		{
 913:..\FreeRTOS/queue.c **** 			/* The timeout has expired. */
 914:..\FreeRTOS/queue.c **** 			prvUnlockQueue( pxQueue );
 915:..\FreeRTOS/queue.c **** 			( void ) xTaskResumeAll();
 916:..\FreeRTOS/queue.c **** 
 917:..\FreeRTOS/queue.c **** 			traceQUEUE_SEND_FAILED( pxQueue );
 918:..\FreeRTOS/queue.c **** 			return errQUEUE_FULL;
 919:..\FreeRTOS/queue.c **** 		}
 920:..\FreeRTOS/queue.c **** 	}
 921:..\FreeRTOS/queue.c **** }
 922:..\FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
 923:..\FreeRTOS/queue.c **** 
 924:..\FreeRTOS/queue.c **** BaseType_t xQueueGenericSendFromISR( QueueHandle_t xQueue, const void * const pvItemToQueue, BaseTy
 925:..\FreeRTOS/queue.c **** {
 926:..\FreeRTOS/queue.c **** BaseType_t xReturn;
 927:..\FreeRTOS/queue.c **** UBaseType_t uxSavedInterruptStatus;
 928:..\FreeRTOS/queue.c **** Queue_t * const pxQueue = ( Queue_t * ) xQueue;
 929:..\FreeRTOS/queue.c **** 
 930:..\FreeRTOS/queue.c **** 	configASSERT( pxQueue );
 931:..\FreeRTOS/queue.c **** 	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 932:..\FreeRTOS/queue.c **** 	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 933:..\FreeRTOS/queue.c **** 
 934:..\FreeRTOS/queue.c **** 	/* RTOS ports that support interrupt nesting have the concept of a maximum
 935:..\FreeRTOS/queue.c **** 	system call (or maximum API call) interrupt priority.  Interrupts that are
 936:..\FreeRTOS/queue.c **** 	above the maximum system call priority are kept permanently enabled, even
 937:..\FreeRTOS/queue.c **** 	when the RTOS kernel is in a critical section, but cannot make any calls to
 938:..\FreeRTOS/queue.c **** 	FreeRTOS API functions.  If configASSERT() is defined in FreeRTOSConfig.h
 939:..\FreeRTOS/queue.c **** 	then portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
 940:..\FreeRTOS/queue.c **** 	failure if a FreeRTOS API function is called from an interrupt that has been
 941:..\FreeRTOS/queue.c **** 	assigned a priority above the configured maximum system call priority.
 942:..\FreeRTOS/queue.c **** 	Only FreeRTOS functions that end in FromISR can be called from interrupts
 943:..\FreeRTOS/queue.c **** 	that have been assigned a priority at or (logically) below the maximum
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccApaELb.s 			page 18


 944:..\FreeRTOS/queue.c **** 	system call	interrupt priority.  FreeRTOS maintains a separate interrupt
 945:..\FreeRTOS/queue.c **** 	safe API to ensure interrupt entry is as fast and as simple as possible.
 946:..\FreeRTOS/queue.c **** 	More information (albeit Cortex-M specific) is provided on the following
 947:..\FreeRTOS/queue.c **** 	link: http://www.freertos.org/RTOS-Cortex-M3-M4.html */
 948:..\FreeRTOS/queue.c **** 	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 949:..\FreeRTOS/queue.c **** 
 950:..\FreeRTOS/queue.c **** 	/* Similar to xQueueGenericSend, except without blocking if there is no room
 951:..\FreeRTOS/queue.c **** 	in the queue.  Also don't directly wake a task that was blocked on a queue
 952:..\FreeRTOS/queue.c **** 	read, instead return a flag to say whether a context switch is required or
 953:..\FreeRTOS/queue.c **** 	not (i.e. has a task with a higher priority than us been woken by this
 954:..\FreeRTOS/queue.c **** 	post). */
 955:..\FreeRTOS/queue.c **** 	uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
 956:..\FreeRTOS/queue.c **** 	{
 957:..\FreeRTOS/queue.c **** 		if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 958:..\FreeRTOS/queue.c **** 		{
 959:..\FreeRTOS/queue.c **** 			const int8_t cTxLock = pxQueue->cTxLock;
 960:..\FreeRTOS/queue.c **** 
 961:..\FreeRTOS/queue.c **** 			traceQUEUE_SEND_FROM_ISR( pxQueue );
 962:..\FreeRTOS/queue.c **** 
 963:..\FreeRTOS/queue.c **** 			/* Semaphores use xQueueGiveFromISR(), so pxQueue will not be a
 964:..\FreeRTOS/queue.c **** 			semaphore or mutex.  That means prvCopyDataToQueue() cannot result
 965:..\FreeRTOS/queue.c **** 			in a task disinheriting a priority and prvCopyDataToQueue() can be
 966:..\FreeRTOS/queue.c **** 			called here even though the disinherit function does not check if
 967:..\FreeRTOS/queue.c **** 			the scheduler is suspended before accessing the ready lists. */
 968:..\FreeRTOS/queue.c **** 			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 969:..\FreeRTOS/queue.c **** 
 970:..\FreeRTOS/queue.c **** 			/* The event list is not altered if the queue is locked.  This will
 971:..\FreeRTOS/queue.c **** 			be done when the queue is unlocked later. */
 972:..\FreeRTOS/queue.c **** 			if( cTxLock == queueUNLOCKED )
 973:..\FreeRTOS/queue.c **** 			{
 974:..\FreeRTOS/queue.c **** 				#if ( configUSE_QUEUE_SETS == 1 )
 975:..\FreeRTOS/queue.c **** 				{
 976:..\FreeRTOS/queue.c **** 					if( pxQueue->pxQueueSetContainer != NULL )
 977:..\FreeRTOS/queue.c **** 					{
 978:..\FreeRTOS/queue.c **** 						if( prvNotifyQueueSetContainer( pxQueue, xCopyPosition ) != pdFALSE )
 979:..\FreeRTOS/queue.c **** 						{
 980:..\FreeRTOS/queue.c **** 							/* The queue is a member of a queue set, and posting
 981:..\FreeRTOS/queue.c **** 							to the queue set caused a higher priority task to
 982:..\FreeRTOS/queue.c **** 							unblock.  A context switch is required. */
 983:..\FreeRTOS/queue.c **** 							if( pxHigherPriorityTaskWoken != NULL )
 984:..\FreeRTOS/queue.c **** 							{
 985:..\FreeRTOS/queue.c **** 								*pxHigherPriorityTaskWoken = pdTRUE;
 986:..\FreeRTOS/queue.c **** 							}
 987:..\FreeRTOS/queue.c **** 							else
 988:..\FreeRTOS/queue.c **** 							{
 989:..\FreeRTOS/queue.c **** 								mtCOVERAGE_TEST_MARKER();
 990:..\FreeRTOS/queue.c **** 							}
 991:..\FreeRTOS/queue.c **** 						}
 992:..\FreeRTOS/queue.c **** 						else
 993:..\FreeRTOS/queue.c **** 						{
 994:..\FreeRTOS/queue.c **** 							mtCOVERAGE_TEST_MARKER();
 995:..\FreeRTOS/queue.c **** 						}
 996:..\FreeRTOS/queue.c **** 					}
 997:..\FreeRTOS/queue.c **** 					else
 998:..\FreeRTOS/queue.c **** 					{
 999:..\FreeRTOS/queue.c **** 						if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
1000:..\FreeRTOS/queue.c **** 						{
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccApaELb.s 			page 19


1001:..\FreeRTOS/queue.c **** 							if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
1002:..\FreeRTOS/queue.c **** 							{
1003:..\FreeRTOS/queue.c **** 								/* The task waiting has a higher priority so
1004:..\FreeRTOS/queue.c **** 								record that a context switch is required. */
1005:..\FreeRTOS/queue.c **** 								if( pxHigherPriorityTaskWoken != NULL )
1006:..\FreeRTOS/queue.c **** 								{
1007:..\FreeRTOS/queue.c **** 									*pxHigherPriorityTaskWoken = pdTRUE;
1008:..\FreeRTOS/queue.c **** 								}
1009:..\FreeRTOS/queue.c **** 								else
1010:..\FreeRTOS/queue.c **** 								{
1011:..\FreeRTOS/queue.c **** 									mtCOVERAGE_TEST_MARKER();
1012:..\FreeRTOS/queue.c **** 								}
1013:..\FreeRTOS/queue.c **** 							}
1014:..\FreeRTOS/queue.c **** 							else
1015:..\FreeRTOS/queue.c **** 							{
1016:..\FreeRTOS/queue.c **** 								mtCOVERAGE_TEST_MARKER();
1017:..\FreeRTOS/queue.c **** 							}
1018:..\FreeRTOS/queue.c **** 						}
1019:..\FreeRTOS/queue.c **** 						else
1020:..\FreeRTOS/queue.c **** 						{
1021:..\FreeRTOS/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1022:..\FreeRTOS/queue.c **** 						}
1023:..\FreeRTOS/queue.c **** 					}
1024:..\FreeRTOS/queue.c **** 				}
1025:..\FreeRTOS/queue.c **** 				#else /* configUSE_QUEUE_SETS */
1026:..\FreeRTOS/queue.c **** 				{
1027:..\FreeRTOS/queue.c **** 					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
1028:..\FreeRTOS/queue.c **** 					{
1029:..\FreeRTOS/queue.c **** 						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
1030:..\FreeRTOS/queue.c **** 						{
1031:..\FreeRTOS/queue.c **** 							/* The task waiting has a higher priority so record that a
1032:..\FreeRTOS/queue.c **** 							context	switch is required. */
1033:..\FreeRTOS/queue.c **** 							if( pxHigherPriorityTaskWoken != NULL )
1034:..\FreeRTOS/queue.c **** 							{
1035:..\FreeRTOS/queue.c **** 								*pxHigherPriorityTaskWoken = pdTRUE;
1036:..\FreeRTOS/queue.c **** 							}
1037:..\FreeRTOS/queue.c **** 							else
1038:..\FreeRTOS/queue.c **** 							{
1039:..\FreeRTOS/queue.c **** 								mtCOVERAGE_TEST_MARKER();
1040:..\FreeRTOS/queue.c **** 							}
1041:..\FreeRTOS/queue.c **** 						}
1042:..\FreeRTOS/queue.c **** 						else
1043:..\FreeRTOS/queue.c **** 						{
1044:..\FreeRTOS/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1045:..\FreeRTOS/queue.c **** 						}
1046:..\FreeRTOS/queue.c **** 					}
1047:..\FreeRTOS/queue.c **** 					else
1048:..\FreeRTOS/queue.c **** 					{
1049:..\FreeRTOS/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1050:..\FreeRTOS/queue.c **** 					}
1051:..\FreeRTOS/queue.c **** 				}
1052:..\FreeRTOS/queue.c **** 				#endif /* configUSE_QUEUE_SETS */
1053:..\FreeRTOS/queue.c **** 			}
1054:..\FreeRTOS/queue.c **** 			else
1055:..\FreeRTOS/queue.c **** 			{
1056:..\FreeRTOS/queue.c **** 				/* Increment the lock count so the task that unlocks the queue
1057:..\FreeRTOS/queue.c **** 				knows that data was posted while it was locked. */
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccApaELb.s 			page 20


1058:..\FreeRTOS/queue.c **** 				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
1059:..\FreeRTOS/queue.c **** 			}
1060:..\FreeRTOS/queue.c **** 
1061:..\FreeRTOS/queue.c **** 			xReturn = pdPASS;
1062:..\FreeRTOS/queue.c **** 		}
1063:..\FreeRTOS/queue.c **** 		else
1064:..\FreeRTOS/queue.c **** 		{
1065:..\FreeRTOS/queue.c **** 			traceQUEUE_SEND_FROM_ISR_FAILED( pxQueue );
1066:..\FreeRTOS/queue.c **** 			xReturn = errQUEUE_FULL;
1067:..\FreeRTOS/queue.c **** 		}
1068:..\FreeRTOS/queue.c **** 	}
1069:..\FreeRTOS/queue.c **** 	portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
1070:..\FreeRTOS/queue.c **** 
1071:..\FreeRTOS/queue.c **** 	return xReturn;
1072:..\FreeRTOS/queue.c **** }
1073:..\FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
1074:..\FreeRTOS/queue.c **** 
1075:..\FreeRTOS/queue.c **** BaseType_t xQueueGiveFromISR( QueueHandle_t xQueue, BaseType_t * const pxHigherPriorityTaskWoken )
1076:..\FreeRTOS/queue.c **** {
1077:..\FreeRTOS/queue.c **** BaseType_t xReturn;
1078:..\FreeRTOS/queue.c **** UBaseType_t uxSavedInterruptStatus;
1079:..\FreeRTOS/queue.c **** Queue_t * const pxQueue = ( Queue_t * ) xQueue;
1080:..\FreeRTOS/queue.c **** 
1081:..\FreeRTOS/queue.c **** 	/* Similar to xQueueGenericSendFromISR() but used with semaphores where the
1082:..\FreeRTOS/queue.c **** 	item size is 0.  Don't directly wake a task that was blocked on a queue
1083:..\FreeRTOS/queue.c **** 	read, instead return a flag to say whether a context switch is required or
1084:..\FreeRTOS/queue.c **** 	not (i.e. has a task with a higher priority than us been woken by this
1085:..\FreeRTOS/queue.c **** 	post). */
1086:..\FreeRTOS/queue.c **** 
1087:..\FreeRTOS/queue.c **** 	configASSERT( pxQueue );
1088:..\FreeRTOS/queue.c **** 
1089:..\FreeRTOS/queue.c **** 	/* xQueueGenericSendFromISR() should be used instead of xQueueGiveFromISR()
1090:..\FreeRTOS/queue.c **** 	if the item size is not 0. */
1091:..\FreeRTOS/queue.c **** 	configASSERT( pxQueue->uxItemSize == 0 );
1092:..\FreeRTOS/queue.c **** 
1093:..\FreeRTOS/queue.c **** 	/* Normally a mutex would not be given from an interrupt, especially if
1094:..\FreeRTOS/queue.c **** 	there is a mutex holder, as priority inheritance makes no sense for an
1095:..\FreeRTOS/queue.c **** 	interrupts, only tasks. */
1096:..\FreeRTOS/queue.c **** 	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->pxMutexHolder != NU
1097:..\FreeRTOS/queue.c **** 
1098:..\FreeRTOS/queue.c **** 	/* RTOS ports that support interrupt nesting have the concept of a maximum
1099:..\FreeRTOS/queue.c **** 	system call (or maximum API call) interrupt priority.  Interrupts that are
1100:..\FreeRTOS/queue.c **** 	above the maximum system call priority are kept permanently enabled, even
1101:..\FreeRTOS/queue.c **** 	when the RTOS kernel is in a critical section, but cannot make any calls to
1102:..\FreeRTOS/queue.c **** 	FreeRTOS API functions.  If configASSERT() is defined in FreeRTOSConfig.h
1103:..\FreeRTOS/queue.c **** 	then portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
1104:..\FreeRTOS/queue.c **** 	failure if a FreeRTOS API function is called from an interrupt that has been
1105:..\FreeRTOS/queue.c **** 	assigned a priority above the configured maximum system call priority.
1106:..\FreeRTOS/queue.c **** 	Only FreeRTOS functions that end in FromISR can be called from interrupts
1107:..\FreeRTOS/queue.c **** 	that have been assigned a priority at or (logically) below the maximum
1108:..\FreeRTOS/queue.c **** 	system call	interrupt priority.  FreeRTOS maintains a separate interrupt
1109:..\FreeRTOS/queue.c **** 	safe API to ensure interrupt entry is as fast and as simple as possible.
1110:..\FreeRTOS/queue.c **** 	More information (albeit Cortex-M specific) is provided on the following
1111:..\FreeRTOS/queue.c **** 	link: http://www.freertos.org/RTOS-Cortex-M3-M4.html */
1112:..\FreeRTOS/queue.c **** 	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
1113:..\FreeRTOS/queue.c **** 
1114:..\FreeRTOS/queue.c **** 	uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccApaELb.s 			page 21


1115:..\FreeRTOS/queue.c **** 	{
1116:..\FreeRTOS/queue.c **** 		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
1117:..\FreeRTOS/queue.c **** 
1118:..\FreeRTOS/queue.c **** 		/* When the queue is used to implement a semaphore no data is ever
1119:..\FreeRTOS/queue.c **** 		moved through the queue but it is still valid to see if the queue 'has
1120:..\FreeRTOS/queue.c **** 		space'. */
1121:..\FreeRTOS/queue.c **** 		if( uxMessagesWaiting < pxQueue->uxLength )
1122:..\FreeRTOS/queue.c **** 		{
1123:..\FreeRTOS/queue.c **** 			const int8_t cTxLock = pxQueue->cTxLock;
1124:..\FreeRTOS/queue.c **** 
1125:..\FreeRTOS/queue.c **** 			traceQUEUE_SEND_FROM_ISR( pxQueue );
1126:..\FreeRTOS/queue.c **** 
1127:..\FreeRTOS/queue.c **** 			/* A task can only have an inherited priority if it is a mutex
1128:..\FreeRTOS/queue.c **** 			holder - and if there is a mutex holder then the mutex cannot be
1129:..\FreeRTOS/queue.c **** 			given from an ISR.  As this is the ISR version of the function it
1130:..\FreeRTOS/queue.c **** 			can be assumed there is no mutex holder and no need to determine if
1131:..\FreeRTOS/queue.c **** 			priority disinheritance is needed.  Simply increase the count of
1132:..\FreeRTOS/queue.c **** 			messages (semaphores) available. */
1133:..\FreeRTOS/queue.c **** 			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
1134:..\FreeRTOS/queue.c **** 
1135:..\FreeRTOS/queue.c **** 			/* The event list is not altered if the queue is locked.  This will
1136:..\FreeRTOS/queue.c **** 			be done when the queue is unlocked later. */
1137:..\FreeRTOS/queue.c **** 			if( cTxLock == queueUNLOCKED )
1138:..\FreeRTOS/queue.c **** 			{
1139:..\FreeRTOS/queue.c **** 				#if ( configUSE_QUEUE_SETS == 1 )
1140:..\FreeRTOS/queue.c **** 				{
1141:..\FreeRTOS/queue.c **** 					if( pxQueue->pxQueueSetContainer != NULL )
1142:..\FreeRTOS/queue.c **** 					{
1143:..\FreeRTOS/queue.c **** 						if( prvNotifyQueueSetContainer( pxQueue, queueSEND_TO_BACK ) != pdFALSE )
1144:..\FreeRTOS/queue.c **** 						{
1145:..\FreeRTOS/queue.c **** 							/* The semaphore is a member of a queue set, and
1146:..\FreeRTOS/queue.c **** 							posting	to the queue set caused a higher priority
1147:..\FreeRTOS/queue.c **** 							task to	unblock.  A context switch is required. */
1148:..\FreeRTOS/queue.c **** 							if( pxHigherPriorityTaskWoken != NULL )
1149:..\FreeRTOS/queue.c **** 							{
1150:..\FreeRTOS/queue.c **** 								*pxHigherPriorityTaskWoken = pdTRUE;
1151:..\FreeRTOS/queue.c **** 							}
1152:..\FreeRTOS/queue.c **** 							else
1153:..\FreeRTOS/queue.c **** 							{
1154:..\FreeRTOS/queue.c **** 								mtCOVERAGE_TEST_MARKER();
1155:..\FreeRTOS/queue.c **** 							}
1156:..\FreeRTOS/queue.c **** 						}
1157:..\FreeRTOS/queue.c **** 						else
1158:..\FreeRTOS/queue.c **** 						{
1159:..\FreeRTOS/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1160:..\FreeRTOS/queue.c **** 						}
1161:..\FreeRTOS/queue.c **** 					}
1162:..\FreeRTOS/queue.c **** 					else
1163:..\FreeRTOS/queue.c **** 					{
1164:..\FreeRTOS/queue.c **** 						if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
1165:..\FreeRTOS/queue.c **** 						{
1166:..\FreeRTOS/queue.c **** 							if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
1167:..\FreeRTOS/queue.c **** 							{
1168:..\FreeRTOS/queue.c **** 								/* The task waiting has a higher priority so
1169:..\FreeRTOS/queue.c **** 								record that a context switch is required. */
1170:..\FreeRTOS/queue.c **** 								if( pxHigherPriorityTaskWoken != NULL )
1171:..\FreeRTOS/queue.c **** 								{
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccApaELb.s 			page 22


1172:..\FreeRTOS/queue.c **** 									*pxHigherPriorityTaskWoken = pdTRUE;
1173:..\FreeRTOS/queue.c **** 								}
1174:..\FreeRTOS/queue.c **** 								else
1175:..\FreeRTOS/queue.c **** 								{
1176:..\FreeRTOS/queue.c **** 									mtCOVERAGE_TEST_MARKER();
1177:..\FreeRTOS/queue.c **** 								}
1178:..\FreeRTOS/queue.c **** 							}
1179:..\FreeRTOS/queue.c **** 							else
1180:..\FreeRTOS/queue.c **** 							{
1181:..\FreeRTOS/queue.c **** 								mtCOVERAGE_TEST_MARKER();
1182:..\FreeRTOS/queue.c **** 							}
1183:..\FreeRTOS/queue.c **** 						}
1184:..\FreeRTOS/queue.c **** 						else
1185:..\FreeRTOS/queue.c **** 						{
1186:..\FreeRTOS/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1187:..\FreeRTOS/queue.c **** 						}
1188:..\FreeRTOS/queue.c **** 					}
1189:..\FreeRTOS/queue.c **** 				}
1190:..\FreeRTOS/queue.c **** 				#else /* configUSE_QUEUE_SETS */
1191:..\FreeRTOS/queue.c **** 				{
1192:..\FreeRTOS/queue.c **** 					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
1193:..\FreeRTOS/queue.c **** 					{
1194:..\FreeRTOS/queue.c **** 						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
1195:..\FreeRTOS/queue.c **** 						{
1196:..\FreeRTOS/queue.c **** 							/* The task waiting has a higher priority so record that a
1197:..\FreeRTOS/queue.c **** 							context	switch is required. */
1198:..\FreeRTOS/queue.c **** 							if( pxHigherPriorityTaskWoken != NULL )
1199:..\FreeRTOS/queue.c **** 							{
1200:..\FreeRTOS/queue.c **** 								*pxHigherPriorityTaskWoken = pdTRUE;
1201:..\FreeRTOS/queue.c **** 							}
1202:..\FreeRTOS/queue.c **** 							else
1203:..\FreeRTOS/queue.c **** 							{
1204:..\FreeRTOS/queue.c **** 								mtCOVERAGE_TEST_MARKER();
1205:..\FreeRTOS/queue.c **** 							}
1206:..\FreeRTOS/queue.c **** 						}
1207:..\FreeRTOS/queue.c **** 						else
1208:..\FreeRTOS/queue.c **** 						{
1209:..\FreeRTOS/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1210:..\FreeRTOS/queue.c **** 						}
1211:..\FreeRTOS/queue.c **** 					}
1212:..\FreeRTOS/queue.c **** 					else
1213:..\FreeRTOS/queue.c **** 					{
1214:..\FreeRTOS/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1215:..\FreeRTOS/queue.c **** 					}
1216:..\FreeRTOS/queue.c **** 				}
1217:..\FreeRTOS/queue.c **** 				#endif /* configUSE_QUEUE_SETS */
1218:..\FreeRTOS/queue.c **** 			}
1219:..\FreeRTOS/queue.c **** 			else
1220:..\FreeRTOS/queue.c **** 			{
1221:..\FreeRTOS/queue.c **** 				/* Increment the lock count so the task that unlocks the queue
1222:..\FreeRTOS/queue.c **** 				knows that data was posted while it was locked. */
1223:..\FreeRTOS/queue.c **** 				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
1224:..\FreeRTOS/queue.c **** 			}
1225:..\FreeRTOS/queue.c **** 
1226:..\FreeRTOS/queue.c **** 			xReturn = pdPASS;
1227:..\FreeRTOS/queue.c **** 		}
1228:..\FreeRTOS/queue.c **** 		else
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccApaELb.s 			page 23


1229:..\FreeRTOS/queue.c **** 		{
1230:..\FreeRTOS/queue.c **** 			traceQUEUE_SEND_FROM_ISR_FAILED( pxQueue );
1231:..\FreeRTOS/queue.c **** 			xReturn = errQUEUE_FULL;
1232:..\FreeRTOS/queue.c **** 		}
1233:..\FreeRTOS/queue.c **** 	}
1234:..\FreeRTOS/queue.c **** 	portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
1235:..\FreeRTOS/queue.c **** 
1236:..\FreeRTOS/queue.c **** 	return xReturn;
1237:..\FreeRTOS/queue.c **** }
1238:..\FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
1239:..\FreeRTOS/queue.c **** 
1240:..\FreeRTOS/queue.c **** BaseType_t xQueueReceive( QueueHandle_t xQueue, void * const pvBuffer, TickType_t xTicksToWait )
1241:..\FreeRTOS/queue.c **** {
1242:..\FreeRTOS/queue.c **** BaseType_t xEntryTimeSet = pdFALSE;
1243:..\FreeRTOS/queue.c **** TimeOut_t xTimeOut;
1244:..\FreeRTOS/queue.c **** Queue_t * const pxQueue = ( Queue_t * ) xQueue;
1245:..\FreeRTOS/queue.c **** 
1246:..\FreeRTOS/queue.c **** 	/* Check the pointer is not NULL. */
1247:..\FreeRTOS/queue.c **** 	configASSERT( ( pxQueue ) );
1248:..\FreeRTOS/queue.c **** 
1249:..\FreeRTOS/queue.c **** 	/* The buffer into which data is received can only be NULL if the data size
1250:..\FreeRTOS/queue.c **** 	is zero (so no data is copied into the buffer. */
1251:..\FreeRTOS/queue.c **** 	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) )
1252:..\FreeRTOS/queue.c **** 
1253:..\FreeRTOS/queue.c **** 	/* Cannot block if the scheduler is suspended. */
1254:..\FreeRTOS/queue.c **** 	#if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
1255:..\FreeRTOS/queue.c **** 	{
1256:..\FreeRTOS/queue.c **** 		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 )
1257:..\FreeRTOS/queue.c **** 	}
1258:..\FreeRTOS/queue.c **** 	#endif
1259:..\FreeRTOS/queue.c **** 
1260:..\FreeRTOS/queue.c **** 
1261:..\FreeRTOS/queue.c **** 	/* This function relaxes the coding standard somewhat to allow return
1262:..\FreeRTOS/queue.c **** 	statements within the function itself.  This is done in the interest
1263:..\FreeRTOS/queue.c **** 	of execution time efficiency. */
1264:..\FreeRTOS/queue.c **** 
1265:..\FreeRTOS/queue.c **** 	for( ;; )
1266:..\FreeRTOS/queue.c **** 	{
1267:..\FreeRTOS/queue.c **** 		taskENTER_CRITICAL();
1268:..\FreeRTOS/queue.c **** 		{
1269:..\FreeRTOS/queue.c **** 			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
1270:..\FreeRTOS/queue.c **** 
1271:..\FreeRTOS/queue.c **** 			/* Is there data in the queue now?  To be running the calling task
1272:..\FreeRTOS/queue.c **** 			must be the highest priority task wanting to access the queue. */
1273:..\FreeRTOS/queue.c **** 			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
1274:..\FreeRTOS/queue.c **** 			{
1275:..\FreeRTOS/queue.c **** 				/* Data available, remove one item. */
1276:..\FreeRTOS/queue.c **** 				prvCopyDataFromQueue( pxQueue, pvBuffer );
1277:..\FreeRTOS/queue.c **** 				traceQUEUE_RECEIVE( pxQueue );
1278:..\FreeRTOS/queue.c **** 				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
1279:..\FreeRTOS/queue.c **** 
1280:..\FreeRTOS/queue.c **** 				/* There is now space in the queue, were any tasks waiting to
1281:..\FreeRTOS/queue.c **** 				post to the queue?  If so, unblock the highest priority waiting
1282:..\FreeRTOS/queue.c **** 				task. */
1283:..\FreeRTOS/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
1284:..\FreeRTOS/queue.c **** 				{
1285:..\FreeRTOS/queue.c **** 					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccApaELb.s 			page 24


1286:..\FreeRTOS/queue.c **** 					{
1287:..\FreeRTOS/queue.c **** 						queueYIELD_IF_USING_PREEMPTION();
1288:..\FreeRTOS/queue.c **** 					}
1289:..\FreeRTOS/queue.c **** 					else
1290:..\FreeRTOS/queue.c **** 					{
1291:..\FreeRTOS/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1292:..\FreeRTOS/queue.c **** 					}
1293:..\FreeRTOS/queue.c **** 				}
1294:..\FreeRTOS/queue.c **** 				else
1295:..\FreeRTOS/queue.c **** 				{
1296:..\FreeRTOS/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1297:..\FreeRTOS/queue.c **** 				}
1298:..\FreeRTOS/queue.c **** 
1299:..\FreeRTOS/queue.c **** 				taskEXIT_CRITICAL();
1300:..\FreeRTOS/queue.c **** 				return pdPASS;
1301:..\FreeRTOS/queue.c **** 			}
1302:..\FreeRTOS/queue.c **** 			else
1303:..\FreeRTOS/queue.c **** 			{
1304:..\FreeRTOS/queue.c **** 				if( xTicksToWait == ( TickType_t ) 0 )
1305:..\FreeRTOS/queue.c **** 				{
1306:..\FreeRTOS/queue.c **** 					/* The queue was empty and no block time is specified (or
1307:..\FreeRTOS/queue.c **** 					the block time has expired) so leave now. */
1308:..\FreeRTOS/queue.c **** 					taskEXIT_CRITICAL();
1309:..\FreeRTOS/queue.c **** 					traceQUEUE_RECEIVE_FAILED( pxQueue );
1310:..\FreeRTOS/queue.c **** 					return errQUEUE_EMPTY;
1311:..\FreeRTOS/queue.c **** 				}
1312:..\FreeRTOS/queue.c **** 				else if( xEntryTimeSet == pdFALSE )
1313:..\FreeRTOS/queue.c **** 				{
1314:..\FreeRTOS/queue.c **** 					/* The queue was empty and a block time was specified so
1315:..\FreeRTOS/queue.c **** 					configure the timeout structure. */
1316:..\FreeRTOS/queue.c **** 					vTaskInternalSetTimeOutState( &xTimeOut );
1317:..\FreeRTOS/queue.c **** 					xEntryTimeSet = pdTRUE;
1318:..\FreeRTOS/queue.c **** 				}
1319:..\FreeRTOS/queue.c **** 				else
1320:..\FreeRTOS/queue.c **** 				{
1321:..\FreeRTOS/queue.c **** 					/* Entry time was already set. */
1322:..\FreeRTOS/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1323:..\FreeRTOS/queue.c **** 				}
1324:..\FreeRTOS/queue.c **** 			}
1325:..\FreeRTOS/queue.c **** 		}
1326:..\FreeRTOS/queue.c **** 		taskEXIT_CRITICAL();
1327:..\FreeRTOS/queue.c **** 
1328:..\FreeRTOS/queue.c **** 		/* Interrupts and other tasks can send to and receive from the queue
1329:..\FreeRTOS/queue.c **** 		now the critical section has been exited. */
1330:..\FreeRTOS/queue.c **** 
1331:..\FreeRTOS/queue.c **** 		vTaskSuspendAll();
1332:..\FreeRTOS/queue.c **** 		prvLockQueue( pxQueue );
1333:..\FreeRTOS/queue.c **** 
1334:..\FreeRTOS/queue.c **** 		/* Update the timeout state to see if it has expired yet. */
1335:..\FreeRTOS/queue.c **** 		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
1336:..\FreeRTOS/queue.c **** 		{
1337:..\FreeRTOS/queue.c **** 			/* The timeout has not expired.  If the queue is still empty place
1338:..\FreeRTOS/queue.c **** 			the task on the list of tasks waiting to receive from the queue. */
1339:..\FreeRTOS/queue.c **** 			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
1340:..\FreeRTOS/queue.c **** 			{
1341:..\FreeRTOS/queue.c **** 				traceBLOCKING_ON_QUEUE_RECEIVE( pxQueue );
1342:..\FreeRTOS/queue.c **** 				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccApaELb.s 			page 25


1343:..\FreeRTOS/queue.c **** 				prvUnlockQueue( pxQueue );
1344:..\FreeRTOS/queue.c **** 				if( xTaskResumeAll() == pdFALSE )
1345:..\FreeRTOS/queue.c **** 				{
1346:..\FreeRTOS/queue.c **** 					portYIELD_WITHIN_API();
1347:..\FreeRTOS/queue.c **** 				}
1348:..\FreeRTOS/queue.c **** 				else
1349:..\FreeRTOS/queue.c **** 				{
1350:..\FreeRTOS/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1351:..\FreeRTOS/queue.c **** 				}
1352:..\FreeRTOS/queue.c **** 			}
1353:..\FreeRTOS/queue.c **** 			else
1354:..\FreeRTOS/queue.c **** 			{
1355:..\FreeRTOS/queue.c **** 				/* The queue contains data again.  Loop back to try and read the
1356:..\FreeRTOS/queue.c **** 				data. */
1357:..\FreeRTOS/queue.c **** 				prvUnlockQueue( pxQueue );
1358:..\FreeRTOS/queue.c **** 				( void ) xTaskResumeAll();
1359:..\FreeRTOS/queue.c **** 			}
1360:..\FreeRTOS/queue.c **** 		}
1361:..\FreeRTOS/queue.c **** 		else
1362:..\FreeRTOS/queue.c **** 		{
1363:..\FreeRTOS/queue.c **** 			/* Timed out.  If there is no data in the queue exit, otherwise loop
1364:..\FreeRTOS/queue.c **** 			back and attempt to read the data. */
1365:..\FreeRTOS/queue.c **** 			prvUnlockQueue( pxQueue );
1366:..\FreeRTOS/queue.c **** 			( void ) xTaskResumeAll();
1367:..\FreeRTOS/queue.c **** 
1368:..\FreeRTOS/queue.c **** 			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
1369:..\FreeRTOS/queue.c **** 			{
1370:..\FreeRTOS/queue.c **** 				traceQUEUE_RECEIVE_FAILED( pxQueue );
1371:..\FreeRTOS/queue.c **** 				return errQUEUE_EMPTY;
1372:..\FreeRTOS/queue.c **** 			}
1373:..\FreeRTOS/queue.c **** 			else
1374:..\FreeRTOS/queue.c **** 			{
1375:..\FreeRTOS/queue.c **** 				mtCOVERAGE_TEST_MARKER();
1376:..\FreeRTOS/queue.c **** 			}
1377:..\FreeRTOS/queue.c **** 		}
1378:..\FreeRTOS/queue.c **** 	}
1379:..\FreeRTOS/queue.c **** }
1380:..\FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
1381:..\FreeRTOS/queue.c **** 
1382:..\FreeRTOS/queue.c **** BaseType_t xQueueSemaphoreTake( QueueHandle_t xQueue, TickType_t xTicksToWait )
1383:..\FreeRTOS/queue.c **** {
1384:..\FreeRTOS/queue.c **** BaseType_t xEntryTimeSet = pdFALSE;
1385:..\FreeRTOS/queue.c **** TimeOut_t xTimeOut;
1386:..\FreeRTOS/queue.c **** Queue_t * const pxQueue = ( Queue_t * ) xQueue;
1387:..\FreeRTOS/queue.c **** 
1388:..\FreeRTOS/queue.c **** #if( configUSE_MUTEXES == 1 )
1389:..\FreeRTOS/queue.c **** 	BaseType_t xInheritanceOccurred = pdFALSE;
1390:..\FreeRTOS/queue.c **** #endif
1391:..\FreeRTOS/queue.c **** 
1392:..\FreeRTOS/queue.c **** 	/* Check the queue pointer is not NULL. */
1393:..\FreeRTOS/queue.c **** 	configASSERT( ( pxQueue ) );
1394:..\FreeRTOS/queue.c **** 
1395:..\FreeRTOS/queue.c **** 	/* Check this really is a semaphore, in which case the item size will be
1396:..\FreeRTOS/queue.c **** 	0. */
1397:..\FreeRTOS/queue.c **** 	configASSERT( pxQueue->uxItemSize == 0 );
1398:..\FreeRTOS/queue.c **** 
1399:..\FreeRTOS/queue.c **** 	/* Cannot block if the scheduler is suspended. */
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccApaELb.s 			page 26


1400:..\FreeRTOS/queue.c **** 	#if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
1401:..\FreeRTOS/queue.c **** 	{
1402:..\FreeRTOS/queue.c **** 		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 )
1403:..\FreeRTOS/queue.c **** 	}
1404:..\FreeRTOS/queue.c **** 	#endif
1405:..\FreeRTOS/queue.c **** 
1406:..\FreeRTOS/queue.c **** 
1407:..\FreeRTOS/queue.c **** 	/* This function relaxes the coding standard somewhat to allow return
1408:..\FreeRTOS/queue.c **** 	statements within the function itself.  This is done in the interest
1409:..\FreeRTOS/queue.c **** 	of execution time efficiency. */
1410:..\FreeRTOS/queue.c **** 
1411:..\FreeRTOS/queue.c **** 	for( ;; )
1412:..\FreeRTOS/queue.c **** 	{
1413:..\FreeRTOS/queue.c **** 		taskENTER_CRITICAL();
1414:..\FreeRTOS/queue.c **** 		{
1415:..\FreeRTOS/queue.c **** 			/* Semaphores are queues with an item size of 0, and where the
1416:..\FreeRTOS/queue.c **** 			number of messages in the queue is the semaphore's count value. */
1417:..\FreeRTOS/queue.c **** 			const UBaseType_t uxSemaphoreCount = pxQueue->uxMessagesWaiting;
1418:..\FreeRTOS/queue.c **** 
1419:..\FreeRTOS/queue.c **** 			/* Is there data in the queue now?  To be running the calling task
1420:..\FreeRTOS/queue.c **** 			must be the highest priority task wanting to access the queue. */
1421:..\FreeRTOS/queue.c **** 			if( uxSemaphoreCount > ( UBaseType_t ) 0 )
1422:..\FreeRTOS/queue.c **** 			{
1423:..\FreeRTOS/queue.c **** 				traceQUEUE_RECEIVE( pxQueue );
1424:..\FreeRTOS/queue.c **** 
1425:..\FreeRTOS/queue.c **** 				/* Semaphores are queues with a data size of zero and where the
1426:..\FreeRTOS/queue.c **** 				messages waiting is the semaphore's count.  Reduce the count. */
1427:..\FreeRTOS/queue.c **** 				pxQueue->uxMessagesWaiting = uxSemaphoreCount - ( UBaseType_t ) 1;
1428:..\FreeRTOS/queue.c **** 
1429:..\FreeRTOS/queue.c **** 				#if ( configUSE_MUTEXES == 1 )
1430:..\FreeRTOS/queue.c **** 				{
1431:..\FreeRTOS/queue.c **** 					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
1432:..\FreeRTOS/queue.c **** 					{
1433:..\FreeRTOS/queue.c **** 						/* Record the information required to implement
1434:..\FreeRTOS/queue.c **** 						priority inheritance should it become necessary. */
1435:..\FreeRTOS/queue.c **** 						pxQueue->pxMutexHolder = ( int8_t * ) pvTaskIncrementMutexHeldCount(); /*lint !e961 Cast is n
1436:..\FreeRTOS/queue.c **** 					}
1437:..\FreeRTOS/queue.c **** 					else
1438:..\FreeRTOS/queue.c **** 					{
1439:..\FreeRTOS/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1440:..\FreeRTOS/queue.c **** 					}
1441:..\FreeRTOS/queue.c **** 				}
1442:..\FreeRTOS/queue.c **** 				#endif /* configUSE_MUTEXES */
1443:..\FreeRTOS/queue.c **** 
1444:..\FreeRTOS/queue.c **** 				/* Check to see if other tasks are blocked waiting to give the
1445:..\FreeRTOS/queue.c **** 				semaphore, and if so, unblock the highest priority such task. */
1446:..\FreeRTOS/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
1447:..\FreeRTOS/queue.c **** 				{
1448:..\FreeRTOS/queue.c **** 					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
1449:..\FreeRTOS/queue.c **** 					{
1450:..\FreeRTOS/queue.c **** 						queueYIELD_IF_USING_PREEMPTION();
1451:..\FreeRTOS/queue.c **** 					}
1452:..\FreeRTOS/queue.c **** 					else
1453:..\FreeRTOS/queue.c **** 					{
1454:..\FreeRTOS/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1455:..\FreeRTOS/queue.c **** 					}
1456:..\FreeRTOS/queue.c **** 				}
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccApaELb.s 			page 27


1457:..\FreeRTOS/queue.c **** 				else
1458:..\FreeRTOS/queue.c **** 				{
1459:..\FreeRTOS/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1460:..\FreeRTOS/queue.c **** 				}
1461:..\FreeRTOS/queue.c **** 
1462:..\FreeRTOS/queue.c **** 				taskEXIT_CRITICAL();
1463:..\FreeRTOS/queue.c **** 				return pdPASS;
1464:..\FreeRTOS/queue.c **** 			}
1465:..\FreeRTOS/queue.c **** 			else
1466:..\FreeRTOS/queue.c **** 			{
1467:..\FreeRTOS/queue.c **** 				if( xTicksToWait == ( TickType_t ) 0 )
1468:..\FreeRTOS/queue.c **** 				{
1469:..\FreeRTOS/queue.c **** 					/* For inheritance to have occurred there must have been an
1470:..\FreeRTOS/queue.c **** 					initial timeout, and an adjusted timeout cannot become 0, as
1471:..\FreeRTOS/queue.c **** 					if it were 0 the function would have exited. */
1472:..\FreeRTOS/queue.c **** 					#if( configUSE_MUTEXES == 1 )
1473:..\FreeRTOS/queue.c **** 					{
1474:..\FreeRTOS/queue.c **** 						configASSERT( xInheritanceOccurred == pdFALSE );
1475:..\FreeRTOS/queue.c **** 					}
1476:..\FreeRTOS/queue.c **** 					#endif /* configUSE_MUTEXES */
1477:..\FreeRTOS/queue.c **** 
1478:..\FreeRTOS/queue.c **** 					/* The semaphore count was 0 and no block time is specified
1479:..\FreeRTOS/queue.c **** 					(or the block time has expired) so exit now. */
1480:..\FreeRTOS/queue.c **** 					taskEXIT_CRITICAL();
1481:..\FreeRTOS/queue.c **** 					traceQUEUE_RECEIVE_FAILED( pxQueue );
1482:..\FreeRTOS/queue.c **** 					return errQUEUE_EMPTY;
1483:..\FreeRTOS/queue.c **** 				}
1484:..\FreeRTOS/queue.c **** 				else if( xEntryTimeSet == pdFALSE )
1485:..\FreeRTOS/queue.c **** 				{
1486:..\FreeRTOS/queue.c **** 					/* The semaphore count was 0 and a block time was specified
1487:..\FreeRTOS/queue.c **** 					so configure the timeout structure ready to block. */
1488:..\FreeRTOS/queue.c **** 					vTaskInternalSetTimeOutState( &xTimeOut );
1489:..\FreeRTOS/queue.c **** 					xEntryTimeSet = pdTRUE;
1490:..\FreeRTOS/queue.c **** 				}
1491:..\FreeRTOS/queue.c **** 				else
1492:..\FreeRTOS/queue.c **** 				{
1493:..\FreeRTOS/queue.c **** 					/* Entry time was already set. */
1494:..\FreeRTOS/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1495:..\FreeRTOS/queue.c **** 				}
1496:..\FreeRTOS/queue.c **** 			}
1497:..\FreeRTOS/queue.c **** 		}
1498:..\FreeRTOS/queue.c **** 		taskEXIT_CRITICAL();
1499:..\FreeRTOS/queue.c **** 
1500:..\FreeRTOS/queue.c **** 		/* Interrupts and other tasks can give to and take from the semaphore
1501:..\FreeRTOS/queue.c **** 		now the critical section has been exited. */
1502:..\FreeRTOS/queue.c **** 
1503:..\FreeRTOS/queue.c **** 		vTaskSuspendAll();
1504:..\FreeRTOS/queue.c **** 		prvLockQueue( pxQueue );
1505:..\FreeRTOS/queue.c **** 
1506:..\FreeRTOS/queue.c **** 		/* Update the timeout state to see if it has expired yet. */
1507:..\FreeRTOS/queue.c **** 		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
1508:..\FreeRTOS/queue.c **** 		{
1509:..\FreeRTOS/queue.c **** 			/* A block time is specified and not expired.  If the semaphore
1510:..\FreeRTOS/queue.c **** 			count is 0 then enter the Blocked state to wait for a semaphore to
1511:..\FreeRTOS/queue.c **** 			become available.  As semaphores are implemented with queues the
1512:..\FreeRTOS/queue.c **** 			queue being empty is equivalent to the semaphore count being 0. */
1513:..\FreeRTOS/queue.c **** 			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccApaELb.s 			page 28


1514:..\FreeRTOS/queue.c **** 			{
1515:..\FreeRTOS/queue.c **** 				traceBLOCKING_ON_QUEUE_RECEIVE( pxQueue );
1516:..\FreeRTOS/queue.c **** 
1517:..\FreeRTOS/queue.c **** 				#if ( configUSE_MUTEXES == 1 )
1518:..\FreeRTOS/queue.c **** 				{
1519:..\FreeRTOS/queue.c **** 					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
1520:..\FreeRTOS/queue.c **** 					{
1521:..\FreeRTOS/queue.c **** 						taskENTER_CRITICAL();
1522:..\FreeRTOS/queue.c **** 						{
1523:..\FreeRTOS/queue.c **** 							xInheritanceOccurred = xTaskPriorityInherit( ( void * ) pxQueue->pxMutexHolder );
1524:..\FreeRTOS/queue.c **** 						}
1525:..\FreeRTOS/queue.c **** 						taskEXIT_CRITICAL();
1526:..\FreeRTOS/queue.c **** 					}
1527:..\FreeRTOS/queue.c **** 					else
1528:..\FreeRTOS/queue.c **** 					{
1529:..\FreeRTOS/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1530:..\FreeRTOS/queue.c **** 					}
1531:..\FreeRTOS/queue.c **** 				}
1532:..\FreeRTOS/queue.c **** 				#endif
1533:..\FreeRTOS/queue.c **** 
1534:..\FreeRTOS/queue.c **** 				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
1535:..\FreeRTOS/queue.c **** 				prvUnlockQueue( pxQueue );
1536:..\FreeRTOS/queue.c **** 				if( xTaskResumeAll() == pdFALSE )
1537:..\FreeRTOS/queue.c **** 				{
1538:..\FreeRTOS/queue.c **** 					portYIELD_WITHIN_API();
1539:..\FreeRTOS/queue.c **** 				}
1540:..\FreeRTOS/queue.c **** 				else
1541:..\FreeRTOS/queue.c **** 				{
1542:..\FreeRTOS/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1543:..\FreeRTOS/queue.c **** 				}
1544:..\FreeRTOS/queue.c **** 			}
1545:..\FreeRTOS/queue.c **** 			else
1546:..\FreeRTOS/queue.c **** 			{
1547:..\FreeRTOS/queue.c **** 				/* There was no timeout and the semaphore count was not 0, so
1548:..\FreeRTOS/queue.c **** 				attempt to take the semaphore again. */
1549:..\FreeRTOS/queue.c **** 				prvUnlockQueue( pxQueue );
1550:..\FreeRTOS/queue.c **** 				( void ) xTaskResumeAll();
1551:..\FreeRTOS/queue.c **** 			}
1552:..\FreeRTOS/queue.c **** 		}
1553:..\FreeRTOS/queue.c **** 		else
1554:..\FreeRTOS/queue.c **** 		{
1555:..\FreeRTOS/queue.c **** 			/* Timed out. */
1556:..\FreeRTOS/queue.c **** 			prvUnlockQueue( pxQueue );
1557:..\FreeRTOS/queue.c **** 			( void ) xTaskResumeAll();
1558:..\FreeRTOS/queue.c **** 
1559:..\FreeRTOS/queue.c **** 			/* If the semaphore count is 0 exit now as the timeout has
1560:..\FreeRTOS/queue.c **** 			expired.  Otherwise return to attempt to take the semaphore that is
1561:..\FreeRTOS/queue.c **** 			known to be available.  As semaphores are implemented by queues the
1562:..\FreeRTOS/queue.c **** 			queue being empty is equivalent to the semaphore count being 0. */
1563:..\FreeRTOS/queue.c **** 			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
1564:..\FreeRTOS/queue.c **** 			{
1565:..\FreeRTOS/queue.c **** 				#if ( configUSE_MUTEXES == 1 )
1566:..\FreeRTOS/queue.c **** 				{
1567:..\FreeRTOS/queue.c **** 					/* xInheritanceOccurred could only have be set if
1568:..\FreeRTOS/queue.c **** 					pxQueue->uxQueueType == queueQUEUE_IS_MUTEX so no need to
1569:..\FreeRTOS/queue.c **** 					test the mutex type again to check it is actually a mutex. */
1570:..\FreeRTOS/queue.c **** 					if( xInheritanceOccurred != pdFALSE )
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccApaELb.s 			page 29


1571:..\FreeRTOS/queue.c **** 					{
1572:..\FreeRTOS/queue.c **** 						taskENTER_CRITICAL();
1573:..\FreeRTOS/queue.c **** 						{
1574:..\FreeRTOS/queue.c **** 							UBaseType_t uxHighestWaitingPriority;
1575:..\FreeRTOS/queue.c **** 
1576:..\FreeRTOS/queue.c **** 							/* This task blocking on the mutex caused another
1577:..\FreeRTOS/queue.c **** 							task to inherit this task's priority.  Now this task
1578:..\FreeRTOS/queue.c **** 							has timed out the priority should be disinherited
1579:..\FreeRTOS/queue.c **** 							again, but only as low as the next highest priority
1580:..\FreeRTOS/queue.c **** 							task that is waiting for the same mutex. */
1581:..\FreeRTOS/queue.c **** 							uxHighestWaitingPriority = prvGetDisinheritPriorityAfterTimeout( pxQueue );
1582:..\FreeRTOS/queue.c **** 							vTaskPriorityDisinheritAfterTimeout( ( void * ) pxQueue->pxMutexHolder, uxHighestWaitingPrio
1583:..\FreeRTOS/queue.c **** 						}
1584:..\FreeRTOS/queue.c **** 						taskEXIT_CRITICAL();
1585:..\FreeRTOS/queue.c **** 					}
1586:..\FreeRTOS/queue.c **** 				}
1587:..\FreeRTOS/queue.c **** 				#endif /* configUSE_MUTEXES */
1588:..\FreeRTOS/queue.c **** 
1589:..\FreeRTOS/queue.c **** 				traceQUEUE_RECEIVE_FAILED( pxQueue );
1590:..\FreeRTOS/queue.c **** 				return errQUEUE_EMPTY;
1591:..\FreeRTOS/queue.c **** 			}
1592:..\FreeRTOS/queue.c **** 			else
1593:..\FreeRTOS/queue.c **** 			{
1594:..\FreeRTOS/queue.c **** 				mtCOVERAGE_TEST_MARKER();
1595:..\FreeRTOS/queue.c **** 			}
1596:..\FreeRTOS/queue.c **** 		}
1597:..\FreeRTOS/queue.c **** 	}
1598:..\FreeRTOS/queue.c **** }
1599:..\FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
1600:..\FreeRTOS/queue.c **** 
1601:..\FreeRTOS/queue.c **** BaseType_t xQueuePeek( QueueHandle_t xQueue, void * const pvBuffer, TickType_t xTicksToWait )
1602:..\FreeRTOS/queue.c **** {
1603:..\FreeRTOS/queue.c **** BaseType_t xEntryTimeSet = pdFALSE;
1604:..\FreeRTOS/queue.c **** TimeOut_t xTimeOut;
1605:..\FreeRTOS/queue.c **** int8_t *pcOriginalReadPosition;
1606:..\FreeRTOS/queue.c **** Queue_t * const pxQueue = ( Queue_t * ) xQueue;
1607:..\FreeRTOS/queue.c **** 
1608:..\FreeRTOS/queue.c **** 	/* Check the pointer is not NULL. */
1609:..\FreeRTOS/queue.c **** 	configASSERT( ( pxQueue ) );
1610:..\FreeRTOS/queue.c **** 
1611:..\FreeRTOS/queue.c **** 	/* The buffer into which data is received can only be NULL if the data size
1612:..\FreeRTOS/queue.c **** 	is zero (so no data is copied into the buffer. */
1613:..\FreeRTOS/queue.c **** 	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) )
1614:..\FreeRTOS/queue.c **** 
1615:..\FreeRTOS/queue.c **** 	/* Cannot block if the scheduler is suspended. */
1616:..\FreeRTOS/queue.c **** 	#if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
1617:..\FreeRTOS/queue.c **** 	{
1618:..\FreeRTOS/queue.c **** 		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 )
1619:..\FreeRTOS/queue.c **** 	}
1620:..\FreeRTOS/queue.c **** 	#endif
1621:..\FreeRTOS/queue.c **** 
1622:..\FreeRTOS/queue.c **** 
1623:..\FreeRTOS/queue.c **** 	/* This function relaxes the coding standard somewhat to allow return
1624:..\FreeRTOS/queue.c **** 	statements within the function itself.  This is done in the interest
1625:..\FreeRTOS/queue.c **** 	of execution time efficiency. */
1626:..\FreeRTOS/queue.c **** 
1627:..\FreeRTOS/queue.c **** 	for( ;; )
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccApaELb.s 			page 30


1628:..\FreeRTOS/queue.c **** 	{
1629:..\FreeRTOS/queue.c **** 		taskENTER_CRITICAL();
1630:..\FreeRTOS/queue.c **** 		{
1631:..\FreeRTOS/queue.c **** 			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
1632:..\FreeRTOS/queue.c **** 
1633:..\FreeRTOS/queue.c **** 			/* Is there data in the queue now?  To be running the calling task
1634:..\FreeRTOS/queue.c **** 			must be the highest priority task wanting to access the queue. */
1635:..\FreeRTOS/queue.c **** 			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
1636:..\FreeRTOS/queue.c **** 			{
1637:..\FreeRTOS/queue.c **** 				/* Remember the read position so it can be reset after the data
1638:..\FreeRTOS/queue.c **** 				is read from the queue as this function is only peeking the
1639:..\FreeRTOS/queue.c **** 				data, not removing it. */
1640:..\FreeRTOS/queue.c **** 				pcOriginalReadPosition = pxQueue->u.pcReadFrom;
1641:..\FreeRTOS/queue.c **** 
1642:..\FreeRTOS/queue.c **** 				prvCopyDataFromQueue( pxQueue, pvBuffer );
1643:..\FreeRTOS/queue.c **** 				traceQUEUE_PEEK( pxQueue );
1644:..\FreeRTOS/queue.c **** 
1645:..\FreeRTOS/queue.c **** 				/* The data is not being removed, so reset the read pointer. */
1646:..\FreeRTOS/queue.c **** 				pxQueue->u.pcReadFrom = pcOriginalReadPosition;
1647:..\FreeRTOS/queue.c **** 
1648:..\FreeRTOS/queue.c **** 				/* The data is being left in the queue, so see if there are
1649:..\FreeRTOS/queue.c **** 				any other tasks waiting for the data. */
1650:..\FreeRTOS/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
1651:..\FreeRTOS/queue.c **** 				{
1652:..\FreeRTOS/queue.c **** 					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
1653:..\FreeRTOS/queue.c **** 					{
1654:..\FreeRTOS/queue.c **** 						/* The task waiting has a higher priority than this task. */
1655:..\FreeRTOS/queue.c **** 						queueYIELD_IF_USING_PREEMPTION();
1656:..\FreeRTOS/queue.c **** 					}
1657:..\FreeRTOS/queue.c **** 					else
1658:..\FreeRTOS/queue.c **** 					{
1659:..\FreeRTOS/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1660:..\FreeRTOS/queue.c **** 					}
1661:..\FreeRTOS/queue.c **** 				}
1662:..\FreeRTOS/queue.c **** 				else
1663:..\FreeRTOS/queue.c **** 				{
1664:..\FreeRTOS/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1665:..\FreeRTOS/queue.c **** 				}
1666:..\FreeRTOS/queue.c **** 
1667:..\FreeRTOS/queue.c **** 				taskEXIT_CRITICAL();
1668:..\FreeRTOS/queue.c **** 				return pdPASS;
1669:..\FreeRTOS/queue.c **** 			}
1670:..\FreeRTOS/queue.c **** 			else
1671:..\FreeRTOS/queue.c **** 			{
1672:..\FreeRTOS/queue.c **** 				if( xTicksToWait == ( TickType_t ) 0 )
1673:..\FreeRTOS/queue.c **** 				{
1674:..\FreeRTOS/queue.c **** 					/* The queue was empty and no block time is specified (or
1675:..\FreeRTOS/queue.c **** 					the block time has expired) so leave now. */
1676:..\FreeRTOS/queue.c **** 					taskEXIT_CRITICAL();
1677:..\FreeRTOS/queue.c **** 					traceQUEUE_PEEK_FAILED( pxQueue );
1678:..\FreeRTOS/queue.c **** 					return errQUEUE_EMPTY;
1679:..\FreeRTOS/queue.c **** 				}
1680:..\FreeRTOS/queue.c **** 				else if( xEntryTimeSet == pdFALSE )
1681:..\FreeRTOS/queue.c **** 				{
1682:..\FreeRTOS/queue.c **** 					/* The queue was empty and a block time was specified so
1683:..\FreeRTOS/queue.c **** 					configure the timeout structure ready to enter the blocked
1684:..\FreeRTOS/queue.c **** 					state. */
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccApaELb.s 			page 31


1685:..\FreeRTOS/queue.c **** 					vTaskInternalSetTimeOutState( &xTimeOut );
1686:..\FreeRTOS/queue.c **** 					xEntryTimeSet = pdTRUE;
1687:..\FreeRTOS/queue.c **** 				}
1688:..\FreeRTOS/queue.c **** 				else
1689:..\FreeRTOS/queue.c **** 				{
1690:..\FreeRTOS/queue.c **** 					/* Entry time was already set. */
1691:..\FreeRTOS/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1692:..\FreeRTOS/queue.c **** 				}
1693:..\FreeRTOS/queue.c **** 			}
1694:..\FreeRTOS/queue.c **** 		}
1695:..\FreeRTOS/queue.c **** 		taskEXIT_CRITICAL();
1696:..\FreeRTOS/queue.c **** 
1697:..\FreeRTOS/queue.c **** 		/* Interrupts and other tasks can send to and receive from the queue
1698:..\FreeRTOS/queue.c **** 		now the critical section has been exited. */
1699:..\FreeRTOS/queue.c **** 
1700:..\FreeRTOS/queue.c **** 		vTaskSuspendAll();
1701:..\FreeRTOS/queue.c **** 		prvLockQueue( pxQueue );
1702:..\FreeRTOS/queue.c **** 
1703:..\FreeRTOS/queue.c **** 		/* Update the timeout state to see if it has expired yet. */
1704:..\FreeRTOS/queue.c **** 		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
1705:..\FreeRTOS/queue.c **** 		{
1706:..\FreeRTOS/queue.c **** 			/* Timeout has not expired yet, check to see if there is data in the
1707:..\FreeRTOS/queue.c **** 			queue now, and if not enter the Blocked state to wait for data. */
1708:..\FreeRTOS/queue.c **** 			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
1709:..\FreeRTOS/queue.c **** 			{
1710:..\FreeRTOS/queue.c **** 				traceBLOCKING_ON_QUEUE_PEEK( pxQueue );
1711:..\FreeRTOS/queue.c **** 				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
1712:..\FreeRTOS/queue.c **** 				prvUnlockQueue( pxQueue );
1713:..\FreeRTOS/queue.c **** 				if( xTaskResumeAll() == pdFALSE )
1714:..\FreeRTOS/queue.c **** 				{
1715:..\FreeRTOS/queue.c **** 					portYIELD_WITHIN_API();
1716:..\FreeRTOS/queue.c **** 				}
1717:..\FreeRTOS/queue.c **** 				else
1718:..\FreeRTOS/queue.c **** 				{
1719:..\FreeRTOS/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1720:..\FreeRTOS/queue.c **** 				}
1721:..\FreeRTOS/queue.c **** 			}
1722:..\FreeRTOS/queue.c **** 			else
1723:..\FreeRTOS/queue.c **** 			{
1724:..\FreeRTOS/queue.c **** 				/* There is data in the queue now, so don't enter the blocked
1725:..\FreeRTOS/queue.c **** 				state, instead return to try and obtain the data. */
1726:..\FreeRTOS/queue.c **** 				prvUnlockQueue( pxQueue );
1727:..\FreeRTOS/queue.c **** 				( void ) xTaskResumeAll();
1728:..\FreeRTOS/queue.c **** 			}
1729:..\FreeRTOS/queue.c **** 		}
1730:..\FreeRTOS/queue.c **** 		else
1731:..\FreeRTOS/queue.c **** 		{
1732:..\FreeRTOS/queue.c **** 			/* The timeout has expired.  If there is still no data in the queue
1733:..\FreeRTOS/queue.c **** 			exit, otherwise go back and try to read the data again. */
1734:..\FreeRTOS/queue.c **** 			prvUnlockQueue( pxQueue );
1735:..\FreeRTOS/queue.c **** 			( void ) xTaskResumeAll();
1736:..\FreeRTOS/queue.c **** 
1737:..\FreeRTOS/queue.c **** 			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
1738:..\FreeRTOS/queue.c **** 			{
1739:..\FreeRTOS/queue.c **** 				traceQUEUE_PEEK_FAILED( pxQueue );
1740:..\FreeRTOS/queue.c **** 				return errQUEUE_EMPTY;
1741:..\FreeRTOS/queue.c **** 			}
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccApaELb.s 			page 32


1742:..\FreeRTOS/queue.c **** 			else
1743:..\FreeRTOS/queue.c **** 			{
1744:..\FreeRTOS/queue.c **** 				mtCOVERAGE_TEST_MARKER();
1745:..\FreeRTOS/queue.c **** 			}
1746:..\FreeRTOS/queue.c **** 		}
1747:..\FreeRTOS/queue.c **** 	}
1748:..\FreeRTOS/queue.c **** }
1749:..\FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
1750:..\FreeRTOS/queue.c **** 
1751:..\FreeRTOS/queue.c **** BaseType_t xQueueReceiveFromISR( QueueHandle_t xQueue, void * const pvBuffer, BaseType_t * const px
1752:..\FreeRTOS/queue.c **** {
1753:..\FreeRTOS/queue.c **** BaseType_t xReturn;
1754:..\FreeRTOS/queue.c **** UBaseType_t uxSavedInterruptStatus;
1755:..\FreeRTOS/queue.c **** Queue_t * const pxQueue = ( Queue_t * ) xQueue;
1756:..\FreeRTOS/queue.c **** 
1757:..\FreeRTOS/queue.c **** 	configASSERT( pxQueue );
1758:..\FreeRTOS/queue.c **** 	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
1759:..\FreeRTOS/queue.c **** 
1760:..\FreeRTOS/queue.c **** 	/* RTOS ports that support interrupt nesting have the concept of a maximum
1761:..\FreeRTOS/queue.c **** 	system call (or maximum API call) interrupt priority.  Interrupts that are
1762:..\FreeRTOS/queue.c **** 	above the maximum system call priority are kept permanently enabled, even
1763:..\FreeRTOS/queue.c **** 	when the RTOS kernel is in a critical section, but cannot make any calls to
1764:..\FreeRTOS/queue.c **** 	FreeRTOS API functions.  If configASSERT() is defined in FreeRTOSConfig.h
1765:..\FreeRTOS/queue.c **** 	then portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
1766:..\FreeRTOS/queue.c **** 	failure if a FreeRTOS API function is called from an interrupt that has been
1767:..\FreeRTOS/queue.c **** 	assigned a priority above the configured maximum system call priority.
1768:..\FreeRTOS/queue.c **** 	Only FreeRTOS functions that end in FromISR can be called from interrupts
1769:..\FreeRTOS/queue.c **** 	that have been assigned a priority at or (logically) below the maximum
1770:..\FreeRTOS/queue.c **** 	system call	interrupt priority.  FreeRTOS maintains a separate interrupt
1771:..\FreeRTOS/queue.c **** 	safe API to ensure interrupt entry is as fast and as simple as possible.
1772:..\FreeRTOS/queue.c **** 	More information (albeit Cortex-M specific) is provided on the following
1773:..\FreeRTOS/queue.c **** 	link: http://www.freertos.org/RTOS-Cortex-M3-M4.html */
1774:..\FreeRTOS/queue.c **** 	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
1775:..\FreeRTOS/queue.c **** 
1776:..\FreeRTOS/queue.c **** 	uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
1777:..\FreeRTOS/queue.c **** 	{
1778:..\FreeRTOS/queue.c **** 		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
1779:..\FreeRTOS/queue.c **** 
1780:..\FreeRTOS/queue.c **** 		/* Cannot block in an ISR, so check there is data available. */
1781:..\FreeRTOS/queue.c **** 		if( uxMessagesWaiting > ( UBaseType_t ) 0 )
1782:..\FreeRTOS/queue.c **** 		{
1783:..\FreeRTOS/queue.c **** 			const int8_t cRxLock = pxQueue->cRxLock;
1784:..\FreeRTOS/queue.c **** 
1785:..\FreeRTOS/queue.c **** 			traceQUEUE_RECEIVE_FROM_ISR( pxQueue );
1786:..\FreeRTOS/queue.c **** 
1787:..\FreeRTOS/queue.c **** 			prvCopyDataFromQueue( pxQueue, pvBuffer );
1788:..\FreeRTOS/queue.c **** 			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
1789:..\FreeRTOS/queue.c **** 
1790:..\FreeRTOS/queue.c **** 			/* If the queue is locked the event list will not be modified.
1791:..\FreeRTOS/queue.c **** 			Instead update the lock count so the task that unlocks the queue
1792:..\FreeRTOS/queue.c **** 			will know that an ISR has removed data while the queue was
1793:..\FreeRTOS/queue.c **** 			locked. */
1794:..\FreeRTOS/queue.c **** 			if( cRxLock == queueUNLOCKED )
1795:..\FreeRTOS/queue.c **** 			{
1796:..\FreeRTOS/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
1797:..\FreeRTOS/queue.c **** 				{
1798:..\FreeRTOS/queue.c **** 					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccApaELb.s 			page 33


1799:..\FreeRTOS/queue.c **** 					{
1800:..\FreeRTOS/queue.c **** 						/* The task waiting has a higher priority than us so
1801:..\FreeRTOS/queue.c **** 						force a context switch. */
1802:..\FreeRTOS/queue.c **** 						if( pxHigherPriorityTaskWoken != NULL )
1803:..\FreeRTOS/queue.c **** 						{
1804:..\FreeRTOS/queue.c **** 							*pxHigherPriorityTaskWoken = pdTRUE;
1805:..\FreeRTOS/queue.c **** 						}
1806:..\FreeRTOS/queue.c **** 						else
1807:..\FreeRTOS/queue.c **** 						{
1808:..\FreeRTOS/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1809:..\FreeRTOS/queue.c **** 						}
1810:..\FreeRTOS/queue.c **** 					}
1811:..\FreeRTOS/queue.c **** 					else
1812:..\FreeRTOS/queue.c **** 					{
1813:..\FreeRTOS/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1814:..\FreeRTOS/queue.c **** 					}
1815:..\FreeRTOS/queue.c **** 				}
1816:..\FreeRTOS/queue.c **** 				else
1817:..\FreeRTOS/queue.c **** 				{
1818:..\FreeRTOS/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1819:..\FreeRTOS/queue.c **** 				}
1820:..\FreeRTOS/queue.c **** 			}
1821:..\FreeRTOS/queue.c **** 			else
1822:..\FreeRTOS/queue.c **** 			{
1823:..\FreeRTOS/queue.c **** 				/* Increment the lock count so the task that unlocks the queue
1824:..\FreeRTOS/queue.c **** 				knows that data was removed while it was locked. */
1825:..\FreeRTOS/queue.c **** 				pxQueue->cRxLock = ( int8_t ) ( cRxLock + 1 );
1826:..\FreeRTOS/queue.c **** 			}
1827:..\FreeRTOS/queue.c **** 
1828:..\FreeRTOS/queue.c **** 			xReturn = pdPASS;
1829:..\FreeRTOS/queue.c **** 		}
1830:..\FreeRTOS/queue.c **** 		else
1831:..\FreeRTOS/queue.c **** 		{
1832:..\FreeRTOS/queue.c **** 			xReturn = pdFAIL;
1833:..\FreeRTOS/queue.c **** 			traceQUEUE_RECEIVE_FROM_ISR_FAILED( pxQueue );
1834:..\FreeRTOS/queue.c **** 		}
1835:..\FreeRTOS/queue.c **** 	}
1836:..\FreeRTOS/queue.c **** 	portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
1837:..\FreeRTOS/queue.c **** 
1838:..\FreeRTOS/queue.c **** 	return xReturn;
1839:..\FreeRTOS/queue.c **** }
1840:..\FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
1841:..\FreeRTOS/queue.c **** 
1842:..\FreeRTOS/queue.c **** BaseType_t xQueuePeekFromISR( QueueHandle_t xQueue,  void * const pvBuffer )
1843:..\FreeRTOS/queue.c **** {
1844:..\FreeRTOS/queue.c **** BaseType_t xReturn;
1845:..\FreeRTOS/queue.c **** UBaseType_t uxSavedInterruptStatus;
1846:..\FreeRTOS/queue.c **** int8_t *pcOriginalReadPosition;
1847:..\FreeRTOS/queue.c **** Queue_t * const pxQueue = ( Queue_t * ) xQueue;
1848:..\FreeRTOS/queue.c **** 
1849:..\FreeRTOS/queue.c **** 	configASSERT( pxQueue );
1850:..\FreeRTOS/queue.c **** 	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
1851:..\FreeRTOS/queue.c **** 	configASSERT( pxQueue->uxItemSize != 0 ); /* Can't peek a semaphore. */
1852:..\FreeRTOS/queue.c **** 
1853:..\FreeRTOS/queue.c **** 	/* RTOS ports that support interrupt nesting have the concept of a maximum
1854:..\FreeRTOS/queue.c **** 	system call (or maximum API call) interrupt priority.  Interrupts that are
1855:..\FreeRTOS/queue.c **** 	above the maximum system call priority are kept permanently enabled, even
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccApaELb.s 			page 34


1856:..\FreeRTOS/queue.c **** 	when the RTOS kernel is in a critical section, but cannot make any calls to
1857:..\FreeRTOS/queue.c **** 	FreeRTOS API functions.  If configASSERT() is defined in FreeRTOSConfig.h
1858:..\FreeRTOS/queue.c **** 	then portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
1859:..\FreeRTOS/queue.c **** 	failure if a FreeRTOS API function is called from an interrupt that has been
1860:..\FreeRTOS/queue.c **** 	assigned a priority above the configured maximum system call priority.
1861:..\FreeRTOS/queue.c **** 	Only FreeRTOS functions that end in FromISR can be called from interrupts
1862:..\FreeRTOS/queue.c **** 	that have been assigned a priority at or (logically) below the maximum
1863:..\FreeRTOS/queue.c **** 	system call	interrupt priority.  FreeRTOS maintains a separate interrupt
1864:..\FreeRTOS/queue.c **** 	safe API to ensure interrupt entry is as fast and as simple as possible.
1865:..\FreeRTOS/queue.c **** 	More information (albeit Cortex-M specific) is provided on the following
1866:..\FreeRTOS/queue.c **** 	link: http://www.freertos.org/RTOS-Cortex-M3-M4.html */
1867:..\FreeRTOS/queue.c **** 	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
1868:..\FreeRTOS/queue.c **** 
1869:..\FreeRTOS/queue.c **** 	uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
1870:..\FreeRTOS/queue.c **** 	{
1871:..\FreeRTOS/queue.c **** 		/* Cannot block in an ISR, so check there is data available. */
1872:..\FreeRTOS/queue.c **** 		if( pxQueue->uxMessagesWaiting > ( UBaseType_t ) 0 )
1873:..\FreeRTOS/queue.c **** 		{
1874:..\FreeRTOS/queue.c **** 			traceQUEUE_PEEK_FROM_ISR( pxQueue );
1875:..\FreeRTOS/queue.c **** 
1876:..\FreeRTOS/queue.c **** 			/* Remember the read position so it can be reset as nothing is
1877:..\FreeRTOS/queue.c **** 			actually being removed from the queue. */
1878:..\FreeRTOS/queue.c **** 			pcOriginalReadPosition = pxQueue->u.pcReadFrom;
1879:..\FreeRTOS/queue.c **** 			prvCopyDataFromQueue( pxQueue, pvBuffer );
1880:..\FreeRTOS/queue.c **** 			pxQueue->u.pcReadFrom = pcOriginalReadPosition;
1881:..\FreeRTOS/queue.c **** 
1882:..\FreeRTOS/queue.c **** 			xReturn = pdPASS;
1883:..\FreeRTOS/queue.c **** 		}
1884:..\FreeRTOS/queue.c **** 		else
1885:..\FreeRTOS/queue.c **** 		{
1886:..\FreeRTOS/queue.c **** 			xReturn = pdFAIL;
1887:..\FreeRTOS/queue.c **** 			traceQUEUE_PEEK_FROM_ISR_FAILED( pxQueue );
1888:..\FreeRTOS/queue.c **** 		}
1889:..\FreeRTOS/queue.c **** 	}
1890:..\FreeRTOS/queue.c **** 	portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
1891:..\FreeRTOS/queue.c **** 
1892:..\FreeRTOS/queue.c **** 	return xReturn;
1893:..\FreeRTOS/queue.c **** }
1894:..\FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
1895:..\FreeRTOS/queue.c **** 
1896:..\FreeRTOS/queue.c **** UBaseType_t uxQueueMessagesWaiting( const QueueHandle_t xQueue )
1897:..\FreeRTOS/queue.c **** {
1898:..\FreeRTOS/queue.c **** UBaseType_t uxReturn;
1899:..\FreeRTOS/queue.c **** 
1900:..\FreeRTOS/queue.c **** 	configASSERT( xQueue );
1901:..\FreeRTOS/queue.c **** 
1902:..\FreeRTOS/queue.c **** 	taskENTER_CRITICAL();
1903:..\FreeRTOS/queue.c **** 	{
1904:..\FreeRTOS/queue.c **** 		uxReturn = ( ( Queue_t * ) xQueue )->uxMessagesWaiting;
1905:..\FreeRTOS/queue.c **** 	}
1906:..\FreeRTOS/queue.c **** 	taskEXIT_CRITICAL();
1907:..\FreeRTOS/queue.c **** 
1908:..\FreeRTOS/queue.c **** 	return uxReturn;
1909:..\FreeRTOS/queue.c **** } /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
1910:..\FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
1911:..\FreeRTOS/queue.c **** 
1912:..\FreeRTOS/queue.c **** UBaseType_t uxQueueSpacesAvailable( const QueueHandle_t xQueue )
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccApaELb.s 			page 35


1913:..\FreeRTOS/queue.c **** {
1914:..\FreeRTOS/queue.c **** UBaseType_t uxReturn;
1915:..\FreeRTOS/queue.c **** Queue_t *pxQueue;
1916:..\FreeRTOS/queue.c **** 
1917:..\FreeRTOS/queue.c **** 	pxQueue = ( Queue_t * ) xQueue;
1918:..\FreeRTOS/queue.c **** 	configASSERT( pxQueue );
1919:..\FreeRTOS/queue.c **** 
1920:..\FreeRTOS/queue.c **** 	taskENTER_CRITICAL();
1921:..\FreeRTOS/queue.c **** 	{
1922:..\FreeRTOS/queue.c **** 		uxReturn = pxQueue->uxLength - pxQueue->uxMessagesWaiting;
1923:..\FreeRTOS/queue.c **** 	}
1924:..\FreeRTOS/queue.c **** 	taskEXIT_CRITICAL();
1925:..\FreeRTOS/queue.c **** 
1926:..\FreeRTOS/queue.c **** 	return uxReturn;
1927:..\FreeRTOS/queue.c **** } /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
1928:..\FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
1929:..\FreeRTOS/queue.c **** 
1930:..\FreeRTOS/queue.c **** UBaseType_t uxQueueMessagesWaitingFromISR( const QueueHandle_t xQueue )
1931:..\FreeRTOS/queue.c **** {
1932:..\FreeRTOS/queue.c **** UBaseType_t uxReturn;
1933:..\FreeRTOS/queue.c **** 
1934:..\FreeRTOS/queue.c **** 	configASSERT( xQueue );
1935:..\FreeRTOS/queue.c **** 
1936:..\FreeRTOS/queue.c **** 	uxReturn = ( ( Queue_t * ) xQueue )->uxMessagesWaiting;
1937:..\FreeRTOS/queue.c **** 
1938:..\FreeRTOS/queue.c **** 	return uxReturn;
1939:..\FreeRTOS/queue.c **** } /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
1940:..\FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
1941:..\FreeRTOS/queue.c **** 
1942:..\FreeRTOS/queue.c **** void vQueueDelete( QueueHandle_t xQueue )
1943:..\FreeRTOS/queue.c **** {
1944:..\FreeRTOS/queue.c **** Queue_t * const pxQueue = ( Queue_t * ) xQueue;
1945:..\FreeRTOS/queue.c **** 
1946:..\FreeRTOS/queue.c **** 	configASSERT( pxQueue );
1947:..\FreeRTOS/queue.c **** 	traceQUEUE_DELETE( pxQueue );
1948:..\FreeRTOS/queue.c **** 
1949:..\FreeRTOS/queue.c **** 	#if ( configQUEUE_REGISTRY_SIZE > 0 )
1950:..\FreeRTOS/queue.c **** 	{
1951:..\FreeRTOS/queue.c **** 		vQueueUnregisterQueue( pxQueue );
1952:..\FreeRTOS/queue.c **** 	}
1953:..\FreeRTOS/queue.c **** 	#endif
1954:..\FreeRTOS/queue.c **** 
1955:..\FreeRTOS/queue.c **** 	#if( ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 0 ) )
1956:..\FreeRTOS/queue.c **** 	{
1957:..\FreeRTOS/queue.c **** 		/* The queue can only have been allocated dynamically - free it
1958:..\FreeRTOS/queue.c **** 		again. */
1959:..\FreeRTOS/queue.c **** 		vPortFree( pxQueue );
1960:..\FreeRTOS/queue.c **** 	}
1961:..\FreeRTOS/queue.c **** 	#elif( ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 1 ) )
1962:..\FreeRTOS/queue.c **** 	{
1963:..\FreeRTOS/queue.c **** 		/* The queue could have been allocated statically or dynamically, so
1964:..\FreeRTOS/queue.c **** 		check before attempting to free the memory. */
1965:..\FreeRTOS/queue.c **** 		if( pxQueue->ucStaticallyAllocated == ( uint8_t ) pdFALSE )
1966:..\FreeRTOS/queue.c **** 		{
1967:..\FreeRTOS/queue.c **** 			vPortFree( pxQueue );
1968:..\FreeRTOS/queue.c **** 		}
1969:..\FreeRTOS/queue.c **** 		else
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccApaELb.s 			page 36


1970:..\FreeRTOS/queue.c **** 		{
1971:..\FreeRTOS/queue.c **** 			mtCOVERAGE_TEST_MARKER();
1972:..\FreeRTOS/queue.c **** 		}
1973:..\FreeRTOS/queue.c **** 	}
1974:..\FreeRTOS/queue.c **** 	#else
1975:..\FreeRTOS/queue.c **** 	{
1976:..\FreeRTOS/queue.c **** 		/* The queue must have been statically allocated, so is not going to be
1977:..\FreeRTOS/queue.c **** 		deleted.  Avoid compiler warnings about the unused parameter. */
1978:..\FreeRTOS/queue.c **** 		( void ) pxQueue;
1979:..\FreeRTOS/queue.c **** 	}
1980:..\FreeRTOS/queue.c **** 	#endif /* configSUPPORT_DYNAMIC_ALLOCATION */
1981:..\FreeRTOS/queue.c **** }
1982:..\FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
1983:..\FreeRTOS/queue.c **** 
1984:..\FreeRTOS/queue.c **** #if ( configUSE_TRACE_FACILITY == 1 )
1985:..\FreeRTOS/queue.c **** 
1986:..\FreeRTOS/queue.c **** 	UBaseType_t uxQueueGetQueueNumber( QueueHandle_t xQueue )
1987:..\FreeRTOS/queue.c **** 	{
1988:..\FreeRTOS/queue.c **** 		return ( ( Queue_t * ) xQueue )->uxQueueNumber;
1989:..\FreeRTOS/queue.c **** 	}
1990:..\FreeRTOS/queue.c **** 
1991:..\FreeRTOS/queue.c **** #endif /* configUSE_TRACE_FACILITY */
1992:..\FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
1993:..\FreeRTOS/queue.c **** 
1994:..\FreeRTOS/queue.c **** #if ( configUSE_TRACE_FACILITY == 1 )
1995:..\FreeRTOS/queue.c **** 
1996:..\FreeRTOS/queue.c **** 	void vQueueSetQueueNumber( QueueHandle_t xQueue, UBaseType_t uxQueueNumber )
1997:..\FreeRTOS/queue.c **** 	{
1998:..\FreeRTOS/queue.c **** 		( ( Queue_t * ) xQueue )->uxQueueNumber = uxQueueNumber;
1999:..\FreeRTOS/queue.c **** 	}
2000:..\FreeRTOS/queue.c **** 
2001:..\FreeRTOS/queue.c **** #endif /* configUSE_TRACE_FACILITY */
2002:..\FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
2003:..\FreeRTOS/queue.c **** 
2004:..\FreeRTOS/queue.c **** #if ( configUSE_TRACE_FACILITY == 1 )
2005:..\FreeRTOS/queue.c **** 
2006:..\FreeRTOS/queue.c **** 	uint8_t ucQueueGetQueueType( QueueHandle_t xQueue )
2007:..\FreeRTOS/queue.c **** 	{
2008:..\FreeRTOS/queue.c **** 		return ( ( Queue_t * ) xQueue )->ucQueueType;
2009:..\FreeRTOS/queue.c **** 	}
2010:..\FreeRTOS/queue.c **** 
2011:..\FreeRTOS/queue.c **** #endif /* configUSE_TRACE_FACILITY */
2012:..\FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
2013:..\FreeRTOS/queue.c **** 
2014:..\FreeRTOS/queue.c **** #if( configUSE_MUTEXES == 1 )
2015:..\FreeRTOS/queue.c **** 
2016:..\FreeRTOS/queue.c **** 	static UBaseType_t prvGetDisinheritPriorityAfterTimeout( const Queue_t * const pxQueue )
2017:..\FreeRTOS/queue.c **** 	{
  27              		.loc 1 2017 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32              	.LVL0:
2018:..\FreeRTOS/queue.c **** 	UBaseType_t uxHighestPriorityOfWaitingTasks;
2019:..\FreeRTOS/queue.c **** 
2020:..\FreeRTOS/queue.c **** 		/* If a task waiting for a mutex causes the mutex holder to inherit a
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccApaELb.s 			page 37


2021:..\FreeRTOS/queue.c **** 		priority, but the waiting task times out, then the holder should
2022:..\FreeRTOS/queue.c **** 		disinherit the priority - but only down to the highest priority of any
2023:..\FreeRTOS/queue.c **** 		other tasks that are waiting for the same mutex.  For this purpose,
2024:..\FreeRTOS/queue.c **** 		return the priority of the highest priority task that is waiting for the
2025:..\FreeRTOS/queue.c **** 		mutex. */
2026:..\FreeRTOS/queue.c **** 		if( listCURRENT_LIST_LENGTH( &( pxQueue->xTasksWaitingToReceive ) ) > 0 )
  33              		.loc 1 2026 0
  34 0000 436A     		ldr	r3, [r0, #36]
  35 0002 002B     		cmp	r3, #0
  36 0004 04D0     		beq	.L3
2027:..\FreeRTOS/queue.c **** 		{
2028:..\FreeRTOS/queue.c **** 			uxHighestPriorityOfWaitingTasks = configMAX_PRIORITIES - listGET_ITEM_VALUE_OF_HEAD_ENTRY( &( px
  37              		.loc 1 2028 0
  38 0006 036B     		ldr	r3, [r0, #48]
  39 0008 1868     		ldr	r0, [r3]
  40              	.LVL1:
  41 000a 0523     		movs	r3, #5
  42 000c 181A     		subs	r0, r3, r0
  43              	.LVL2:
  44 000e 00E0     		b	.L2
  45              	.LVL3:
  46              	.L3:
2029:..\FreeRTOS/queue.c **** 		}
2030:..\FreeRTOS/queue.c **** 		else
2031:..\FreeRTOS/queue.c **** 		{
2032:..\FreeRTOS/queue.c **** 			uxHighestPriorityOfWaitingTasks = tskIDLE_PRIORITY;
  47              		.loc 1 2032 0
  48 0010 0020     		movs	r0, #0
  49              	.LVL4:
  50              	.L2:
2033:..\FreeRTOS/queue.c **** 		}
2034:..\FreeRTOS/queue.c **** 
2035:..\FreeRTOS/queue.c **** 		return uxHighestPriorityOfWaitingTasks;
2036:..\FreeRTOS/queue.c **** 	}
  51              		.loc 1 2036 0
  52              		@ sp needed
  53 0012 7047     		bx	lr
  54              		.cfi_endproc
  55              	.LFE52:
  56              		.size	prvGetDisinheritPriorityAfterTimeout, .-prvGetDisinheritPriorityAfterTimeout
  57              		.section	.text.prvIsQueueFull,"ax",%progbits
  58              		.align	2
  59              		.code	16
  60              		.thumb_func
  61              		.type	prvIsQueueFull, %function
  62              	prvIsQueueFull:
  63              	.LFB58:
2037:..\FreeRTOS/queue.c **** 
2038:..\FreeRTOS/queue.c **** #endif /* configUSE_MUTEXES */
2039:..\FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
2040:..\FreeRTOS/queue.c **** 
2041:..\FreeRTOS/queue.c **** static BaseType_t prvCopyDataToQueue( Queue_t * const pxQueue, const void *pvItemToQueue, const Bas
2042:..\FreeRTOS/queue.c **** {
2043:..\FreeRTOS/queue.c **** BaseType_t xReturn = pdFALSE;
2044:..\FreeRTOS/queue.c **** UBaseType_t uxMessagesWaiting;
2045:..\FreeRTOS/queue.c **** 
2046:..\FreeRTOS/queue.c **** 	/* This function is called from a critical section. */
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccApaELb.s 			page 38


2047:..\FreeRTOS/queue.c **** 
2048:..\FreeRTOS/queue.c **** 	uxMessagesWaiting = pxQueue->uxMessagesWaiting;
2049:..\FreeRTOS/queue.c **** 
2050:..\FreeRTOS/queue.c **** 	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
2051:..\FreeRTOS/queue.c **** 	{
2052:..\FreeRTOS/queue.c **** 		#if ( configUSE_MUTEXES == 1 )
2053:..\FreeRTOS/queue.c **** 		{
2054:..\FreeRTOS/queue.c **** 			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
2055:..\FreeRTOS/queue.c **** 			{
2056:..\FreeRTOS/queue.c **** 				/* The mutex is no longer being held. */
2057:..\FreeRTOS/queue.c **** 				xReturn = xTaskPriorityDisinherit( ( void * ) pxQueue->pxMutexHolder );
2058:..\FreeRTOS/queue.c **** 				pxQueue->pxMutexHolder = NULL;
2059:..\FreeRTOS/queue.c **** 			}
2060:..\FreeRTOS/queue.c **** 			else
2061:..\FreeRTOS/queue.c **** 			{
2062:..\FreeRTOS/queue.c **** 				mtCOVERAGE_TEST_MARKER();
2063:..\FreeRTOS/queue.c **** 			}
2064:..\FreeRTOS/queue.c **** 		}
2065:..\FreeRTOS/queue.c **** 		#endif /* configUSE_MUTEXES */
2066:..\FreeRTOS/queue.c **** 	}
2067:..\FreeRTOS/queue.c **** 	else if( xPosition == queueSEND_TO_BACK )
2068:..\FreeRTOS/queue.c **** 	{
2069:..\FreeRTOS/queue.c **** 		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); 
2070:..\FreeRTOS/queue.c **** 		pxQueue->pcWriteTo += pxQueue->uxItemSize;
2071:..\FreeRTOS/queue.c **** 		if( pxQueue->pcWriteTo >= pxQueue->pcTail ) /*lint !e946 MISRA exception justified as comparison 
2072:..\FreeRTOS/queue.c **** 		{
2073:..\FreeRTOS/queue.c **** 			pxQueue->pcWriteTo = pxQueue->pcHead;
2074:..\FreeRTOS/queue.c **** 		}
2075:..\FreeRTOS/queue.c **** 		else
2076:..\FreeRTOS/queue.c **** 		{
2077:..\FreeRTOS/queue.c **** 			mtCOVERAGE_TEST_MARKER();
2078:..\FreeRTOS/queue.c **** 		}
2079:..\FreeRTOS/queue.c **** 	}
2080:..\FreeRTOS/queue.c **** 	else
2081:..\FreeRTOS/queue.c **** 	{
2082:..\FreeRTOS/queue.c **** 		( void ) memcpy( ( void * ) pxQueue->u.pcReadFrom, pvItemToQueue, ( size_t ) pxQueue->uxItemSize 
2083:..\FreeRTOS/queue.c **** 		pxQueue->u.pcReadFrom -= pxQueue->uxItemSize;
2084:..\FreeRTOS/queue.c **** 		if( pxQueue->u.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as compariso
2085:..\FreeRTOS/queue.c **** 		{
2086:..\FreeRTOS/queue.c **** 			pxQueue->u.pcReadFrom = ( pxQueue->pcTail - pxQueue->uxItemSize );
2087:..\FreeRTOS/queue.c **** 		}
2088:..\FreeRTOS/queue.c **** 		else
2089:..\FreeRTOS/queue.c **** 		{
2090:..\FreeRTOS/queue.c **** 			mtCOVERAGE_TEST_MARKER();
2091:..\FreeRTOS/queue.c **** 		}
2092:..\FreeRTOS/queue.c **** 
2093:..\FreeRTOS/queue.c **** 		if( xPosition == queueOVERWRITE )
2094:..\FreeRTOS/queue.c **** 		{
2095:..\FreeRTOS/queue.c **** 			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
2096:..\FreeRTOS/queue.c **** 			{
2097:..\FreeRTOS/queue.c **** 				/* An item is not being added but overwritten, so subtract
2098:..\FreeRTOS/queue.c **** 				one from the recorded number of items in the queue so when
2099:..\FreeRTOS/queue.c **** 				one is added again below the number of recorded items remains
2100:..\FreeRTOS/queue.c **** 				correct. */
2101:..\FreeRTOS/queue.c **** 				--uxMessagesWaiting;
2102:..\FreeRTOS/queue.c **** 			}
2103:..\FreeRTOS/queue.c **** 			else
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccApaELb.s 			page 39


2104:..\FreeRTOS/queue.c **** 			{
2105:..\FreeRTOS/queue.c **** 				mtCOVERAGE_TEST_MARKER();
2106:..\FreeRTOS/queue.c **** 			}
2107:..\FreeRTOS/queue.c **** 		}
2108:..\FreeRTOS/queue.c **** 		else
2109:..\FreeRTOS/queue.c **** 		{
2110:..\FreeRTOS/queue.c **** 			mtCOVERAGE_TEST_MARKER();
2111:..\FreeRTOS/queue.c **** 		}
2112:..\FreeRTOS/queue.c **** 	}
2113:..\FreeRTOS/queue.c **** 
2114:..\FreeRTOS/queue.c **** 	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
2115:..\FreeRTOS/queue.c **** 
2116:..\FreeRTOS/queue.c **** 	return xReturn;
2117:..\FreeRTOS/queue.c **** }
2118:..\FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
2119:..\FreeRTOS/queue.c **** 
2120:..\FreeRTOS/queue.c **** static void prvCopyDataFromQueue( Queue_t * const pxQueue, void * const pvBuffer )
2121:..\FreeRTOS/queue.c **** {
2122:..\FreeRTOS/queue.c **** 	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
2123:..\FreeRTOS/queue.c **** 	{
2124:..\FreeRTOS/queue.c **** 		pxQueue->u.pcReadFrom += pxQueue->uxItemSize;
2125:..\FreeRTOS/queue.c **** 		if( pxQueue->u.pcReadFrom >= pxQueue->pcTail ) /*lint !e946 MISRA exception justified as use of t
2126:..\FreeRTOS/queue.c **** 		{
2127:..\FreeRTOS/queue.c **** 			pxQueue->u.pcReadFrom = pxQueue->pcHead;
2128:..\FreeRTOS/queue.c **** 		}
2129:..\FreeRTOS/queue.c **** 		else
2130:..\FreeRTOS/queue.c **** 		{
2131:..\FreeRTOS/queue.c **** 			mtCOVERAGE_TEST_MARKER();
2132:..\FreeRTOS/queue.c **** 		}
2133:..\FreeRTOS/queue.c **** 		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.pcReadFrom, ( size_t ) pxQueue->uxIte
2134:..\FreeRTOS/queue.c **** 	}
2135:..\FreeRTOS/queue.c **** }
2136:..\FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
2137:..\FreeRTOS/queue.c **** 
2138:..\FreeRTOS/queue.c **** static void prvUnlockQueue( Queue_t * const pxQueue )
2139:..\FreeRTOS/queue.c **** {
2140:..\FreeRTOS/queue.c **** 	/* THIS FUNCTION MUST BE CALLED WITH THE SCHEDULER SUSPENDED. */
2141:..\FreeRTOS/queue.c **** 
2142:..\FreeRTOS/queue.c **** 	/* The lock counts contains the number of extra data items placed or
2143:..\FreeRTOS/queue.c **** 	removed from the queue while the queue was locked.  When a queue is
2144:..\FreeRTOS/queue.c **** 	locked items can be added or removed, but the event lists cannot be
2145:..\FreeRTOS/queue.c **** 	updated. */
2146:..\FreeRTOS/queue.c **** 	taskENTER_CRITICAL();
2147:..\FreeRTOS/queue.c **** 	{
2148:..\FreeRTOS/queue.c **** 		int8_t cTxLock = pxQueue->cTxLock;
2149:..\FreeRTOS/queue.c **** 
2150:..\FreeRTOS/queue.c **** 		/* See if data was added to the queue while it was locked. */
2151:..\FreeRTOS/queue.c **** 		while( cTxLock > queueLOCKED_UNMODIFIED )
2152:..\FreeRTOS/queue.c **** 		{
2153:..\FreeRTOS/queue.c **** 			/* Data was posted while the queue was locked.  Are any tasks
2154:..\FreeRTOS/queue.c **** 			blocked waiting for data to become available? */
2155:..\FreeRTOS/queue.c **** 			#if ( configUSE_QUEUE_SETS == 1 )
2156:..\FreeRTOS/queue.c **** 			{
2157:..\FreeRTOS/queue.c **** 				if( pxQueue->pxQueueSetContainer != NULL )
2158:..\FreeRTOS/queue.c **** 				{
2159:..\FreeRTOS/queue.c **** 					if( prvNotifyQueueSetContainer( pxQueue, queueSEND_TO_BACK ) != pdFALSE )
2160:..\FreeRTOS/queue.c **** 					{
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccApaELb.s 			page 40


2161:..\FreeRTOS/queue.c **** 						/* The queue is a member of a queue set, and posting to
2162:..\FreeRTOS/queue.c **** 						the queue set caused a higher priority task to unblock.
2163:..\FreeRTOS/queue.c **** 						A context switch is required. */
2164:..\FreeRTOS/queue.c **** 						vTaskMissedYield();
2165:..\FreeRTOS/queue.c **** 					}
2166:..\FreeRTOS/queue.c **** 					else
2167:..\FreeRTOS/queue.c **** 					{
2168:..\FreeRTOS/queue.c **** 						mtCOVERAGE_TEST_MARKER();
2169:..\FreeRTOS/queue.c **** 					}
2170:..\FreeRTOS/queue.c **** 				}
2171:..\FreeRTOS/queue.c **** 				else
2172:..\FreeRTOS/queue.c **** 				{
2173:..\FreeRTOS/queue.c **** 					/* Tasks that are removed from the event list will get
2174:..\FreeRTOS/queue.c **** 					added to the pending ready list as the scheduler is still
2175:..\FreeRTOS/queue.c **** 					suspended. */
2176:..\FreeRTOS/queue.c **** 					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
2177:..\FreeRTOS/queue.c **** 					{
2178:..\FreeRTOS/queue.c **** 						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
2179:..\FreeRTOS/queue.c **** 						{
2180:..\FreeRTOS/queue.c **** 							/* The task waiting has a higher priority so record that a
2181:..\FreeRTOS/queue.c **** 							context	switch is required. */
2182:..\FreeRTOS/queue.c **** 							vTaskMissedYield();
2183:..\FreeRTOS/queue.c **** 						}
2184:..\FreeRTOS/queue.c **** 						else
2185:..\FreeRTOS/queue.c **** 						{
2186:..\FreeRTOS/queue.c **** 							mtCOVERAGE_TEST_MARKER();
2187:..\FreeRTOS/queue.c **** 						}
2188:..\FreeRTOS/queue.c **** 					}
2189:..\FreeRTOS/queue.c **** 					else
2190:..\FreeRTOS/queue.c **** 					{
2191:..\FreeRTOS/queue.c **** 						break;
2192:..\FreeRTOS/queue.c **** 					}
2193:..\FreeRTOS/queue.c **** 				}
2194:..\FreeRTOS/queue.c **** 			}
2195:..\FreeRTOS/queue.c **** 			#else /* configUSE_QUEUE_SETS */
2196:..\FreeRTOS/queue.c **** 			{
2197:..\FreeRTOS/queue.c **** 				/* Tasks that are removed from the event list will get added to
2198:..\FreeRTOS/queue.c **** 				the pending ready list as the scheduler is still suspended. */
2199:..\FreeRTOS/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
2200:..\FreeRTOS/queue.c **** 				{
2201:..\FreeRTOS/queue.c **** 					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
2202:..\FreeRTOS/queue.c **** 					{
2203:..\FreeRTOS/queue.c **** 						/* The task waiting has a higher priority so record that
2204:..\FreeRTOS/queue.c **** 						a context switch is required. */
2205:..\FreeRTOS/queue.c **** 						vTaskMissedYield();
2206:..\FreeRTOS/queue.c **** 					}
2207:..\FreeRTOS/queue.c **** 					else
2208:..\FreeRTOS/queue.c **** 					{
2209:..\FreeRTOS/queue.c **** 						mtCOVERAGE_TEST_MARKER();
2210:..\FreeRTOS/queue.c **** 					}
2211:..\FreeRTOS/queue.c **** 				}
2212:..\FreeRTOS/queue.c **** 				else
2213:..\FreeRTOS/queue.c **** 				{
2214:..\FreeRTOS/queue.c **** 					break;
2215:..\FreeRTOS/queue.c **** 				}
2216:..\FreeRTOS/queue.c **** 			}
2217:..\FreeRTOS/queue.c **** 			#endif /* configUSE_QUEUE_SETS */
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccApaELb.s 			page 41


2218:..\FreeRTOS/queue.c **** 
2219:..\FreeRTOS/queue.c **** 			--cTxLock;
2220:..\FreeRTOS/queue.c **** 		}
2221:..\FreeRTOS/queue.c **** 
2222:..\FreeRTOS/queue.c **** 		pxQueue->cTxLock = queueUNLOCKED;
2223:..\FreeRTOS/queue.c **** 	}
2224:..\FreeRTOS/queue.c **** 	taskEXIT_CRITICAL();
2225:..\FreeRTOS/queue.c **** 
2226:..\FreeRTOS/queue.c **** 	/* Do the same for the Rx lock. */
2227:..\FreeRTOS/queue.c **** 	taskENTER_CRITICAL();
2228:..\FreeRTOS/queue.c **** 	{
2229:..\FreeRTOS/queue.c **** 		int8_t cRxLock = pxQueue->cRxLock;
2230:..\FreeRTOS/queue.c **** 
2231:..\FreeRTOS/queue.c **** 		while( cRxLock > queueLOCKED_UNMODIFIED )
2232:..\FreeRTOS/queue.c **** 		{
2233:..\FreeRTOS/queue.c **** 			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
2234:..\FreeRTOS/queue.c **** 			{
2235:..\FreeRTOS/queue.c **** 				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
2236:..\FreeRTOS/queue.c **** 				{
2237:..\FreeRTOS/queue.c **** 					vTaskMissedYield();
2238:..\FreeRTOS/queue.c **** 				}
2239:..\FreeRTOS/queue.c **** 				else
2240:..\FreeRTOS/queue.c **** 				{
2241:..\FreeRTOS/queue.c **** 					mtCOVERAGE_TEST_MARKER();
2242:..\FreeRTOS/queue.c **** 				}
2243:..\FreeRTOS/queue.c **** 
2244:..\FreeRTOS/queue.c **** 				--cRxLock;
2245:..\FreeRTOS/queue.c **** 			}
2246:..\FreeRTOS/queue.c **** 			else
2247:..\FreeRTOS/queue.c **** 			{
2248:..\FreeRTOS/queue.c **** 				break;
2249:..\FreeRTOS/queue.c **** 			}
2250:..\FreeRTOS/queue.c **** 		}
2251:..\FreeRTOS/queue.c **** 
2252:..\FreeRTOS/queue.c **** 		pxQueue->cRxLock = queueUNLOCKED;
2253:..\FreeRTOS/queue.c **** 	}
2254:..\FreeRTOS/queue.c **** 	taskEXIT_CRITICAL();
2255:..\FreeRTOS/queue.c **** }
2256:..\FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
2257:..\FreeRTOS/queue.c **** 
2258:..\FreeRTOS/queue.c **** static BaseType_t prvIsQueueEmpty( const Queue_t *pxQueue )
2259:..\FreeRTOS/queue.c **** {
2260:..\FreeRTOS/queue.c **** BaseType_t xReturn;
2261:..\FreeRTOS/queue.c **** 
2262:..\FreeRTOS/queue.c **** 	taskENTER_CRITICAL();
2263:..\FreeRTOS/queue.c **** 	{
2264:..\FreeRTOS/queue.c **** 		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
2265:..\FreeRTOS/queue.c **** 		{
2266:..\FreeRTOS/queue.c **** 			xReturn = pdTRUE;
2267:..\FreeRTOS/queue.c **** 		}
2268:..\FreeRTOS/queue.c **** 		else
2269:..\FreeRTOS/queue.c **** 		{
2270:..\FreeRTOS/queue.c **** 			xReturn = pdFALSE;
2271:..\FreeRTOS/queue.c **** 		}
2272:..\FreeRTOS/queue.c **** 	}
2273:..\FreeRTOS/queue.c **** 	taskEXIT_CRITICAL();
2274:..\FreeRTOS/queue.c **** 
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccApaELb.s 			page 42


2275:..\FreeRTOS/queue.c **** 	return xReturn;
2276:..\FreeRTOS/queue.c **** }
2277:..\FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
2278:..\FreeRTOS/queue.c **** 
2279:..\FreeRTOS/queue.c **** BaseType_t xQueueIsQueueEmptyFromISR( const QueueHandle_t xQueue )
2280:..\FreeRTOS/queue.c **** {
2281:..\FreeRTOS/queue.c **** BaseType_t xReturn;
2282:..\FreeRTOS/queue.c **** 
2283:..\FreeRTOS/queue.c **** 	configASSERT( xQueue );
2284:..\FreeRTOS/queue.c **** 	if( ( ( Queue_t * ) xQueue )->uxMessagesWaiting == ( UBaseType_t ) 0 )
2285:..\FreeRTOS/queue.c **** 	{
2286:..\FreeRTOS/queue.c **** 		xReturn = pdTRUE;
2287:..\FreeRTOS/queue.c **** 	}
2288:..\FreeRTOS/queue.c **** 	else
2289:..\FreeRTOS/queue.c **** 	{
2290:..\FreeRTOS/queue.c **** 		xReturn = pdFALSE;
2291:..\FreeRTOS/queue.c **** 	}
2292:..\FreeRTOS/queue.c **** 
2293:..\FreeRTOS/queue.c **** 	return xReturn;
2294:..\FreeRTOS/queue.c **** } /*lint !e818 xQueue could not be pointer to const because it is a typedef. */
2295:..\FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
2296:..\FreeRTOS/queue.c **** 
2297:..\FreeRTOS/queue.c **** static BaseType_t prvIsQueueFull( const Queue_t *pxQueue )
2298:..\FreeRTOS/queue.c **** {
  64              		.loc 1 2298 0
  65              		.cfi_startproc
  66              		@ args = 0, pretend = 0, frame = 0
  67              		@ frame_needed = 0, uses_anonymous_args = 0
  68              	.LVL5:
  69 0000 10B5     		push	{r4, lr}
  70              		.cfi_def_cfa_offset 8
  71              		.cfi_offset 4, -8
  72              		.cfi_offset 14, -4
  73 0002 0400     		movs	r4, r0
2299:..\FreeRTOS/queue.c **** BaseType_t xReturn;
2300:..\FreeRTOS/queue.c **** 
2301:..\FreeRTOS/queue.c **** 	taskENTER_CRITICAL();
  74              		.loc 1 2301 0
  75 0004 FFF7FEFF 		bl	vPortEnterCritical
  76              	.LVL6:
2302:..\FreeRTOS/queue.c **** 	{
2303:..\FreeRTOS/queue.c **** 		if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
  77              		.loc 1 2303 0
  78 0008 A26B     		ldr	r2, [r4, #56]
  79 000a E36B     		ldr	r3, [r4, #60]
  80 000c 9A42     		cmp	r2, r3
  81 000e 01D1     		bne	.L6
2304:..\FreeRTOS/queue.c **** 		{
2305:..\FreeRTOS/queue.c **** 			xReturn = pdTRUE;
  82              		.loc 1 2305 0
  83 0010 0124     		movs	r4, #1
  84              	.LVL7:
  85 0012 00E0     		b	.L5
  86              	.LVL8:
  87              	.L6:
2306:..\FreeRTOS/queue.c **** 		}
2307:..\FreeRTOS/queue.c **** 		else
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccApaELb.s 			page 43


2308:..\FreeRTOS/queue.c **** 		{
2309:..\FreeRTOS/queue.c **** 			xReturn = pdFALSE;
  88              		.loc 1 2309 0
  89 0014 0024     		movs	r4, #0
  90              	.LVL9:
  91              	.L5:
2310:..\FreeRTOS/queue.c **** 		}
2311:..\FreeRTOS/queue.c **** 	}
2312:..\FreeRTOS/queue.c **** 	taskEXIT_CRITICAL();
  92              		.loc 1 2312 0
  93 0016 FFF7FEFF 		bl	vPortExitCritical
  94              	.LVL10:
2313:..\FreeRTOS/queue.c **** 
2314:..\FreeRTOS/queue.c **** 	return xReturn;
2315:..\FreeRTOS/queue.c **** }
  95              		.loc 1 2315 0
  96 001a 2000     		movs	r0, r4
  97              		@ sp needed
  98              	.LVL11:
  99 001c 10BD     		pop	{r4, pc}
 100              		.cfi_endproc
 101              	.LFE58:
 102              		.size	prvIsQueueFull, .-prvIsQueueFull
 103 001e C046     		.section	.text.prvIsQueueEmpty,"ax",%progbits
 104              		.align	2
 105              		.code	16
 106              		.thumb_func
 107              		.type	prvIsQueueEmpty, %function
 108              	prvIsQueueEmpty:
 109              	.LFB56:
2259:..\FreeRTOS/queue.c **** BaseType_t xReturn;
 110              		.loc 1 2259 0
 111              		.cfi_startproc
 112              		@ args = 0, pretend = 0, frame = 0
 113              		@ frame_needed = 0, uses_anonymous_args = 0
 114              	.LVL12:
 115 0000 10B5     		push	{r4, lr}
 116              		.cfi_def_cfa_offset 8
 117              		.cfi_offset 4, -8
 118              		.cfi_offset 14, -4
 119 0002 0400     		movs	r4, r0
2262:..\FreeRTOS/queue.c **** 	{
 120              		.loc 1 2262 0
 121 0004 FFF7FEFF 		bl	vPortEnterCritical
 122              	.LVL13:
2264:..\FreeRTOS/queue.c **** 		{
 123              		.loc 1 2264 0
 124 0008 A36B     		ldr	r3, [r4, #56]
 125 000a 002B     		cmp	r3, #0
 126 000c 01D1     		bne	.L9
2266:..\FreeRTOS/queue.c **** 		}
 127              		.loc 1 2266 0
 128 000e 0124     		movs	r4, #1
 129              	.LVL14:
 130 0010 00E0     		b	.L8
 131              	.LVL15:
 132              	.L9:
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccApaELb.s 			page 44


2270:..\FreeRTOS/queue.c **** 		}
 133              		.loc 1 2270 0
 134 0012 0024     		movs	r4, #0
 135              	.LVL16:
 136              	.L8:
2273:..\FreeRTOS/queue.c **** 
 137              		.loc 1 2273 0
 138 0014 FFF7FEFF 		bl	vPortExitCritical
 139              	.LVL17:
2276:..\FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
 140              		.loc 1 2276 0
 141 0018 2000     		movs	r0, r4
 142              		@ sp needed
 143              	.LVL18:
 144 001a 10BD     		pop	{r4, pc}
 145              		.cfi_endproc
 146              	.LFE56:
 147              		.size	prvIsQueueEmpty, .-prvIsQueueEmpty
 148              		.section	.text.prvCopyDataToQueue,"ax",%progbits
 149              		.align	2
 150              		.code	16
 151              		.thumb_func
 152              		.type	prvCopyDataToQueue, %function
 153              	prvCopyDataToQueue:
 154              	.LFB53:
2042:..\FreeRTOS/queue.c **** BaseType_t xReturn = pdFALSE;
 155              		.loc 1 2042 0
 156              		.cfi_startproc
 157              		@ args = 0, pretend = 0, frame = 0
 158              		@ frame_needed = 0, uses_anonymous_args = 0
 159              	.LVL19:
 160 0000 70B5     		push	{r4, r5, r6, lr}
 161              		.cfi_def_cfa_offset 16
 162              		.cfi_offset 4, -16
 163              		.cfi_offset 5, -12
 164              		.cfi_offset 6, -8
 165              		.cfi_offset 14, -4
 166 0002 0400     		movs	r4, r0
 167 0004 1600     		movs	r6, r2
 168              	.LVL20:
2048:..\FreeRTOS/queue.c **** 
 169              		.loc 1 2048 0
 170 0006 856B     		ldr	r5, [r0, #56]
 171              	.LVL21:
2050:..\FreeRTOS/queue.c **** 	{
 172              		.loc 1 2050 0
 173 0008 026C     		ldr	r2, [r0, #64]
 174              	.LVL22:
 175 000a 002A     		cmp	r2, #0
 176 000c 08D1     		bne	.L11
2054:..\FreeRTOS/queue.c **** 			{
 177              		.loc 1 2054 0
 178 000e 0368     		ldr	r3, [r0]
 179 0010 002B     		cmp	r3, #0
 180 0012 2CD1     		bne	.L15
2057:..\FreeRTOS/queue.c **** 				pxQueue->pxMutexHolder = NULL;
 181              		.loc 1 2057 0
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccApaELb.s 			page 45


 182 0014 4068     		ldr	r0, [r0, #4]
 183              	.LVL23:
 184 0016 FFF7FEFF 		bl	xTaskPriorityDisinherit
 185              	.LVL24:
2058:..\FreeRTOS/queue.c **** 			}
 186              		.loc 1 2058 0
 187 001a 0023     		movs	r3, #0
 188 001c 6360     		str	r3, [r4, #4]
 189 001e 2DE0     		b	.L12
 190              	.LVL25:
 191              	.L11:
2067:..\FreeRTOS/queue.c **** 	{
 192              		.loc 1 2067 0
 193 0020 002E     		cmp	r6, #0
 194 0022 0ED1     		bne	.L13
2069:..\FreeRTOS/queue.c **** 		pxQueue->pcWriteTo += pxQueue->uxItemSize;
 195              		.loc 1 2069 0
 196 0024 8068     		ldr	r0, [r0, #8]
 197              	.LVL26:
 198 0026 FFF7FEFF 		bl	memcpy
 199              	.LVL27:
2070:..\FreeRTOS/queue.c **** 		if( pxQueue->pcWriteTo >= pxQueue->pcTail ) /*lint !e946 MISRA exception justified as comparison 
 200              		.loc 1 2070 0
 201 002a A368     		ldr	r3, [r4, #8]
 202 002c 226C     		ldr	r2, [r4, #64]
 203 002e 9446     		mov	ip, r2
 204 0030 6344     		add	r3, r3, ip
 205 0032 A360     		str	r3, [r4, #8]
2071:..\FreeRTOS/queue.c **** 		{
 206              		.loc 1 2071 0
 207 0034 6268     		ldr	r2, [r4, #4]
 208 0036 9342     		cmp	r3, r2
 209 0038 1BD3     		bcc	.L16
2073:..\FreeRTOS/queue.c **** 		}
 210              		.loc 1 2073 0
 211 003a 2368     		ldr	r3, [r4]
 212 003c A360     		str	r3, [r4, #8]
2043:..\FreeRTOS/queue.c **** UBaseType_t uxMessagesWaiting;
 213              		.loc 1 2043 0
 214 003e 0020     		movs	r0, #0
 215 0040 1CE0     		b	.L12
 216              	.LVL28:
 217              	.L13:
2082:..\FreeRTOS/queue.c **** 		pxQueue->u.pcReadFrom -= pxQueue->uxItemSize;
 218              		.loc 1 2082 0
 219 0042 C068     		ldr	r0, [r0, #12]
 220              	.LVL29:
 221 0044 FFF7FEFF 		bl	memcpy
 222              	.LVL30:
2083:..\FreeRTOS/queue.c **** 		if( pxQueue->u.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as compariso
 223              		.loc 1 2083 0
 224 0048 236C     		ldr	r3, [r4, #64]
 225 004a 5B42     		rsbs	r3, r3, #0
 226 004c E268     		ldr	r2, [r4, #12]
 227 004e D218     		adds	r2, r2, r3
 228 0050 E260     		str	r2, [r4, #12]
2084:..\FreeRTOS/queue.c **** 		{
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccApaELb.s 			page 46


 229              		.loc 1 2084 0
 230 0052 2168     		ldr	r1, [r4]
 231 0054 8A42     		cmp	r2, r1
 232 0056 03D2     		bcs	.L14
2086:..\FreeRTOS/queue.c **** 		}
 233              		.loc 1 2086 0
 234 0058 6268     		ldr	r2, [r4, #4]
 235 005a 9446     		mov	ip, r2
 236 005c 6344     		add	r3, r3, ip
 237 005e E360     		str	r3, [r4, #12]
 238              	.L14:
2093:..\FreeRTOS/queue.c **** 		{
 239              		.loc 1 2093 0
 240 0060 022E     		cmp	r6, #2
 241 0062 08D1     		bne	.L17
2095:..\FreeRTOS/queue.c **** 			{
 242              		.loc 1 2095 0
 243 0064 002D     		cmp	r5, #0
 244 0066 08D0     		beq	.L18
2101:..\FreeRTOS/queue.c **** 			}
 245              		.loc 1 2101 0
 246 0068 013D     		subs	r5, r5, #1
 247              	.LVL31:
2043:..\FreeRTOS/queue.c **** UBaseType_t uxMessagesWaiting;
 248              		.loc 1 2043 0
 249 006a 0020     		movs	r0, #0
 250 006c 06E0     		b	.L12
 251              	.LVL32:
 252              	.L15:
 253 006e 0020     		movs	r0, #0
 254              	.LVL33:
 255 0070 04E0     		b	.L12
 256              	.LVL34:
 257              	.L16:
 258 0072 0020     		movs	r0, #0
 259 0074 02E0     		b	.L12
 260              	.L17:
 261 0076 0020     		movs	r0, #0
 262 0078 00E0     		b	.L12
 263              	.L18:
 264 007a 0020     		movs	r0, #0
 265              	.LVL35:
 266              	.L12:
2114:..\FreeRTOS/queue.c **** 
 267              		.loc 1 2114 0
 268 007c 0135     		adds	r5, r5, #1
 269              	.LVL36:
 270 007e A563     		str	r5, [r4, #56]
2117:..\FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
 271              		.loc 1 2117 0
 272              		@ sp needed
 273              	.LVL37:
 274              	.LVL38:
 275              	.LVL39:
 276 0080 70BD     		pop	{r4, r5, r6, pc}
 277              		.cfi_endproc
 278              	.LFE53:
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccApaELb.s 			page 47


 279              		.size	prvCopyDataToQueue, .-prvCopyDataToQueue
 280 0082 C046     		.section	.text.prvNotifyQueueSetContainer,"ax",%progbits
 281              		.align	2
 282              		.code	16
 283              		.thumb_func
 284              		.type	prvNotifyQueueSetContainer, %function
 285              	prvNotifyQueueSetContainer:
 286              	.LFB68:
2316:..\FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
2317:..\FreeRTOS/queue.c **** 
2318:..\FreeRTOS/queue.c **** BaseType_t xQueueIsQueueFullFromISR( const QueueHandle_t xQueue )
2319:..\FreeRTOS/queue.c **** {
2320:..\FreeRTOS/queue.c **** BaseType_t xReturn;
2321:..\FreeRTOS/queue.c **** 
2322:..\FreeRTOS/queue.c **** 	configASSERT( xQueue );
2323:..\FreeRTOS/queue.c **** 	if( ( ( Queue_t * ) xQueue )->uxMessagesWaiting == ( ( Queue_t * ) xQueue )->uxLength )
2324:..\FreeRTOS/queue.c **** 	{
2325:..\FreeRTOS/queue.c **** 		xReturn = pdTRUE;
2326:..\FreeRTOS/queue.c **** 	}
2327:..\FreeRTOS/queue.c **** 	else
2328:..\FreeRTOS/queue.c **** 	{
2329:..\FreeRTOS/queue.c **** 		xReturn = pdFALSE;
2330:..\FreeRTOS/queue.c **** 	}
2331:..\FreeRTOS/queue.c **** 
2332:..\FreeRTOS/queue.c **** 	return xReturn;
2333:..\FreeRTOS/queue.c **** } /*lint !e818 xQueue could not be pointer to const because it is a typedef. */
2334:..\FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
2335:..\FreeRTOS/queue.c **** 
2336:..\FreeRTOS/queue.c **** #if ( configUSE_CO_ROUTINES == 1 )
2337:..\FreeRTOS/queue.c **** 
2338:..\FreeRTOS/queue.c **** 	BaseType_t xQueueCRSend( QueueHandle_t xQueue, const void *pvItemToQueue, TickType_t xTicksToWait 
2339:..\FreeRTOS/queue.c **** 	{
2340:..\FreeRTOS/queue.c **** 	BaseType_t xReturn;
2341:..\FreeRTOS/queue.c **** 	Queue_t * const pxQueue = ( Queue_t * ) xQueue;
2342:..\FreeRTOS/queue.c **** 
2343:..\FreeRTOS/queue.c **** 		/* If the queue is already full we may have to block.  A critical section
2344:..\FreeRTOS/queue.c **** 		is required to prevent an interrupt removing something from the queue
2345:..\FreeRTOS/queue.c **** 		between the check to see if the queue is full and blocking on the queue. */
2346:..\FreeRTOS/queue.c **** 		portDISABLE_INTERRUPTS();
2347:..\FreeRTOS/queue.c **** 		{
2348:..\FreeRTOS/queue.c **** 			if( prvIsQueueFull( pxQueue ) != pdFALSE )
2349:..\FreeRTOS/queue.c **** 			{
2350:..\FreeRTOS/queue.c **** 				/* The queue is full - do we want to block or just leave without
2351:..\FreeRTOS/queue.c **** 				posting? */
2352:..\FreeRTOS/queue.c **** 				if( xTicksToWait > ( TickType_t ) 0 )
2353:..\FreeRTOS/queue.c **** 				{
2354:..\FreeRTOS/queue.c **** 					/* As this is called from a coroutine we cannot block directly, but
2355:..\FreeRTOS/queue.c **** 					return indicating that we need to block. */
2356:..\FreeRTOS/queue.c **** 					vCoRoutineAddToDelayedList( xTicksToWait, &( pxQueue->xTasksWaitingToSend ) );
2357:..\FreeRTOS/queue.c **** 					portENABLE_INTERRUPTS();
2358:..\FreeRTOS/queue.c **** 					return errQUEUE_BLOCKED;
2359:..\FreeRTOS/queue.c **** 				}
2360:..\FreeRTOS/queue.c **** 				else
2361:..\FreeRTOS/queue.c **** 				{
2362:..\FreeRTOS/queue.c **** 					portENABLE_INTERRUPTS();
2363:..\FreeRTOS/queue.c **** 					return errQUEUE_FULL;
2364:..\FreeRTOS/queue.c **** 				}
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccApaELb.s 			page 48


2365:..\FreeRTOS/queue.c **** 			}
2366:..\FreeRTOS/queue.c **** 		}
2367:..\FreeRTOS/queue.c **** 		portENABLE_INTERRUPTS();
2368:..\FreeRTOS/queue.c **** 
2369:..\FreeRTOS/queue.c **** 		portDISABLE_INTERRUPTS();
2370:..\FreeRTOS/queue.c **** 		{
2371:..\FreeRTOS/queue.c **** 			if( pxQueue->uxMessagesWaiting < pxQueue->uxLength )
2372:..\FreeRTOS/queue.c **** 			{
2373:..\FreeRTOS/queue.c **** 				/* There is room in the queue, copy the data into the queue. */
2374:..\FreeRTOS/queue.c **** 				prvCopyDataToQueue( pxQueue, pvItemToQueue, queueSEND_TO_BACK );
2375:..\FreeRTOS/queue.c **** 				xReturn = pdPASS;
2376:..\FreeRTOS/queue.c **** 
2377:..\FreeRTOS/queue.c **** 				/* Were any co-routines waiting for data to become available? */
2378:..\FreeRTOS/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
2379:..\FreeRTOS/queue.c **** 				{
2380:..\FreeRTOS/queue.c **** 					/* In this instance the co-routine could be placed directly
2381:..\FreeRTOS/queue.c **** 					into the ready list as we are within a critical section.
2382:..\FreeRTOS/queue.c **** 					Instead the same pending ready list mechanism is used as if
2383:..\FreeRTOS/queue.c **** 					the event were caused from within an interrupt. */
2384:..\FreeRTOS/queue.c **** 					if( xCoRoutineRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
2385:..\FreeRTOS/queue.c **** 					{
2386:..\FreeRTOS/queue.c **** 						/* The co-routine waiting has a higher priority so record
2387:..\FreeRTOS/queue.c **** 						that a yield might be appropriate. */
2388:..\FreeRTOS/queue.c **** 						xReturn = errQUEUE_YIELD;
2389:..\FreeRTOS/queue.c **** 					}
2390:..\FreeRTOS/queue.c **** 					else
2391:..\FreeRTOS/queue.c **** 					{
2392:..\FreeRTOS/queue.c **** 						mtCOVERAGE_TEST_MARKER();
2393:..\FreeRTOS/queue.c **** 					}
2394:..\FreeRTOS/queue.c **** 				}
2395:..\FreeRTOS/queue.c **** 				else
2396:..\FreeRTOS/queue.c **** 				{
2397:..\FreeRTOS/queue.c **** 					mtCOVERAGE_TEST_MARKER();
2398:..\FreeRTOS/queue.c **** 				}
2399:..\FreeRTOS/queue.c **** 			}
2400:..\FreeRTOS/queue.c **** 			else
2401:..\FreeRTOS/queue.c **** 			{
2402:..\FreeRTOS/queue.c **** 				xReturn = errQUEUE_FULL;
2403:..\FreeRTOS/queue.c **** 			}
2404:..\FreeRTOS/queue.c **** 		}
2405:..\FreeRTOS/queue.c **** 		portENABLE_INTERRUPTS();
2406:..\FreeRTOS/queue.c **** 
2407:..\FreeRTOS/queue.c **** 		return xReturn;
2408:..\FreeRTOS/queue.c **** 	}
2409:..\FreeRTOS/queue.c **** 
2410:..\FreeRTOS/queue.c **** #endif /* configUSE_CO_ROUTINES */
2411:..\FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
2412:..\FreeRTOS/queue.c **** 
2413:..\FreeRTOS/queue.c **** #if ( configUSE_CO_ROUTINES == 1 )
2414:..\FreeRTOS/queue.c **** 
2415:..\FreeRTOS/queue.c **** 	BaseType_t xQueueCRReceive( QueueHandle_t xQueue, void *pvBuffer, TickType_t xTicksToWait )
2416:..\FreeRTOS/queue.c **** 	{
2417:..\FreeRTOS/queue.c **** 	BaseType_t xReturn;
2418:..\FreeRTOS/queue.c **** 	Queue_t * const pxQueue = ( Queue_t * ) xQueue;
2419:..\FreeRTOS/queue.c **** 
2420:..\FreeRTOS/queue.c **** 		/* If the queue is already empty we may have to block.  A critical section
2421:..\FreeRTOS/queue.c **** 		is required to prevent an interrupt adding something to the queue
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccApaELb.s 			page 49


2422:..\FreeRTOS/queue.c **** 		between the check to see if the queue is empty and blocking on the queue. */
2423:..\FreeRTOS/queue.c **** 		portDISABLE_INTERRUPTS();
2424:..\FreeRTOS/queue.c **** 		{
2425:..\FreeRTOS/queue.c **** 			if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0 )
2426:..\FreeRTOS/queue.c **** 			{
2427:..\FreeRTOS/queue.c **** 				/* There are no messages in the queue, do we want to block or just
2428:..\FreeRTOS/queue.c **** 				leave with nothing? */
2429:..\FreeRTOS/queue.c **** 				if( xTicksToWait > ( TickType_t ) 0 )
2430:..\FreeRTOS/queue.c **** 				{
2431:..\FreeRTOS/queue.c **** 					/* As this is a co-routine we cannot block directly, but return
2432:..\FreeRTOS/queue.c **** 					indicating that we need to block. */
2433:..\FreeRTOS/queue.c **** 					vCoRoutineAddToDelayedList( xTicksToWait, &( pxQueue->xTasksWaitingToReceive ) );
2434:..\FreeRTOS/queue.c **** 					portENABLE_INTERRUPTS();
2435:..\FreeRTOS/queue.c **** 					return errQUEUE_BLOCKED;
2436:..\FreeRTOS/queue.c **** 				}
2437:..\FreeRTOS/queue.c **** 				else
2438:..\FreeRTOS/queue.c **** 				{
2439:..\FreeRTOS/queue.c **** 					portENABLE_INTERRUPTS();
2440:..\FreeRTOS/queue.c **** 					return errQUEUE_FULL;
2441:..\FreeRTOS/queue.c **** 				}
2442:..\FreeRTOS/queue.c **** 			}
2443:..\FreeRTOS/queue.c **** 			else
2444:..\FreeRTOS/queue.c **** 			{
2445:..\FreeRTOS/queue.c **** 				mtCOVERAGE_TEST_MARKER();
2446:..\FreeRTOS/queue.c **** 			}
2447:..\FreeRTOS/queue.c **** 		}
2448:..\FreeRTOS/queue.c **** 		portENABLE_INTERRUPTS();
2449:..\FreeRTOS/queue.c **** 
2450:..\FreeRTOS/queue.c **** 		portDISABLE_INTERRUPTS();
2451:..\FreeRTOS/queue.c **** 		{
2452:..\FreeRTOS/queue.c **** 			if( pxQueue->uxMessagesWaiting > ( UBaseType_t ) 0 )
2453:..\FreeRTOS/queue.c **** 			{
2454:..\FreeRTOS/queue.c **** 				/* Data is available from the queue. */
2455:..\FreeRTOS/queue.c **** 				pxQueue->u.pcReadFrom += pxQueue->uxItemSize;
2456:..\FreeRTOS/queue.c **** 				if( pxQueue->u.pcReadFrom >= pxQueue->pcTail )
2457:..\FreeRTOS/queue.c **** 				{
2458:..\FreeRTOS/queue.c **** 					pxQueue->u.pcReadFrom = pxQueue->pcHead;
2459:..\FreeRTOS/queue.c **** 				}
2460:..\FreeRTOS/queue.c **** 				else
2461:..\FreeRTOS/queue.c **** 				{
2462:..\FreeRTOS/queue.c **** 					mtCOVERAGE_TEST_MARKER();
2463:..\FreeRTOS/queue.c **** 				}
2464:..\FreeRTOS/queue.c **** 				--( pxQueue->uxMessagesWaiting );
2465:..\FreeRTOS/queue.c **** 				( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.pcReadFrom, ( unsigned ) pxQueue->u
2466:..\FreeRTOS/queue.c **** 
2467:..\FreeRTOS/queue.c **** 				xReturn = pdPASS;
2468:..\FreeRTOS/queue.c **** 
2469:..\FreeRTOS/queue.c **** 				/* Were any co-routines waiting for space to become available? */
2470:..\FreeRTOS/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
2471:..\FreeRTOS/queue.c **** 				{
2472:..\FreeRTOS/queue.c **** 					/* In this instance the co-routine could be placed directly
2473:..\FreeRTOS/queue.c **** 					into the ready list as we are within a critical section.
2474:..\FreeRTOS/queue.c **** 					Instead the same pending ready list mechanism is used as if
2475:..\FreeRTOS/queue.c **** 					the event were caused from within an interrupt. */
2476:..\FreeRTOS/queue.c **** 					if( xCoRoutineRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
2477:..\FreeRTOS/queue.c **** 					{
2478:..\FreeRTOS/queue.c **** 						xReturn = errQUEUE_YIELD;
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccApaELb.s 			page 50


2479:..\FreeRTOS/queue.c **** 					}
2480:..\FreeRTOS/queue.c **** 					else
2481:..\FreeRTOS/queue.c **** 					{
2482:..\FreeRTOS/queue.c **** 						mtCOVERAGE_TEST_MARKER();
2483:..\FreeRTOS/queue.c **** 					}
2484:..\FreeRTOS/queue.c **** 				}
2485:..\FreeRTOS/queue.c **** 				else
2486:..\FreeRTOS/queue.c **** 				{
2487:..\FreeRTOS/queue.c **** 					mtCOVERAGE_TEST_MARKER();
2488:..\FreeRTOS/queue.c **** 				}
2489:..\FreeRTOS/queue.c **** 			}
2490:..\FreeRTOS/queue.c **** 			else
2491:..\FreeRTOS/queue.c **** 			{
2492:..\FreeRTOS/queue.c **** 				xReturn = pdFAIL;
2493:..\FreeRTOS/queue.c **** 			}
2494:..\FreeRTOS/queue.c **** 		}
2495:..\FreeRTOS/queue.c **** 		portENABLE_INTERRUPTS();
2496:..\FreeRTOS/queue.c **** 
2497:..\FreeRTOS/queue.c **** 		return xReturn;
2498:..\FreeRTOS/queue.c **** 	}
2499:..\FreeRTOS/queue.c **** 
2500:..\FreeRTOS/queue.c **** #endif /* configUSE_CO_ROUTINES */
2501:..\FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
2502:..\FreeRTOS/queue.c **** 
2503:..\FreeRTOS/queue.c **** #if ( configUSE_CO_ROUTINES == 1 )
2504:..\FreeRTOS/queue.c **** 
2505:..\FreeRTOS/queue.c **** 	BaseType_t xQueueCRSendFromISR( QueueHandle_t xQueue, const void *pvItemToQueue, BaseType_t xCoRou
2506:..\FreeRTOS/queue.c **** 	{
2507:..\FreeRTOS/queue.c **** 	Queue_t * const pxQueue = ( Queue_t * ) xQueue;
2508:..\FreeRTOS/queue.c **** 
2509:..\FreeRTOS/queue.c **** 		/* Cannot block within an ISR so if there is no space on the queue then
2510:..\FreeRTOS/queue.c **** 		exit without doing anything. */
2511:..\FreeRTOS/queue.c **** 		if( pxQueue->uxMessagesWaiting < pxQueue->uxLength )
2512:..\FreeRTOS/queue.c **** 		{
2513:..\FreeRTOS/queue.c **** 			prvCopyDataToQueue( pxQueue, pvItemToQueue, queueSEND_TO_BACK );
2514:..\FreeRTOS/queue.c **** 
2515:..\FreeRTOS/queue.c **** 			/* We only want to wake one co-routine per ISR, so check that a
2516:..\FreeRTOS/queue.c **** 			co-routine has not already been woken. */
2517:..\FreeRTOS/queue.c **** 			if( xCoRoutinePreviouslyWoken == pdFALSE )
2518:..\FreeRTOS/queue.c **** 			{
2519:..\FreeRTOS/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
2520:..\FreeRTOS/queue.c **** 				{
2521:..\FreeRTOS/queue.c **** 					if( xCoRoutineRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
2522:..\FreeRTOS/queue.c **** 					{
2523:..\FreeRTOS/queue.c **** 						return pdTRUE;
2524:..\FreeRTOS/queue.c **** 					}
2525:..\FreeRTOS/queue.c **** 					else
2526:..\FreeRTOS/queue.c **** 					{
2527:..\FreeRTOS/queue.c **** 						mtCOVERAGE_TEST_MARKER();
2528:..\FreeRTOS/queue.c **** 					}
2529:..\FreeRTOS/queue.c **** 				}
2530:..\FreeRTOS/queue.c **** 				else
2531:..\FreeRTOS/queue.c **** 				{
2532:..\FreeRTOS/queue.c **** 					mtCOVERAGE_TEST_MARKER();
2533:..\FreeRTOS/queue.c **** 				}
2534:..\FreeRTOS/queue.c **** 			}
2535:..\FreeRTOS/queue.c **** 			else
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccApaELb.s 			page 51


2536:..\FreeRTOS/queue.c **** 			{
2537:..\FreeRTOS/queue.c **** 				mtCOVERAGE_TEST_MARKER();
2538:..\FreeRTOS/queue.c **** 			}
2539:..\FreeRTOS/queue.c **** 		}
2540:..\FreeRTOS/queue.c **** 		else
2541:..\FreeRTOS/queue.c **** 		{
2542:..\FreeRTOS/queue.c **** 			mtCOVERAGE_TEST_MARKER();
2543:..\FreeRTOS/queue.c **** 		}
2544:..\FreeRTOS/queue.c **** 
2545:..\FreeRTOS/queue.c **** 		return xCoRoutinePreviouslyWoken;
2546:..\FreeRTOS/queue.c **** 	}
2547:..\FreeRTOS/queue.c **** 
2548:..\FreeRTOS/queue.c **** #endif /* configUSE_CO_ROUTINES */
2549:..\FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
2550:..\FreeRTOS/queue.c **** 
2551:..\FreeRTOS/queue.c **** #if ( configUSE_CO_ROUTINES == 1 )
2552:..\FreeRTOS/queue.c **** 
2553:..\FreeRTOS/queue.c **** 	BaseType_t xQueueCRReceiveFromISR( QueueHandle_t xQueue, void *pvBuffer, BaseType_t *pxCoRoutineWo
2554:..\FreeRTOS/queue.c **** 	{
2555:..\FreeRTOS/queue.c **** 	BaseType_t xReturn;
2556:..\FreeRTOS/queue.c **** 	Queue_t * const pxQueue = ( Queue_t * ) xQueue;
2557:..\FreeRTOS/queue.c **** 
2558:..\FreeRTOS/queue.c **** 		/* We cannot block from an ISR, so check there is data available. If
2559:..\FreeRTOS/queue.c **** 		not then just leave without doing anything. */
2560:..\FreeRTOS/queue.c **** 		if( pxQueue->uxMessagesWaiting > ( UBaseType_t ) 0 )
2561:..\FreeRTOS/queue.c **** 		{
2562:..\FreeRTOS/queue.c **** 			/* Copy the data from the queue. */
2563:..\FreeRTOS/queue.c **** 			pxQueue->u.pcReadFrom += pxQueue->uxItemSize;
2564:..\FreeRTOS/queue.c **** 			if( pxQueue->u.pcReadFrom >= pxQueue->pcTail )
2565:..\FreeRTOS/queue.c **** 			{
2566:..\FreeRTOS/queue.c **** 				pxQueue->u.pcReadFrom = pxQueue->pcHead;
2567:..\FreeRTOS/queue.c **** 			}
2568:..\FreeRTOS/queue.c **** 			else
2569:..\FreeRTOS/queue.c **** 			{
2570:..\FreeRTOS/queue.c **** 				mtCOVERAGE_TEST_MARKER();
2571:..\FreeRTOS/queue.c **** 			}
2572:..\FreeRTOS/queue.c **** 			--( pxQueue->uxMessagesWaiting );
2573:..\FreeRTOS/queue.c **** 			( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.pcReadFrom, ( unsigned ) pxQueue->ux
2574:..\FreeRTOS/queue.c **** 
2575:..\FreeRTOS/queue.c **** 			if( ( *pxCoRoutineWoken ) == pdFALSE )
2576:..\FreeRTOS/queue.c **** 			{
2577:..\FreeRTOS/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
2578:..\FreeRTOS/queue.c **** 				{
2579:..\FreeRTOS/queue.c **** 					if( xCoRoutineRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
2580:..\FreeRTOS/queue.c **** 					{
2581:..\FreeRTOS/queue.c **** 						*pxCoRoutineWoken = pdTRUE;
2582:..\FreeRTOS/queue.c **** 					}
2583:..\FreeRTOS/queue.c **** 					else
2584:..\FreeRTOS/queue.c **** 					{
2585:..\FreeRTOS/queue.c **** 						mtCOVERAGE_TEST_MARKER();
2586:..\FreeRTOS/queue.c **** 					}
2587:..\FreeRTOS/queue.c **** 				}
2588:..\FreeRTOS/queue.c **** 				else
2589:..\FreeRTOS/queue.c **** 				{
2590:..\FreeRTOS/queue.c **** 					mtCOVERAGE_TEST_MARKER();
2591:..\FreeRTOS/queue.c **** 				}
2592:..\FreeRTOS/queue.c **** 			}
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccApaELb.s 			page 52


2593:..\FreeRTOS/queue.c **** 			else
2594:..\FreeRTOS/queue.c **** 			{
2595:..\FreeRTOS/queue.c **** 				mtCOVERAGE_TEST_MARKER();
2596:..\FreeRTOS/queue.c **** 			}
2597:..\FreeRTOS/queue.c **** 
2598:..\FreeRTOS/queue.c **** 			xReturn = pdPASS;
2599:..\FreeRTOS/queue.c **** 		}
2600:..\FreeRTOS/queue.c **** 		else
2601:..\FreeRTOS/queue.c **** 		{
2602:..\FreeRTOS/queue.c **** 			xReturn = pdFAIL;
2603:..\FreeRTOS/queue.c **** 		}
2604:..\FreeRTOS/queue.c **** 
2605:..\FreeRTOS/queue.c **** 		return xReturn;
2606:..\FreeRTOS/queue.c **** 	}
2607:..\FreeRTOS/queue.c **** 
2608:..\FreeRTOS/queue.c **** #endif /* configUSE_CO_ROUTINES */
2609:..\FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
2610:..\FreeRTOS/queue.c **** 
2611:..\FreeRTOS/queue.c **** #if ( configQUEUE_REGISTRY_SIZE > 0 )
2612:..\FreeRTOS/queue.c **** 
2613:..\FreeRTOS/queue.c **** 	void vQueueAddToRegistry( QueueHandle_t xQueue, const char *pcQueueName ) /*lint !e971 Unqualified
2614:..\FreeRTOS/queue.c **** 	{
2615:..\FreeRTOS/queue.c **** 	UBaseType_t ux;
2616:..\FreeRTOS/queue.c **** 
2617:..\FreeRTOS/queue.c **** 		/* See if there is an empty space in the registry.  A NULL name denotes
2618:..\FreeRTOS/queue.c **** 		a free slot. */
2619:..\FreeRTOS/queue.c **** 		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
2620:..\FreeRTOS/queue.c **** 		{
2621:..\FreeRTOS/queue.c **** 			if( xQueueRegistry[ ux ].pcQueueName == NULL )
2622:..\FreeRTOS/queue.c **** 			{
2623:..\FreeRTOS/queue.c **** 				/* Store the information on this queue. */
2624:..\FreeRTOS/queue.c **** 				xQueueRegistry[ ux ].pcQueueName = pcQueueName;
2625:..\FreeRTOS/queue.c **** 				xQueueRegistry[ ux ].xHandle = xQueue;
2626:..\FreeRTOS/queue.c **** 
2627:..\FreeRTOS/queue.c **** 				traceQUEUE_REGISTRY_ADD( xQueue, pcQueueName );
2628:..\FreeRTOS/queue.c **** 				break;
2629:..\FreeRTOS/queue.c **** 			}
2630:..\FreeRTOS/queue.c **** 			else
2631:..\FreeRTOS/queue.c **** 			{
2632:..\FreeRTOS/queue.c **** 				mtCOVERAGE_TEST_MARKER();
2633:..\FreeRTOS/queue.c **** 			}
2634:..\FreeRTOS/queue.c **** 		}
2635:..\FreeRTOS/queue.c **** 	}
2636:..\FreeRTOS/queue.c **** 
2637:..\FreeRTOS/queue.c **** #endif /* configQUEUE_REGISTRY_SIZE */
2638:..\FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
2639:..\FreeRTOS/queue.c **** 
2640:..\FreeRTOS/queue.c **** #if ( configQUEUE_REGISTRY_SIZE > 0 )
2641:..\FreeRTOS/queue.c **** 
2642:..\FreeRTOS/queue.c **** 	const char *pcQueueGetName( QueueHandle_t xQueue ) /*lint !e971 Unqualified char types are allowed
2643:..\FreeRTOS/queue.c **** 	{
2644:..\FreeRTOS/queue.c **** 	UBaseType_t ux;
2645:..\FreeRTOS/queue.c **** 	const char *pcReturn = NULL; /*lint !e971 Unqualified char types are allowed for strings and singl
2646:..\FreeRTOS/queue.c **** 
2647:..\FreeRTOS/queue.c **** 		/* Note there is nothing here to protect against another task adding or
2648:..\FreeRTOS/queue.c **** 		removing entries from the registry while it is being searched. */
2649:..\FreeRTOS/queue.c **** 		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccApaELb.s 			page 53


2650:..\FreeRTOS/queue.c **** 		{
2651:..\FreeRTOS/queue.c **** 			if( xQueueRegistry[ ux ].xHandle == xQueue )
2652:..\FreeRTOS/queue.c **** 			{
2653:..\FreeRTOS/queue.c **** 				pcReturn = xQueueRegistry[ ux ].pcQueueName;
2654:..\FreeRTOS/queue.c **** 				break;
2655:..\FreeRTOS/queue.c **** 			}
2656:..\FreeRTOS/queue.c **** 			else
2657:..\FreeRTOS/queue.c **** 			{
2658:..\FreeRTOS/queue.c **** 				mtCOVERAGE_TEST_MARKER();
2659:..\FreeRTOS/queue.c **** 			}
2660:..\FreeRTOS/queue.c **** 		}
2661:..\FreeRTOS/queue.c **** 
2662:..\FreeRTOS/queue.c **** 		return pcReturn;
2663:..\FreeRTOS/queue.c **** 	} /*lint !e818 xQueue cannot be a pointer to const because it is a typedef. */
2664:..\FreeRTOS/queue.c **** 
2665:..\FreeRTOS/queue.c **** #endif /* configQUEUE_REGISTRY_SIZE */
2666:..\FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
2667:..\FreeRTOS/queue.c **** 
2668:..\FreeRTOS/queue.c **** #if ( configQUEUE_REGISTRY_SIZE > 0 )
2669:..\FreeRTOS/queue.c **** 
2670:..\FreeRTOS/queue.c **** 	void vQueueUnregisterQueue( QueueHandle_t xQueue )
2671:..\FreeRTOS/queue.c **** 	{
2672:..\FreeRTOS/queue.c **** 	UBaseType_t ux;
2673:..\FreeRTOS/queue.c **** 
2674:..\FreeRTOS/queue.c **** 		/* See if the handle of the queue being unregistered in actually in the
2675:..\FreeRTOS/queue.c **** 		registry. */
2676:..\FreeRTOS/queue.c **** 		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
2677:..\FreeRTOS/queue.c **** 		{
2678:..\FreeRTOS/queue.c **** 			if( xQueueRegistry[ ux ].xHandle == xQueue )
2679:..\FreeRTOS/queue.c **** 			{
2680:..\FreeRTOS/queue.c **** 				/* Set the name to NULL to show that this slot if free again. */
2681:..\FreeRTOS/queue.c **** 				xQueueRegistry[ ux ].pcQueueName = NULL;
2682:..\FreeRTOS/queue.c **** 
2683:..\FreeRTOS/queue.c **** 				/* Set the handle to NULL to ensure the same queue handle cannot
2684:..\FreeRTOS/queue.c **** 				appear in the registry twice if it is added, removed, then
2685:..\FreeRTOS/queue.c **** 				added again. */
2686:..\FreeRTOS/queue.c **** 				xQueueRegistry[ ux ].xHandle = ( QueueHandle_t ) 0;
2687:..\FreeRTOS/queue.c **** 				break;
2688:..\FreeRTOS/queue.c **** 			}
2689:..\FreeRTOS/queue.c **** 			else
2690:..\FreeRTOS/queue.c **** 			{
2691:..\FreeRTOS/queue.c **** 				mtCOVERAGE_TEST_MARKER();
2692:..\FreeRTOS/queue.c **** 			}
2693:..\FreeRTOS/queue.c **** 		}
2694:..\FreeRTOS/queue.c **** 
2695:..\FreeRTOS/queue.c **** 	} /*lint !e818 xQueue could not be pointer to const because it is a typedef. */
2696:..\FreeRTOS/queue.c **** 
2697:..\FreeRTOS/queue.c **** #endif /* configQUEUE_REGISTRY_SIZE */
2698:..\FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
2699:..\FreeRTOS/queue.c **** 
2700:..\FreeRTOS/queue.c **** #if ( configUSE_TIMERS == 1 )
2701:..\FreeRTOS/queue.c **** 
2702:..\FreeRTOS/queue.c **** 	void vQueueWaitForMessageRestricted( QueueHandle_t xQueue, TickType_t xTicksToWait, const BaseType
2703:..\FreeRTOS/queue.c **** 	{
2704:..\FreeRTOS/queue.c **** 	Queue_t * const pxQueue = ( Queue_t * ) xQueue;
2705:..\FreeRTOS/queue.c **** 
2706:..\FreeRTOS/queue.c **** 		/* This function should not be called by application code hence the
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccApaELb.s 			page 54


2707:..\FreeRTOS/queue.c **** 		'Restricted' in its name.  It is not part of the public API.  It is
2708:..\FreeRTOS/queue.c **** 		designed for use by kernel code, and has special calling requirements.
2709:..\FreeRTOS/queue.c **** 		It can result in vListInsert() being called on a list that can only
2710:..\FreeRTOS/queue.c **** 		possibly ever have one item in it, so the list will be fast, but even
2711:..\FreeRTOS/queue.c **** 		so it should be called with the scheduler locked and not from a critical
2712:..\FreeRTOS/queue.c **** 		section. */
2713:..\FreeRTOS/queue.c **** 
2714:..\FreeRTOS/queue.c **** 		/* Only do anything if there are no messages in the queue.  This function
2715:..\FreeRTOS/queue.c **** 		will not actually cause the task to block, just place it on a blocked
2716:..\FreeRTOS/queue.c **** 		list.  It will not block until the scheduler is unlocked - at which
2717:..\FreeRTOS/queue.c **** 		time a yield will be performed.  If an item is added to the queue while
2718:..\FreeRTOS/queue.c **** 		the queue is locked, and the calling task blocks on the queue, then the
2719:..\FreeRTOS/queue.c **** 		calling task will be immediately unblocked when the queue is unlocked. */
2720:..\FreeRTOS/queue.c **** 		prvLockQueue( pxQueue );
2721:..\FreeRTOS/queue.c **** 		if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0U )
2722:..\FreeRTOS/queue.c **** 		{
2723:..\FreeRTOS/queue.c **** 			/* There is nothing in the queue, block for the specified period. */
2724:..\FreeRTOS/queue.c **** 			vTaskPlaceOnEventListRestricted( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait, xWaitIndefi
2725:..\FreeRTOS/queue.c **** 		}
2726:..\FreeRTOS/queue.c **** 		else
2727:..\FreeRTOS/queue.c **** 		{
2728:..\FreeRTOS/queue.c **** 			mtCOVERAGE_TEST_MARKER();
2729:..\FreeRTOS/queue.c **** 		}
2730:..\FreeRTOS/queue.c **** 		prvUnlockQueue( pxQueue );
2731:..\FreeRTOS/queue.c **** 	}
2732:..\FreeRTOS/queue.c **** 
2733:..\FreeRTOS/queue.c **** #endif /* configUSE_TIMERS */
2734:..\FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
2735:..\FreeRTOS/queue.c **** 
2736:..\FreeRTOS/queue.c **** #if( ( configUSE_QUEUE_SETS == 1 ) && ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) )
2737:..\FreeRTOS/queue.c **** 
2738:..\FreeRTOS/queue.c **** 	QueueSetHandle_t xQueueCreateSet( const UBaseType_t uxEventQueueLength )
2739:..\FreeRTOS/queue.c **** 	{
2740:..\FreeRTOS/queue.c **** 	QueueSetHandle_t pxQueue;
2741:..\FreeRTOS/queue.c **** 
2742:..\FreeRTOS/queue.c **** 		pxQueue = xQueueGenericCreate( uxEventQueueLength, ( UBaseType_t ) sizeof( Queue_t * ), queueQUEU
2743:..\FreeRTOS/queue.c **** 
2744:..\FreeRTOS/queue.c **** 		return pxQueue;
2745:..\FreeRTOS/queue.c **** 	}
2746:..\FreeRTOS/queue.c **** 
2747:..\FreeRTOS/queue.c **** #endif /* configUSE_QUEUE_SETS */
2748:..\FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
2749:..\FreeRTOS/queue.c **** 
2750:..\FreeRTOS/queue.c **** #if ( configUSE_QUEUE_SETS == 1 )
2751:..\FreeRTOS/queue.c **** 
2752:..\FreeRTOS/queue.c **** 	BaseType_t xQueueAddToSet( QueueSetMemberHandle_t xQueueOrSemaphore, QueueSetHandle_t xQueueSet )
2753:..\FreeRTOS/queue.c **** 	{
2754:..\FreeRTOS/queue.c **** 	BaseType_t xReturn;
2755:..\FreeRTOS/queue.c **** 
2756:..\FreeRTOS/queue.c **** 		taskENTER_CRITICAL();
2757:..\FreeRTOS/queue.c **** 		{
2758:..\FreeRTOS/queue.c **** 			if( ( ( Queue_t * ) xQueueOrSemaphore )->pxQueueSetContainer != NULL )
2759:..\FreeRTOS/queue.c **** 			{
2760:..\FreeRTOS/queue.c **** 				/* Cannot add a queue/semaphore to more than one queue set. */
2761:..\FreeRTOS/queue.c **** 				xReturn = pdFAIL;
2762:..\FreeRTOS/queue.c **** 			}
2763:..\FreeRTOS/queue.c **** 			else if( ( ( Queue_t * ) xQueueOrSemaphore )->uxMessagesWaiting != ( UBaseType_t ) 0 )
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccApaELb.s 			page 55


2764:..\FreeRTOS/queue.c **** 			{
2765:..\FreeRTOS/queue.c **** 				/* Cannot add a queue/semaphore to a queue set if there are already
2766:..\FreeRTOS/queue.c **** 				items in the queue/semaphore. */
2767:..\FreeRTOS/queue.c **** 				xReturn = pdFAIL;
2768:..\FreeRTOS/queue.c **** 			}
2769:..\FreeRTOS/queue.c **** 			else
2770:..\FreeRTOS/queue.c **** 			{
2771:..\FreeRTOS/queue.c **** 				( ( Queue_t * ) xQueueOrSemaphore )->pxQueueSetContainer = xQueueSet;
2772:..\FreeRTOS/queue.c **** 				xReturn = pdPASS;
2773:..\FreeRTOS/queue.c **** 			}
2774:..\FreeRTOS/queue.c **** 		}
2775:..\FreeRTOS/queue.c **** 		taskEXIT_CRITICAL();
2776:..\FreeRTOS/queue.c **** 
2777:..\FreeRTOS/queue.c **** 		return xReturn;
2778:..\FreeRTOS/queue.c **** 	}
2779:..\FreeRTOS/queue.c **** 
2780:..\FreeRTOS/queue.c **** #endif /* configUSE_QUEUE_SETS */
2781:..\FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
2782:..\FreeRTOS/queue.c **** 
2783:..\FreeRTOS/queue.c **** #if ( configUSE_QUEUE_SETS == 1 )
2784:..\FreeRTOS/queue.c **** 
2785:..\FreeRTOS/queue.c **** 	BaseType_t xQueueRemoveFromSet( QueueSetMemberHandle_t xQueueOrSemaphore, QueueSetHandle_t xQueueS
2786:..\FreeRTOS/queue.c **** 	{
2787:..\FreeRTOS/queue.c **** 	BaseType_t xReturn;
2788:..\FreeRTOS/queue.c **** 	Queue_t * const pxQueueOrSemaphore = ( Queue_t * ) xQueueOrSemaphore;
2789:..\FreeRTOS/queue.c **** 
2790:..\FreeRTOS/queue.c **** 		if( pxQueueOrSemaphore->pxQueueSetContainer != xQueueSet )
2791:..\FreeRTOS/queue.c **** 		{
2792:..\FreeRTOS/queue.c **** 			/* The queue was not a member of the set. */
2793:..\FreeRTOS/queue.c **** 			xReturn = pdFAIL;
2794:..\FreeRTOS/queue.c **** 		}
2795:..\FreeRTOS/queue.c **** 		else if( pxQueueOrSemaphore->uxMessagesWaiting != ( UBaseType_t ) 0 )
2796:..\FreeRTOS/queue.c **** 		{
2797:..\FreeRTOS/queue.c **** 			/* It is dangerous to remove a queue from a set when the queue is
2798:..\FreeRTOS/queue.c **** 			not empty because the queue set will still hold pending events for
2799:..\FreeRTOS/queue.c **** 			the queue. */
2800:..\FreeRTOS/queue.c **** 			xReturn = pdFAIL;
2801:..\FreeRTOS/queue.c **** 		}
2802:..\FreeRTOS/queue.c **** 		else
2803:..\FreeRTOS/queue.c **** 		{
2804:..\FreeRTOS/queue.c **** 			taskENTER_CRITICAL();
2805:..\FreeRTOS/queue.c **** 			{
2806:..\FreeRTOS/queue.c **** 				/* The queue is no longer contained in the set. */
2807:..\FreeRTOS/queue.c **** 				pxQueueOrSemaphore->pxQueueSetContainer = NULL;
2808:..\FreeRTOS/queue.c **** 			}
2809:..\FreeRTOS/queue.c **** 			taskEXIT_CRITICAL();
2810:..\FreeRTOS/queue.c **** 			xReturn = pdPASS;
2811:..\FreeRTOS/queue.c **** 		}
2812:..\FreeRTOS/queue.c **** 
2813:..\FreeRTOS/queue.c **** 		return xReturn;
2814:..\FreeRTOS/queue.c **** 	} /*lint !e818 xQueueSet could not be declared as pointing to const as it is a typedef. */
2815:..\FreeRTOS/queue.c **** 
2816:..\FreeRTOS/queue.c **** #endif /* configUSE_QUEUE_SETS */
2817:..\FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
2818:..\FreeRTOS/queue.c **** 
2819:..\FreeRTOS/queue.c **** #if ( configUSE_QUEUE_SETS == 1 )
2820:..\FreeRTOS/queue.c **** 
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccApaELb.s 			page 56


2821:..\FreeRTOS/queue.c **** 	QueueSetMemberHandle_t xQueueSelectFromSet( QueueSetHandle_t xQueueSet, TickType_t const xTicksToW
2822:..\FreeRTOS/queue.c **** 	{
2823:..\FreeRTOS/queue.c **** 	QueueSetMemberHandle_t xReturn = NULL;
2824:..\FreeRTOS/queue.c **** 
2825:..\FreeRTOS/queue.c **** 		( void ) xQueueReceive( ( QueueHandle_t ) xQueueSet, &xReturn, xTicksToWait ); /*lint !e961 Casti
2826:..\FreeRTOS/queue.c **** 		return xReturn;
2827:..\FreeRTOS/queue.c **** 	}
2828:..\FreeRTOS/queue.c **** 
2829:..\FreeRTOS/queue.c **** #endif /* configUSE_QUEUE_SETS */
2830:..\FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
2831:..\FreeRTOS/queue.c **** 
2832:..\FreeRTOS/queue.c **** #if ( configUSE_QUEUE_SETS == 1 )
2833:..\FreeRTOS/queue.c **** 
2834:..\FreeRTOS/queue.c **** 	QueueSetMemberHandle_t xQueueSelectFromSetFromISR( QueueSetHandle_t xQueueSet )
2835:..\FreeRTOS/queue.c **** 	{
2836:..\FreeRTOS/queue.c **** 	QueueSetMemberHandle_t xReturn = NULL;
2837:..\FreeRTOS/queue.c **** 
2838:..\FreeRTOS/queue.c **** 		( void ) xQueueReceiveFromISR( ( QueueHandle_t ) xQueueSet, &xReturn, NULL ); /*lint !e961 Castin
2839:..\FreeRTOS/queue.c **** 		return xReturn;
2840:..\FreeRTOS/queue.c **** 	}
2841:..\FreeRTOS/queue.c **** 
2842:..\FreeRTOS/queue.c **** #endif /* configUSE_QUEUE_SETS */
2843:..\FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
2844:..\FreeRTOS/queue.c **** 
2845:..\FreeRTOS/queue.c **** #if ( configUSE_QUEUE_SETS == 1 )
2846:..\FreeRTOS/queue.c **** 
2847:..\FreeRTOS/queue.c **** 	static BaseType_t prvNotifyQueueSetContainer( const Queue_t * const pxQueue, const BaseType_t xCop
2848:..\FreeRTOS/queue.c **** 	{
 287              		.loc 1 2848 0
 288              		.cfi_startproc
 289              		@ args = 0, pretend = 0, frame = 8
 290              		@ frame_needed = 0, uses_anonymous_args = 0
 291              	.LVL40:
 292 0000 70B5     		push	{r4, r5, r6, lr}
 293              		.cfi_def_cfa_offset 16
 294              		.cfi_offset 4, -16
 295              		.cfi_offset 5, -12
 296              		.cfi_offset 6, -8
 297              		.cfi_offset 14, -4
 298 0002 82B0     		sub	sp, sp, #8
 299              		.cfi_def_cfa_offset 24
 300 0004 0190     		str	r0, [sp, #4]
2849:..\FreeRTOS/queue.c **** 	Queue_t *pxQueueSetContainer = pxQueue->pxQueueSetContainer;
 301              		.loc 1 2849 0
 302 0006 846C     		ldr	r4, [r0, #72]
 303              	.LVL41:
2850:..\FreeRTOS/queue.c **** 	BaseType_t xReturn = pdFALSE;
2851:..\FreeRTOS/queue.c **** 
2852:..\FreeRTOS/queue.c **** 		/* This function must be called form a critical section. */
2853:..\FreeRTOS/queue.c **** 
2854:..\FreeRTOS/queue.c **** 		configASSERT( pxQueueSetContainer );
2855:..\FreeRTOS/queue.c **** 		configASSERT( pxQueueSetContainer->uxMessagesWaiting < pxQueueSetContainer->uxLength );
2856:..\FreeRTOS/queue.c **** 
2857:..\FreeRTOS/queue.c **** 		if( pxQueueSetContainer->uxMessagesWaiting < pxQueueSetContainer->uxLength )
 304              		.loc 1 2857 0
 305 0008 A36B     		ldr	r3, [r4, #56]
 306 000a E26B     		ldr	r2, [r4, #60]
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccApaELb.s 			page 57


 307 000c 9342     		cmp	r3, r2
 308 000e 19D2     		bcs	.L22
 309              	.LBB2:
2858:..\FreeRTOS/queue.c **** 		{
2859:..\FreeRTOS/queue.c **** 			const int8_t cTxLock = pxQueueSetContainer->cTxLock;
 310              		.loc 1 2859 0
 311 0010 4523     		movs	r3, #69
 312 0012 E55C     		ldrb	r5, [r4, r3]
 313 0014 6DB2     		sxtb	r5, r5
 314              	.LVL42:
2860:..\FreeRTOS/queue.c **** 
2861:..\FreeRTOS/queue.c **** 			traceQUEUE_SEND( pxQueueSetContainer );
2862:..\FreeRTOS/queue.c **** 
2863:..\FreeRTOS/queue.c **** 			/* The data copied is the handle of the queue that contains data. */
2864:..\FreeRTOS/queue.c **** 			xReturn = prvCopyDataToQueue( pxQueueSetContainer, &pxQueue, xCopyPosition );
 315              		.loc 1 2864 0
 316 0016 0A00     		movs	r2, r1
 317 0018 01A9     		add	r1, sp, #4
 318              	.LVL43:
 319 001a 2000     		movs	r0, r4
 320              	.LVL44:
 321 001c FFF7FEFF 		bl	prvCopyDataToQueue
 322              	.LVL45:
 323 0020 0600     		movs	r6, r0
 324              	.LVL46:
2865:..\FreeRTOS/queue.c **** 
2866:..\FreeRTOS/queue.c **** 			if( cTxLock == queueUNLOCKED )
 325              		.loc 1 2866 0
 326 0022 6B1C     		adds	r3, r5, #1
 327 0024 09D1     		bne	.L21
2867:..\FreeRTOS/queue.c **** 			{
2868:..\FreeRTOS/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueueSetContainer->xTasksWaitingToReceive ) ) == pdFALSE )
 328              		.loc 1 2868 0
 329 0026 636A     		ldr	r3, [r4, #36]
 330 0028 002B     		cmp	r3, #0
 331 002a 0ED0     		beq	.L20
2869:..\FreeRTOS/queue.c **** 				{
2870:..\FreeRTOS/queue.c **** 					if( xTaskRemoveFromEventList( &( pxQueueSetContainer->xTasksWaitingToReceive ) ) != pdFALSE )
 332              		.loc 1 2870 0
 333 002c 2000     		movs	r0, r4
 334              	.LVL47:
 335 002e 2430     		adds	r0, r0, #36
 336 0030 FFF7FEFF 		bl	xTaskRemoveFromEventList
 337              	.LVL48:
 338 0034 0028     		cmp	r0, #0
 339 0036 07D1     		bne	.L23
 340 0038 07E0     		b	.L20
 341              	.LVL49:
 342              	.L21:
2871:..\FreeRTOS/queue.c **** 					{
2872:..\FreeRTOS/queue.c **** 						/* The task waiting has a higher priority. */
2873:..\FreeRTOS/queue.c **** 						xReturn = pdTRUE;
2874:..\FreeRTOS/queue.c **** 					}
2875:..\FreeRTOS/queue.c **** 					else
2876:..\FreeRTOS/queue.c **** 					{
2877:..\FreeRTOS/queue.c **** 						mtCOVERAGE_TEST_MARKER();
2878:..\FreeRTOS/queue.c **** 					}
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccApaELb.s 			page 58


2879:..\FreeRTOS/queue.c **** 				}
2880:..\FreeRTOS/queue.c **** 				else
2881:..\FreeRTOS/queue.c **** 				{
2882:..\FreeRTOS/queue.c **** 					mtCOVERAGE_TEST_MARKER();
2883:..\FreeRTOS/queue.c **** 				}
2884:..\FreeRTOS/queue.c **** 			}
2885:..\FreeRTOS/queue.c **** 			else
2886:..\FreeRTOS/queue.c **** 			{
2887:..\FreeRTOS/queue.c **** 				pxQueueSetContainer->cTxLock = ( int8_t ) ( cTxLock + 1 );
 343              		.loc 1 2887 0
 344 003a 0135     		adds	r5, r5, #1
 345              	.LVL50:
 346 003c 6DB2     		sxtb	r5, r5
 347              	.LVL51:
 348 003e 4523     		movs	r3, #69
 349 0040 E554     		strb	r5, [r4, r3]
 350 0042 02E0     		b	.L20
 351              	.LVL52:
 352              	.L22:
 353              	.LBE2:
2850:..\FreeRTOS/queue.c **** 
 354              		.loc 1 2850 0
 355 0044 0026     		movs	r6, #0
 356 0046 00E0     		b	.L20
 357              	.LVL53:
 358              	.L23:
 359              	.LBB3:
2873:..\FreeRTOS/queue.c **** 					}
 360              		.loc 1 2873 0
 361 0048 0126     		movs	r6, #1
 362              	.LVL54:
 363              	.L20:
 364              	.LBE3:
2888:..\FreeRTOS/queue.c **** 			}
2889:..\FreeRTOS/queue.c **** 		}
2890:..\FreeRTOS/queue.c **** 		else
2891:..\FreeRTOS/queue.c **** 		{
2892:..\FreeRTOS/queue.c **** 			mtCOVERAGE_TEST_MARKER();
2893:..\FreeRTOS/queue.c **** 		}
2894:..\FreeRTOS/queue.c **** 
2895:..\FreeRTOS/queue.c **** 		return xReturn;
2896:..\FreeRTOS/queue.c **** 	}
 365              		.loc 1 2896 0
 366 004a 3000     		movs	r0, r6
 367 004c 02B0     		add	sp, sp, #8
 368              		@ sp needed
 369              	.LVL55:
 370              	.LVL56:
 371 004e 70BD     		pop	{r4, r5, r6, pc}
 372              		.cfi_endproc
 373              	.LFE68:
 374              		.size	prvNotifyQueueSetContainer, .-prvNotifyQueueSetContainer
 375              		.section	.text.prvCopyDataFromQueue,"ax",%progbits
 376              		.align	2
 377              		.code	16
 378              		.thumb_func
 379              		.type	prvCopyDataFromQueue, %function
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccApaELb.s 			page 59


 380              	prvCopyDataFromQueue:
 381              	.LFB54:
2121:..\FreeRTOS/queue.c **** 	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 382              		.loc 1 2121 0
 383              		.cfi_startproc
 384              		@ args = 0, pretend = 0, frame = 0
 385              		@ frame_needed = 0, uses_anonymous_args = 0
 386              	.LVL57:
 387 0000 10B5     		push	{r4, lr}
 388              		.cfi_def_cfa_offset 8
 389              		.cfi_offset 4, -8
 390              		.cfi_offset 14, -4
 391 0002 0C00     		movs	r4, r1
2122:..\FreeRTOS/queue.c **** 	{
 392              		.loc 1 2122 0
 393 0004 026C     		ldr	r2, [r0, #64]
 394 0006 002A     		cmp	r2, #0
 395 0008 0BD0     		beq	.L24
2124:..\FreeRTOS/queue.c **** 		if( pxQueue->u.pcReadFrom >= pxQueue->pcTail ) /*lint !e946 MISRA exception justified as use of t
 396              		.loc 1 2124 0
 397 000a C368     		ldr	r3, [r0, #12]
 398 000c 9B18     		adds	r3, r3, r2
 399 000e C360     		str	r3, [r0, #12]
2125:..\FreeRTOS/queue.c **** 		{
 400              		.loc 1 2125 0
 401 0010 4168     		ldr	r1, [r0, #4]
 402              	.LVL58:
 403 0012 8B42     		cmp	r3, r1
 404 0014 01D3     		bcc	.L26
2127:..\FreeRTOS/queue.c **** 		}
 405              		.loc 1 2127 0
 406 0016 0368     		ldr	r3, [r0]
 407 0018 C360     		str	r3, [r0, #12]
 408              	.L26:
2133:..\FreeRTOS/queue.c **** 	}
 409              		.loc 1 2133 0
 410 001a C168     		ldr	r1, [r0, #12]
 411 001c 2000     		movs	r0, r4
 412              	.LVL59:
 413 001e FFF7FEFF 		bl	memcpy
 414              	.LVL60:
 415              	.L24:
2135:..\FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
 416              		.loc 1 2135 0
 417              		@ sp needed
 418              	.LVL61:
 419 0022 10BD     		pop	{r4, pc}
 420              		.cfi_endproc
 421              	.LFE54:
 422              		.size	prvCopyDataFromQueue, .-prvCopyDataFromQueue
 423              		.section	.text.prvUnlockQueue,"ax",%progbits
 424              		.align	2
 425              		.code	16
 426              		.thumb_func
 427              		.type	prvUnlockQueue, %function
 428              	prvUnlockQueue:
 429              	.LFB55:
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccApaELb.s 			page 60


2139:..\FreeRTOS/queue.c **** 	/* THIS FUNCTION MUST BE CALLED WITH THE SCHEDULER SUSPENDED. */
 430              		.loc 1 2139 0
 431              		.cfi_startproc
 432              		@ args = 0, pretend = 0, frame = 0
 433              		@ frame_needed = 0, uses_anonymous_args = 0
 434              	.LVL62:
 435 0000 70B5     		push	{r4, r5, r6, lr}
 436              		.cfi_def_cfa_offset 16
 437              		.cfi_offset 4, -16
 438              		.cfi_offset 5, -12
 439              		.cfi_offset 6, -8
 440              		.cfi_offset 14, -4
 441 0002 0500     		movs	r5, r0
2146:..\FreeRTOS/queue.c **** 	{
 442              		.loc 1 2146 0
 443 0004 FFF7FEFF 		bl	vPortEnterCritical
 444              	.LVL63:
 445              	.LBB4:
2148:..\FreeRTOS/queue.c **** 
 446              		.loc 1 2148 0
 447 0008 4523     		movs	r3, #69
 448 000a EC5C     		ldrb	r4, [r5, r3]
 449 000c 64B2     		sxtb	r4, r4
 450              	.LVL64:
2151:..\FreeRTOS/queue.c **** 		{
 451              		.loc 1 2151 0
 452 000e 18E0     		b	.L28
 453              	.L32:
2157:..\FreeRTOS/queue.c **** 				{
 454              		.loc 1 2157 0
 455 0010 AB6C     		ldr	r3, [r5, #72]
 456 0012 002B     		cmp	r3, #0
 457 0014 08D0     		beq	.L29
2159:..\FreeRTOS/queue.c **** 					{
 458              		.loc 1 2159 0
 459 0016 0021     		movs	r1, #0
 460 0018 2800     		movs	r0, r5
 461 001a FFF7FEFF 		bl	prvNotifyQueueSetContainer
 462              	.LVL65:
 463 001e 0028     		cmp	r0, #0
 464 0020 0DD0     		beq	.L30
2164:..\FreeRTOS/queue.c **** 					}
 465              		.loc 1 2164 0
 466 0022 FFF7FEFF 		bl	vTaskMissedYield
 467              	.LVL66:
 468 0026 0AE0     		b	.L30
 469              	.L29:
2176:..\FreeRTOS/queue.c **** 					{
 470              		.loc 1 2176 0
 471 0028 6B6A     		ldr	r3, [r5, #36]
 472 002a 002B     		cmp	r3, #0
 473 002c 0BD0     		beq	.L31
2178:..\FreeRTOS/queue.c **** 						{
 474              		.loc 1 2178 0
 475 002e 2800     		movs	r0, r5
 476 0030 2430     		adds	r0, r0, #36
 477 0032 FFF7FEFF 		bl	xTaskRemoveFromEventList
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccApaELb.s 			page 61


 478              	.LVL67:
 479 0036 0028     		cmp	r0, #0
 480 0038 01D0     		beq	.L30
2182:..\FreeRTOS/queue.c **** 						}
 481              		.loc 1 2182 0
 482 003a FFF7FEFF 		bl	vTaskMissedYield
 483              	.LVL68:
 484              	.L30:
2219:..\FreeRTOS/queue.c **** 		}
 485              		.loc 1 2219 0
 486 003e 013C     		subs	r4, r4, #1
 487              	.LVL69:
 488 0040 64B2     		sxtb	r4, r4
 489              	.LVL70:
 490              	.L28:
2151:..\FreeRTOS/queue.c **** 		{
 491              		.loc 1 2151 0
 492 0042 002C     		cmp	r4, #0
 493 0044 E4DC     		bgt	.L32
 494              	.L31:
2222:..\FreeRTOS/queue.c **** 	}
 495              		.loc 1 2222 0
 496 0046 FF22     		movs	r2, #255
 497 0048 4523     		movs	r3, #69
 498 004a EA54     		strb	r2, [r5, r3]
 499              	.LBE4:
2224:..\FreeRTOS/queue.c **** 
 500              		.loc 1 2224 0
 501 004c FFF7FEFF 		bl	vPortExitCritical
 502              	.LVL71:
2227:..\FreeRTOS/queue.c **** 	{
 503              		.loc 1 2227 0
 504 0050 FFF7FEFF 		bl	vPortEnterCritical
 505              	.LVL72:
 506              	.LBB5:
2229:..\FreeRTOS/queue.c **** 
 507              		.loc 1 2229 0
 508 0054 4423     		movs	r3, #68
 509 0056 EC5C     		ldrb	r4, [r5, r3]
 510              	.LVL73:
 511 0058 64B2     		sxtb	r4, r4
 512              	.LVL74:
2231:..\FreeRTOS/queue.c **** 		{
 513              		.loc 1 2231 0
 514 005a 0CE0     		b	.L33
 515              	.L36:
2233:..\FreeRTOS/queue.c **** 			{
 516              		.loc 1 2233 0
 517 005c 2B69     		ldr	r3, [r5, #16]
 518 005e 002B     		cmp	r3, #0
 519 0060 0BD0     		beq	.L34
2235:..\FreeRTOS/queue.c **** 				{
 520              		.loc 1 2235 0
 521 0062 2800     		movs	r0, r5
 522 0064 1030     		adds	r0, r0, #16
 523 0066 FFF7FEFF 		bl	xTaskRemoveFromEventList
 524              	.LVL75:
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccApaELb.s 			page 62


 525 006a 0028     		cmp	r0, #0
 526 006c 01D0     		beq	.L35
2237:..\FreeRTOS/queue.c **** 				}
 527              		.loc 1 2237 0
 528 006e FFF7FEFF 		bl	vTaskMissedYield
 529              	.LVL76:
 530              	.L35:
2244:..\FreeRTOS/queue.c **** 			}
 531              		.loc 1 2244 0
 532 0072 013C     		subs	r4, r4, #1
 533              	.LVL77:
 534 0074 64B2     		sxtb	r4, r4
 535              	.LVL78:
 536              	.L33:
2231:..\FreeRTOS/queue.c **** 		{
 537              		.loc 1 2231 0
 538 0076 002C     		cmp	r4, #0
 539 0078 F0DC     		bgt	.L36
 540              	.L34:
2252:..\FreeRTOS/queue.c **** 	}
 541              		.loc 1 2252 0
 542 007a FF22     		movs	r2, #255
 543 007c 4423     		movs	r3, #68
 544 007e EA54     		strb	r2, [r5, r3]
 545              	.LBE5:
2254:..\FreeRTOS/queue.c **** }
 546              		.loc 1 2254 0
 547 0080 FFF7FEFF 		bl	vPortExitCritical
 548              	.LVL79:
2255:..\FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
 549              		.loc 1 2255 0
 550              		@ sp needed
 551              	.LVL80:
 552              	.LVL81:
 553 0084 70BD     		pop	{r4, r5, r6, pc}
 554              		.cfi_endproc
 555              	.LFE55:
 556              		.size	prvUnlockQueue, .-prvUnlockQueue
 557 0086 C046     		.section	.text.xQueueGenericReset,"ax",%progbits
 558              		.align	2
 559              		.global	xQueueGenericReset
 560              		.code	16
 561              		.thumb_func
 562              		.type	xQueueGenericReset, %function
 563              	xQueueGenericReset:
 564              	.LFB32:
 249:..\FreeRTOS/queue.c **** Queue_t * const pxQueue = ( Queue_t * ) xQueue;
 565              		.loc 1 249 0
 566              		.cfi_startproc
 567              		@ args = 0, pretend = 0, frame = 0
 568              		@ frame_needed = 0, uses_anonymous_args = 0
 569              	.LVL82:
 570 0000 70B5     		push	{r4, r5, r6, lr}
 571              		.cfi_def_cfa_offset 16
 572              		.cfi_offset 4, -16
 573              		.cfi_offset 5, -12
 574              		.cfi_offset 6, -8
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccApaELb.s 			page 63


 575              		.cfi_offset 14, -4
 576 0002 0400     		movs	r4, r0
 577 0004 0D00     		movs	r5, r1
 578              	.LVL83:
 254:..\FreeRTOS/queue.c **** 	{
 579              		.loc 1 254 0
 580 0006 FFF7FEFF 		bl	vPortEnterCritical
 581              	.LVL84:
 256:..\FreeRTOS/queue.c **** 		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 582              		.loc 1 256 0
 583 000a 2268     		ldr	r2, [r4]
 584 000c E36B     		ldr	r3, [r4, #60]
 585 000e 206C     		ldr	r0, [r4, #64]
 586 0010 0100     		movs	r1, r0
 587 0012 5943     		muls	r1, r3
 588 0014 5118     		adds	r1, r2, r1
 589 0016 6160     		str	r1, [r4, #4]
 257:..\FreeRTOS/queue.c **** 		pxQueue->pcWriteTo = pxQueue->pcHead;
 590              		.loc 1 257 0
 591 0018 0021     		movs	r1, #0
 592 001a A163     		str	r1, [r4, #56]
 258:..\FreeRTOS/queue.c **** 		pxQueue->u.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - ( UBaseType_t ) 1U ) * pxQueue-
 593              		.loc 1 258 0
 594 001c A260     		str	r2, [r4, #8]
 259:..\FreeRTOS/queue.c **** 		pxQueue->cRxLock = queueUNLOCKED;
 595              		.loc 1 259 0
 596 001e 013B     		subs	r3, r3, #1
 597 0020 4343     		muls	r3, r0
 598 0022 D318     		adds	r3, r2, r3
 599 0024 E360     		str	r3, [r4, #12]
 260:..\FreeRTOS/queue.c **** 		pxQueue->cTxLock = queueUNLOCKED;
 600              		.loc 1 260 0
 601 0026 FF23     		movs	r3, #255
 602 0028 4422     		movs	r2, #68
 603 002a A354     		strb	r3, [r4, r2]
 261:..\FreeRTOS/queue.c **** 
 604              		.loc 1 261 0
 605 002c 0132     		adds	r2, r2, #1
 606 002e A354     		strb	r3, [r4, r2]
 263:..\FreeRTOS/queue.c **** 		{
 607              		.loc 1 263 0
 608 0030 002D     		cmp	r5, #0
 609 0032 0BD1     		bne	.L38
 270:..\FreeRTOS/queue.c **** 			{
 610              		.loc 1 270 0
 611 0034 2369     		ldr	r3, [r4, #16]
 612 0036 002B     		cmp	r3, #0
 613 0038 10D0     		beq	.L39
 272:..\FreeRTOS/queue.c **** 				{
 614              		.loc 1 272 0
 615 003a 2000     		movs	r0, r4
 616 003c 1030     		adds	r0, r0, #16
 617 003e FFF7FEFF 		bl	xTaskRemoveFromEventList
 618              	.LVL85:
 619 0042 0028     		cmp	r0, #0
 620 0044 0AD0     		beq	.L39
 274:..\FreeRTOS/queue.c **** 				}
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccApaELb.s 			page 64


 621              		.loc 1 274 0
 622 0046 FFF7FEFF 		bl	vPortYield
 623              	.LVL86:
 624 004a 07E0     		b	.L39
 625              	.L38:
 289:..\FreeRTOS/queue.c **** 			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 626              		.loc 1 289 0
 627 004c 2000     		movs	r0, r4
 628 004e 1030     		adds	r0, r0, #16
 629 0050 FFF7FEFF 		bl	vListInitialise
 630              	.LVL87:
 290:..\FreeRTOS/queue.c **** 		}
 631              		.loc 1 290 0
 632 0054 2000     		movs	r0, r4
 633 0056 2430     		adds	r0, r0, #36
 634 0058 FFF7FEFF 		bl	vListInitialise
 635              	.LVL88:
 636              	.L39:
 293:..\FreeRTOS/queue.c **** 
 637              		.loc 1 293 0
 638 005c FFF7FEFF 		bl	vPortExitCritical
 639              	.LVL89:
 298:..\FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
 640              		.loc 1 298 0
 641 0060 0120     		movs	r0, #1
 642              		@ sp needed
 643              	.LVL90:
 644              	.LVL91:
 645 0062 70BD     		pop	{r4, r5, r6, pc}
 646              		.cfi_endproc
 647              	.LFE32:
 648              		.size	xQueueGenericReset, .-xQueueGenericReset
 649              		.section	.text.prvInitialiseNewQueue,"ax",%progbits
 650              		.align	2
 651              		.code	16
 652              		.thumb_func
 653              		.type	prvInitialiseNewQueue, %function
 654              	prvInitialiseNewQueue:
 655              	.LFB34:
 410:..\FreeRTOS/queue.c **** 	/* Remove compiler warnings about unused parameters should
 656              		.loc 1 410 0
 657              		.cfi_startproc
 658              		@ args = 4, pretend = 0, frame = 0
 659              		@ frame_needed = 0, uses_anonymous_args = 0
 660              	.LVL92:
 661 0000 10B5     		push	{r4, lr}
 662              		.cfi_def_cfa_offset 8
 663              		.cfi_offset 4, -8
 664              		.cfi_offset 14, -4
 665 0002 029C     		ldr	r4, [sp, #8]
 415:..\FreeRTOS/queue.c **** 	{
 666              		.loc 1 415 0
 667 0004 0029     		cmp	r1, #0
 668 0006 01D1     		bne	.L41
 421:..\FreeRTOS/queue.c **** 	}
 669              		.loc 1 421 0
 670 0008 2460     		str	r4, [r4]
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccApaELb.s 			page 65


 671 000a 00E0     		b	.L42
 672              	.L41:
 426:..\FreeRTOS/queue.c **** 	}
 673              		.loc 1 426 0
 674 000c 2260     		str	r2, [r4]
 675              	.L42:
 431:..\FreeRTOS/queue.c **** 	pxNewQueue->uxItemSize = uxItemSize;
 676              		.loc 1 431 0
 677 000e E063     		str	r0, [r4, #60]
 432:..\FreeRTOS/queue.c **** 	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 678              		.loc 1 432 0
 679 0010 2164     		str	r1, [r4, #64]
 433:..\FreeRTOS/queue.c **** 
 680              		.loc 1 433 0
 681 0012 0121     		movs	r1, #1
 682              	.LVL93:
 683 0014 2000     		movs	r0, r4
 684              	.LVL94:
 685 0016 FFF7FEFF 		bl	xQueueGenericReset
 686              	.LVL95:
 443:..\FreeRTOS/queue.c **** 	}
 687              		.loc 1 443 0
 688 001a 0023     		movs	r3, #0
 689 001c A364     		str	r3, [r4, #72]
 448:..\FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
 690              		.loc 1 448 0
 691              		@ sp needed
 692 001e 10BD     		pop	{r4, pc}
 693              		.cfi_endproc
 694              	.LFE34:
 695              		.size	prvInitialiseNewQueue, .-prvInitialiseNewQueue
 696              		.section	.text.xQueueGenericCreate,"ax",%progbits
 697              		.align	2
 698              		.global	xQueueGenericCreate
 699              		.code	16
 700              		.thumb_func
 701              		.type	xQueueGenericCreate, %function
 702              	xQueueGenericCreate:
 703              	.LFB33:
 360:..\FreeRTOS/queue.c **** 	Queue_t *pxNewQueue;
 704              		.loc 1 360 0
 705              		.cfi_startproc
 706              		@ args = 0, pretend = 0, frame = 0
 707              		@ frame_needed = 0, uses_anonymous_args = 0
 708              	.LVL96:
 709 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 710              		.cfi_def_cfa_offset 20
 711              		.cfi_offset 4, -20
 712              		.cfi_offset 5, -16
 713              		.cfi_offset 6, -12
 714              		.cfi_offset 7, -8
 715              		.cfi_offset 14, -4
 716 0002 83B0     		sub	sp, sp, #12
 717              		.cfi_def_cfa_offset 32
 718 0004 0500     		movs	r5, r0
 719 0006 0F00     		movs	r7, r1
 720 0008 1600     		movs	r6, r2
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccApaELb.s 			page 66


 367:..\FreeRTOS/queue.c **** 		{
 721              		.loc 1 367 0
 722 000a 0029     		cmp	r1, #0
 723 000c 01D0     		beq	.L46
 376:..\FreeRTOS/queue.c **** 		}
 724              		.loc 1 376 0
 725 000e 4843     		muls	r0, r1
 726              	.LVL97:
 727 0010 00E0     		b	.L44
 728              	.LVL98:
 729              	.L46:
 370:..\FreeRTOS/queue.c **** 		}
 730              		.loc 1 370 0
 731 0012 0020     		movs	r0, #0
 732              	.LVL99:
 733              	.L44:
 379:..\FreeRTOS/queue.c **** 
 734              		.loc 1 379 0
 735 0014 4C30     		adds	r0, r0, #76
 736              	.LVL100:
 737 0016 FFF7FEFF 		bl	pvPortMalloc
 738              	.LVL101:
 739 001a 041E     		subs	r4, r0, #0
 740              	.LVL102:
 381:..\FreeRTOS/queue.c **** 		{
 741              		.loc 1 381 0
 742 001c 07D0     		beq	.L45
 385:..\FreeRTOS/queue.c **** 
 743              		.loc 1 385 0
 744 001e 0200     		movs	r2, r0
 745 0020 4C32     		adds	r2, r2, #76
 396:..\FreeRTOS/queue.c **** 		}
 746              		.loc 1 396 0
 747 0022 0090     		str	r0, [sp]
 748 0024 3300     		movs	r3, r6
 749 0026 3900     		movs	r1, r7
 750 0028 2800     		movs	r0, r5
 751              	.LVL103:
 752 002a FFF7FEFF 		bl	prvInitialiseNewQueue
 753              	.LVL104:
 754              	.L45:
 404:..\FreeRTOS/queue.c **** 
 755              		.loc 1 404 0
 756 002e 2000     		movs	r0, r4
 757 0030 03B0     		add	sp, sp, #12
 758              		@ sp needed
 759              	.LVL105:
 760              	.LVL106:
 761              	.LVL107:
 762 0032 F0BD     		pop	{r4, r5, r6, r7, pc}
 763              		.cfi_endproc
 764              	.LFE33:
 765              		.size	xQueueGenericCreate, .-xQueueGenericCreate
 766              		.section	.text.xQueueCreateCountingSemaphore,"ax",%progbits
 767              		.align	2
 768              		.global	xQueueCreateCountingSemaphore
 769              		.code	16
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccApaELb.s 			page 67


 770              		.thumb_func
 771              		.type	xQueueCreateCountingSemaphore, %function
 772              	xQueueCreateCountingSemaphore:
 773              	.LFB39:
 701:..\FreeRTOS/queue.c **** 	QueueHandle_t xHandle;
 774              		.loc 1 701 0
 775              		.cfi_startproc
 776              		@ args = 0, pretend = 0, frame = 0
 777              		@ frame_needed = 0, uses_anonymous_args = 0
 778              	.LVL108:
 779 0000 10B5     		push	{r4, lr}
 780              		.cfi_def_cfa_offset 8
 781              		.cfi_offset 4, -8
 782              		.cfi_offset 14, -4
 783 0002 0C00     		movs	r4, r1
 707:..\FreeRTOS/queue.c **** 
 784              		.loc 1 707 0
 785 0004 0222     		movs	r2, #2
 786 0006 0021     		movs	r1, #0
 787              	.LVL109:
 788 0008 FFF7FEFF 		bl	xQueueGenericCreate
 789              	.LVL110:
 709:..\FreeRTOS/queue.c **** 		{
 790              		.loc 1 709 0
 791 000c 0028     		cmp	r0, #0
 792 000e 00D0     		beq	.L48
 711:..\FreeRTOS/queue.c **** 
 793              		.loc 1 711 0
 794 0010 8463     		str	r4, [r0, #56]
 795              	.L48:
 721:..\FreeRTOS/queue.c **** 
 796              		.loc 1 721 0
 797              		@ sp needed
 798              	.LVL111:
 799 0012 10BD     		pop	{r4, pc}
 800              		.cfi_endproc
 801              	.LFE39:
 802              		.size	xQueueCreateCountingSemaphore, .-xQueueCreateCountingSemaphore
 803              		.section	.text.xQueueGenericSend,"ax",%progbits
 804              		.align	2
 805              		.global	xQueueGenericSend
 806              		.code	16
 807              		.thumb_func
 808              		.type	xQueueGenericSend, %function
 809              	xQueueGenericSend:
 810              	.LFB40:
 727:..\FreeRTOS/queue.c **** BaseType_t xEntryTimeSet = pdFALSE, xYieldRequired;
 811              		.loc 1 727 0
 812              		.cfi_startproc
 813              		@ args = 0, pretend = 0, frame = 16
 814              		@ frame_needed = 0, uses_anonymous_args = 0
 815              	.LVL112:
 816 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 817              		.cfi_def_cfa_offset 20
 818              		.cfi_offset 4, -20
 819              		.cfi_offset 5, -16
 820              		.cfi_offset 6, -12
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccApaELb.s 			page 68


 821              		.cfi_offset 7, -8
 822              		.cfi_offset 14, -4
 823 0002 85B0     		sub	sp, sp, #20
 824              		.cfi_def_cfa_offset 40
 825 0004 0400     		movs	r4, r0
 826 0006 0D00     		movs	r5, r1
 827 0008 0192     		str	r2, [sp, #4]
 828 000a 1F00     		movs	r7, r3
 829              	.LVL113:
 728:..\FreeRTOS/queue.c **** TimeOut_t xTimeOut;
 830              		.loc 1 728 0
 831 000c 0026     		movs	r6, #0
 832              	.LVL114:
 833              	.L50:
 747:..\FreeRTOS/queue.c **** 		{
 834              		.loc 1 747 0
 835 000e FFF7FEFF 		bl	vPortEnterCritical
 836              	.LVL115:
 753:..\FreeRTOS/queue.c **** 			{
 837              		.loc 1 753 0
 838 0012 A36B     		ldr	r3, [r4, #56]
 839 0014 E26B     		ldr	r2, [r4, #60]
 840 0016 9342     		cmp	r3, r2
 841 0018 01D3     		bcc	.L51
 753:..\FreeRTOS/queue.c **** 			{
 842              		.loc 1 753 0 is_stmt 0 discriminator 1
 843 001a 022F     		cmp	r7, #2
 844 001c 24D1     		bne	.L52
 845              	.L51:
 756:..\FreeRTOS/queue.c **** 
 846              		.loc 1 756 0 is_stmt 1
 847 001e 3A00     		movs	r2, r7
 848 0020 2900     		movs	r1, r5
 849 0022 2000     		movs	r0, r4
 850 0024 FFF7FEFF 		bl	prvCopyDataToQueue
 851              	.LVL116:
 760:..\FreeRTOS/queue.c **** 					{
 852              		.loc 1 760 0
 853 0028 A36C     		ldr	r3, [r4, #72]
 854 002a 002B     		cmp	r3, #0
 855 002c 08D0     		beq	.L53
 762:..\FreeRTOS/queue.c **** 						{
 856              		.loc 1 762 0
 857 002e 3900     		movs	r1, r7
 858 0030 2000     		movs	r0, r4
 859              	.LVL117:
 860 0032 FFF7FEFF 		bl	prvNotifyQueueSetContainer
 861              	.LVL118:
 862 0036 0028     		cmp	r0, #0
 863 0038 12D0     		beq	.L54
 767:..\FreeRTOS/queue.c **** 						}
 864              		.loc 1 767 0
 865 003a FFF7FEFF 		bl	vPortYield
 866              	.LVL119:
 867 003e 0FE0     		b	.L54
 868              	.LVL120:
 869              	.L53:
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccApaELb.s 			page 69


 778:..\FreeRTOS/queue.c **** 						{
 870              		.loc 1 778 0
 871 0040 636A     		ldr	r3, [r4, #36]
 872 0042 002B     		cmp	r3, #0
 873 0044 08D0     		beq	.L55
 780:..\FreeRTOS/queue.c **** 							{
 874              		.loc 1 780 0
 875 0046 2000     		movs	r0, r4
 876              	.LVL121:
 877 0048 2430     		adds	r0, r0, #36
 878 004a FFF7FEFF 		bl	xTaskRemoveFromEventList
 879              	.LVL122:
 880 004e 0028     		cmp	r0, #0
 881 0050 06D0     		beq	.L54
 786:..\FreeRTOS/queue.c **** 							}
 882              		.loc 1 786 0
 883 0052 FFF7FEFF 		bl	vPortYield
 884              	.LVL123:
 885 0056 03E0     		b	.L54
 886              	.LVL124:
 887              	.L55:
 793:..\FreeRTOS/queue.c **** 						{
 888              		.loc 1 793 0
 889 0058 0028     		cmp	r0, #0
 890 005a 01D0     		beq	.L54
 799:..\FreeRTOS/queue.c **** 						}
 891              		.loc 1 799 0
 892 005c FFF7FEFF 		bl	vPortYield
 893              	.LVL125:
 894              	.L54:
 841:..\FreeRTOS/queue.c **** 				return pdPASS;
 895              		.loc 1 841 0
 896 0060 FFF7FEFF 		bl	vPortExitCritical
 897              	.LVL126:
 842:..\FreeRTOS/queue.c **** 			}
 898              		.loc 1 842 0
 899 0064 0120     		movs	r0, #1
 900 0066 4AE0     		b	.L56
 901              	.L52:
 846:..\FreeRTOS/queue.c **** 				{
 902              		.loc 1 846 0
 903 0068 019B     		ldr	r3, [sp, #4]
 904 006a 002B     		cmp	r3, #0
 905 006c 03D1     		bne	.L57
 850:..\FreeRTOS/queue.c **** 
 906              		.loc 1 850 0
 907 006e FFF7FEFF 		bl	vPortExitCritical
 908              	.LVL127:
 855:..\FreeRTOS/queue.c **** 				}
 909              		.loc 1 855 0
 910 0072 0020     		movs	r0, #0
 911 0074 43E0     		b	.L56
 912              	.L57:
 857:..\FreeRTOS/queue.c **** 				{
 913              		.loc 1 857 0
 914 0076 002E     		cmp	r6, #0
 915 0078 03D1     		bne	.L58
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccApaELb.s 			page 70


 861:..\FreeRTOS/queue.c **** 					xEntryTimeSet = pdTRUE;
 916              		.loc 1 861 0
 917 007a 02A8     		add	r0, sp, #8
 918 007c FFF7FEFF 		bl	vTaskInternalSetTimeOutState
 919              	.LVL128:
 862:..\FreeRTOS/queue.c **** 				}
 920              		.loc 1 862 0
 921 0080 0136     		adds	r6, r6, #1
 922              	.LVL129:
 923              	.L58:
 871:..\FreeRTOS/queue.c **** 
 924              		.loc 1 871 0
 925 0082 FFF7FEFF 		bl	vPortExitCritical
 926              	.LVL130:
 876:..\FreeRTOS/queue.c **** 		prvLockQueue( pxQueue );
 927              		.loc 1 876 0
 928 0086 FFF7FEFF 		bl	vTaskSuspendAll
 929              	.LVL131:
 877:..\FreeRTOS/queue.c **** 
 930              		.loc 1 877 0
 931 008a FFF7FEFF 		bl	vPortEnterCritical
 932              	.LVL132:
 933 008e 4423     		movs	r3, #68
 934 0090 E35C     		ldrb	r3, [r4, r3]
 935 0092 5BB2     		sxtb	r3, r3
 936 0094 0133     		adds	r3, r3, #1
 937 0096 02D1     		bne	.L59
 877:..\FreeRTOS/queue.c **** 
 938              		.loc 1 877 0 is_stmt 0 discriminator 1
 939 0098 0022     		movs	r2, #0
 940 009a 4423     		movs	r3, #68
 941 009c E254     		strb	r2, [r4, r3]
 942              	.L59:
 877:..\FreeRTOS/queue.c **** 
 943              		.loc 1 877 0 discriminator 3
 944 009e 4523     		movs	r3, #69
 945 00a0 E35C     		ldrb	r3, [r4, r3]
 946 00a2 5BB2     		sxtb	r3, r3
 947 00a4 0133     		adds	r3, r3, #1
 948 00a6 02D1     		bne	.L60
 877:..\FreeRTOS/queue.c **** 
 949              		.loc 1 877 0 discriminator 4
 950 00a8 0022     		movs	r2, #0
 951 00aa 4523     		movs	r3, #69
 952 00ac E254     		strb	r2, [r4, r3]
 953              	.L60:
 877:..\FreeRTOS/queue.c **** 
 954              		.loc 1 877 0 discriminator 6
 955 00ae FFF7FEFF 		bl	vPortExitCritical
 956              	.LVL133:
 880:..\FreeRTOS/queue.c **** 		{
 957              		.loc 1 880 0 is_stmt 1 discriminator 6
 958 00b2 01A9     		add	r1, sp, #4
 959              	.LVL134:
 960 00b4 02A8     		add	r0, sp, #8
 961 00b6 FFF7FEFF 		bl	xTaskCheckForTimeOut
 962              	.LVL135:
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccApaELb.s 			page 71


 963 00ba 0028     		cmp	r0, #0
 964 00bc 19D1     		bne	.L61
 882:..\FreeRTOS/queue.c **** 			{
 965              		.loc 1 882 0
 966 00be 2000     		movs	r0, r4
 967 00c0 FFF7FEFF 		bl	prvIsQueueFull
 968              	.LVL136:
 969 00c4 0028     		cmp	r0, #0
 970 00c6 0ED0     		beq	.L62
 885:..\FreeRTOS/queue.c **** 
 971              		.loc 1 885 0
 972 00c8 2000     		movs	r0, r4
 973 00ca 1030     		adds	r0, r0, #16
 974 00cc 0199     		ldr	r1, [sp, #4]
 975 00ce FFF7FEFF 		bl	vTaskPlaceOnEventList
 976              	.LVL137:
 892:..\FreeRTOS/queue.c **** 
 977              		.loc 1 892 0
 978 00d2 2000     		movs	r0, r4
 979 00d4 FFF7FEFF 		bl	prvUnlockQueue
 980              	.LVL138:
 899:..\FreeRTOS/queue.c **** 				{
 981              		.loc 1 899 0
 982 00d8 FFF7FEFF 		bl	xTaskResumeAll
 983              	.LVL139:
 984 00dc 0028     		cmp	r0, #0
 985 00de 96D1     		bne	.L50
 901:..\FreeRTOS/queue.c **** 				}
 986              		.loc 1 901 0
 987 00e0 FFF7FEFF 		bl	vPortYield
 988              	.LVL140:
 989 00e4 93E7     		b	.L50
 990              	.L62:
 907:..\FreeRTOS/queue.c **** 				( void ) xTaskResumeAll();
 991              		.loc 1 907 0
 992 00e6 2000     		movs	r0, r4
 993 00e8 FFF7FEFF 		bl	prvUnlockQueue
 994              	.LVL141:
 908:..\FreeRTOS/queue.c **** 			}
 995              		.loc 1 908 0
 996 00ec FFF7FEFF 		bl	xTaskResumeAll
 997              	.LVL142:
 998 00f0 8DE7     		b	.L50
 999              	.L61:
 914:..\FreeRTOS/queue.c **** 			( void ) xTaskResumeAll();
 1000              		.loc 1 914 0
 1001 00f2 2000     		movs	r0, r4
 1002 00f4 FFF7FEFF 		bl	prvUnlockQueue
 1003              	.LVL143:
 915:..\FreeRTOS/queue.c **** 
 1004              		.loc 1 915 0
 1005 00f8 FFF7FEFF 		bl	xTaskResumeAll
 1006              	.LVL144:
 918:..\FreeRTOS/queue.c **** 		}
 1007              		.loc 1 918 0
 1008 00fc 0020     		movs	r0, #0
 1009              	.L56:
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccApaELb.s 			page 72


 921:..\FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
 1010              		.loc 1 921 0
 1011 00fe 05B0     		add	sp, sp, #20
 1012              		@ sp needed
 1013              	.LVL145:
 1014              	.LVL146:
 1015              	.LVL147:
 1016              	.LVL148:
 1017 0100 F0BD     		pop	{r4, r5, r6, r7, pc}
 1018              		.cfi_endproc
 1019              	.LFE40:
 1020              		.size	xQueueGenericSend, .-xQueueGenericSend
 1021 0102 C046     		.section	.text.prvInitialiseMutex,"ax",%progbits
 1022              		.align	2
 1023              		.code	16
 1024              		.thumb_func
 1025              		.type	prvInitialiseMutex, %function
 1026              	prvInitialiseMutex:
 1027              	.LFB35:
 454:..\FreeRTOS/queue.c **** 		if( pxNewQueue != NULL )
 1028              		.loc 1 454 0
 1029              		.cfi_startproc
 1030              		@ args = 0, pretend = 0, frame = 0
 1031              		@ frame_needed = 0, uses_anonymous_args = 0
 1032              	.LVL149:
 1033 0000 10B5     		push	{r4, lr}
 1034              		.cfi_def_cfa_offset 8
 1035              		.cfi_offset 4, -8
 1036              		.cfi_offset 14, -4
 455:..\FreeRTOS/queue.c **** 		{
 1037              		.loc 1 455 0
 1038 0002 0028     		cmp	r0, #0
 1039 0004 07D0     		beq	.L64
 461:..\FreeRTOS/queue.c **** 			pxNewQueue->uxQueueType = queueQUEUE_IS_MUTEX;
 1040              		.loc 1 461 0
 1041 0006 0023     		movs	r3, #0
 1042 0008 4360     		str	r3, [r0, #4]
 462:..\FreeRTOS/queue.c **** 
 1043              		.loc 1 462 0
 1044 000a 0360     		str	r3, [r0]
 465:..\FreeRTOS/queue.c **** 
 1045              		.loc 1 465 0
 1046 000c C360     		str	r3, [r0, #12]
 470:..\FreeRTOS/queue.c **** 		}
 1047              		.loc 1 470 0
 1048 000e 0022     		movs	r2, #0
 1049 0010 0021     		movs	r1, #0
 1050 0012 FFF7FEFF 		bl	xQueueGenericSend
 1051              	.LVL150:
 1052              	.L64:
 476:..\FreeRTOS/queue.c **** 
 1053              		.loc 1 476 0
 1054              		@ sp needed
 1055 0016 10BD     		pop	{r4, pc}
 1056              		.cfi_endproc
 1057              	.LFE35:
 1058              		.size	prvInitialiseMutex, .-prvInitialiseMutex
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccApaELb.s 			page 73


 1059              		.section	.text.xQueueCreateMutex,"ax",%progbits
 1060              		.align	2
 1061              		.global	xQueueCreateMutex
 1062              		.code	16
 1063              		.thumb_func
 1064              		.type	xQueueCreateMutex, %function
 1065              	xQueueCreateMutex:
 1066              	.LFB36:
 484:..\FreeRTOS/queue.c **** 	Queue_t *pxNewQueue;
 1067              		.loc 1 484 0
 1068              		.cfi_startproc
 1069              		@ args = 0, pretend = 0, frame = 0
 1070              		@ frame_needed = 0, uses_anonymous_args = 0
 1071              	.LVL151:
 1072 0000 10B5     		push	{r4, lr}
 1073              		.cfi_def_cfa_offset 8
 1074              		.cfi_offset 4, -8
 1075              		.cfi_offset 14, -4
 1076 0002 0200     		movs	r2, r0
 1077              	.LVL152:
 488:..\FreeRTOS/queue.c **** 		prvInitialiseMutex( pxNewQueue );
 1078              		.loc 1 488 0
 1079 0004 0021     		movs	r1, #0
 1080 0006 0120     		movs	r0, #1
 1081              	.LVL153:
 1082 0008 FFF7FEFF 		bl	xQueueGenericCreate
 1083              	.LVL154:
 1084 000c 0400     		movs	r4, r0
 1085              	.LVL155:
 489:..\FreeRTOS/queue.c **** 
 1086              		.loc 1 489 0
 1087 000e FFF7FEFF 		bl	prvInitialiseMutex
 1088              	.LVL156:
 492:..\FreeRTOS/queue.c **** 
 1089              		.loc 1 492 0
 1090 0012 2000     		movs	r0, r4
 1091              		@ sp needed
 1092              	.LVL157:
 1093 0014 10BD     		pop	{r4, pc}
 1094              		.cfi_endproc
 1095              	.LFE36:
 1096              		.size	xQueueCreateMutex, .-xQueueCreateMutex
 1097 0016 C046     		.section	.text.xQueueGiveMutexRecursive,"ax",%progbits
 1098              		.align	2
 1099              		.global	xQueueGiveMutexRecursive
 1100              		.code	16
 1101              		.thumb_func
 1102              		.type	xQueueGiveMutexRecursive, %function
 1103              	xQueueGiveMutexRecursive:
 1104              	.LFB37:
 576:..\FreeRTOS/queue.c **** 	BaseType_t xReturn;
 1105              		.loc 1 576 0
 1106              		.cfi_startproc
 1107              		@ args = 0, pretend = 0, frame = 0
 1108              		@ frame_needed = 0, uses_anonymous_args = 0
 1109              	.LVL158:
 1110 0000 70B5     		push	{r4, r5, r6, lr}
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccApaELb.s 			page 74


 1111              		.cfi_def_cfa_offset 16
 1112              		.cfi_offset 4, -16
 1113              		.cfi_offset 5, -12
 1114              		.cfi_offset 6, -8
 1115              		.cfi_offset 14, -4
 1116 0002 0400     		movs	r4, r0
 1117              	.LVL159:
 588:..\FreeRTOS/queue.c **** 		{
 1118              		.loc 1 588 0
 1119 0004 4568     		ldr	r5, [r0, #4]
 1120 0006 FFF7FEFF 		bl	xTaskGetCurrentTaskHandle
 1121              	.LVL160:
 1122 000a 8542     		cmp	r5, r0
 1123 000c 0BD1     		bne	.L69
 597:..\FreeRTOS/queue.c **** 
 1124              		.loc 1 597 0
 1125 000e E368     		ldr	r3, [r4, #12]
 1126 0010 013B     		subs	r3, r3, #1
 1127 0012 E360     		str	r3, [r4, #12]
 600:..\FreeRTOS/queue.c **** 			{
 1128              		.loc 1 600 0
 1129 0014 002B     		cmp	r3, #0
 1130 0016 08D1     		bne	.L70
 604:..\FreeRTOS/queue.c **** 			}
 1131              		.loc 1 604 0
 1132 0018 0022     		movs	r2, #0
 1133 001a 0021     		movs	r1, #0
 1134 001c 2000     		movs	r0, r4
 1135 001e FFF7FEFF 		bl	xQueueGenericSend
 1136              	.LVL161:
 611:..\FreeRTOS/queue.c **** 		}
 1137              		.loc 1 611 0
 1138 0022 0120     		movs	r0, #1
 1139 0024 02E0     		b	.L68
 1140              	.L69:
 617:..\FreeRTOS/queue.c **** 
 1141              		.loc 1 617 0
 1142 0026 0020     		movs	r0, #0
 1143 0028 00E0     		b	.L68
 1144              	.L70:
 611:..\FreeRTOS/queue.c **** 		}
 1145              		.loc 1 611 0
 1146 002a 0120     		movs	r0, #1
 1147              	.L68:
 1148              	.LVL162:
 623:..\FreeRTOS/queue.c **** 
 1149              		.loc 1 623 0
 1150              		@ sp needed
 1151              	.LVL163:
 1152 002c 70BD     		pop	{r4, r5, r6, pc}
 1153              		.cfi_endproc
 1154              	.LFE37:
 1155              		.size	xQueueGiveMutexRecursive, .-xQueueGiveMutexRecursive
 1156 002e C046     		.section	.text.xQueueGenericSendFromISR,"ax",%progbits
 1157              		.align	2
 1158              		.global	xQueueGenericSendFromISR
 1159              		.code	16
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccApaELb.s 			page 75


 1160              		.thumb_func
 1161              		.type	xQueueGenericSendFromISR, %function
 1162              	xQueueGenericSendFromISR:
 1163              	.LFB41:
 925:..\FreeRTOS/queue.c **** BaseType_t xReturn;
 1164              		.loc 1 925 0
 1165              		.cfi_startproc
 1166              		@ args = 0, pretend = 0, frame = 8
 1167              		@ frame_needed = 0, uses_anonymous_args = 0
 1168              	.LVL164:
 1169 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1170              		.cfi_def_cfa_offset 20
 1171              		.cfi_offset 4, -20
 1172              		.cfi_offset 5, -16
 1173              		.cfi_offset 6, -12
 1174              		.cfi_offset 7, -8
 1175              		.cfi_offset 14, -4
 1176 0002 83B0     		sub	sp, sp, #12
 1177              		.cfi_def_cfa_offset 32
 1178 0004 0600     		movs	r6, r0
 1179 0006 0191     		str	r1, [sp, #4]
 1180 0008 1700     		movs	r7, r2
 1181 000a 1C00     		movs	r4, r3
 1182              	.LVL165:
 955:..\FreeRTOS/queue.c **** 	{
 1183              		.loc 1 955 0
 1184 000c FFF7FEFF 		bl	ulSetInterruptMaskFromISR
 1185              	.LVL166:
 1186 0010 0090     		str	r0, [sp]
 1187              	.LVL167:
 957:..\FreeRTOS/queue.c **** 		{
 1188              		.loc 1 957 0
 1189 0012 B36B     		ldr	r3, [r6, #56]
 1190 0014 F26B     		ldr	r2, [r6, #60]
 1191 0016 9342     		cmp	r3, r2
 1192 0018 01D3     		bcc	.L72
 957:..\FreeRTOS/queue.c **** 		{
 1193              		.loc 1 957 0 is_stmt 0 discriminator 1
 1194 001a 022C     		cmp	r4, #2
 1195 001c 2DD1     		bne	.L76
 1196              	.L72:
 1197              	.LBB6:
 959:..\FreeRTOS/queue.c **** 
 1198              		.loc 1 959 0 is_stmt 1
 1199 001e 4523     		movs	r3, #69
 1200 0020 F35C     		ldrb	r3, [r6, r3]
 1201 0022 5DB2     		sxtb	r5, r3
 1202              	.LVL168:
 968:..\FreeRTOS/queue.c **** 
 1203              		.loc 1 968 0
 1204 0024 2200     		movs	r2, r4
 1205 0026 0199     		ldr	r1, [sp, #4]
 1206 0028 3000     		movs	r0, r6
 1207              	.LVL169:
 1208 002a FFF7FEFF 		bl	prvCopyDataToQueue
 1209              	.LVL170:
 972:..\FreeRTOS/queue.c **** 			{
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccApaELb.s 			page 76


 1210              		.loc 1 972 0
 1211 002e 6B1C     		adds	r3, r5, #1
 1212 0030 1DD1     		bne	.L74
 976:..\FreeRTOS/queue.c **** 					{
 1213              		.loc 1 976 0
 1214 0032 B36C     		ldr	r3, [r6, #72]
 1215 0034 002B     		cmp	r3, #0
 1216 0036 0BD0     		beq	.L75
 978:..\FreeRTOS/queue.c **** 						{
 1217              		.loc 1 978 0
 1218 0038 2100     		movs	r1, r4
 1219 003a 3000     		movs	r0, r6
 1220 003c FFF7FEFF 		bl	prvNotifyQueueSetContainer
 1221              	.LVL171:
 1222 0040 0028     		cmp	r0, #0
 1223 0042 1CD0     		beq	.L77
 983:..\FreeRTOS/queue.c **** 							{
 1224              		.loc 1 983 0
 1225 0044 002F     		cmp	r7, #0
 1226 0046 1CD0     		beq	.L78
 985:..\FreeRTOS/queue.c **** 							}
 1227              		.loc 1 985 0
 1228 0048 0123     		movs	r3, #1
 1229 004a 3B60     		str	r3, [r7]
1061:..\FreeRTOS/queue.c **** 		}
 1230              		.loc 1 1061 0
 1231 004c 0124     		movs	r4, #1
 1232              	.LVL172:
 1233 004e 1FE0     		b	.L73
 1234              	.LVL173:
 1235              	.L75:
 999:..\FreeRTOS/queue.c **** 						{
 1236              		.loc 1 999 0
 1237 0050 736A     		ldr	r3, [r6, #36]
 1238 0052 002B     		cmp	r3, #0
 1239 0054 17D0     		beq	.L79
1001:..\FreeRTOS/queue.c **** 							{
 1240              		.loc 1 1001 0
 1241 0056 3000     		movs	r0, r6
 1242 0058 2430     		adds	r0, r0, #36
 1243 005a FFF7FEFF 		bl	xTaskRemoveFromEventList
 1244              	.LVL174:
 1245 005e 0028     		cmp	r0, #0
 1246 0060 13D0     		beq	.L80
1005:..\FreeRTOS/queue.c **** 								{
 1247              		.loc 1 1005 0
 1248 0062 002F     		cmp	r7, #0
 1249 0064 13D0     		beq	.L81
1007:..\FreeRTOS/queue.c **** 								}
 1250              		.loc 1 1007 0
 1251 0066 0123     		movs	r3, #1
 1252 0068 3B60     		str	r3, [r7]
1061:..\FreeRTOS/queue.c **** 		}
 1253              		.loc 1 1061 0
 1254 006a 0124     		movs	r4, #1
 1255              	.LVL175:
 1256 006c 10E0     		b	.L73
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccApaELb.s 			page 77


 1257              	.LVL176:
 1258              	.L74:
1058:..\FreeRTOS/queue.c **** 			}
 1259              		.loc 1 1058 0
 1260 006e 6B1C     		adds	r3, r5, #1
 1261 0070 5BB2     		sxtb	r3, r3
 1262 0072 4522     		movs	r2, #69
 1263 0074 B354     		strb	r3, [r6, r2]
1061:..\FreeRTOS/queue.c **** 		}
 1264              		.loc 1 1061 0
 1265 0076 0124     		movs	r4, #1
 1266              	.LVL177:
 1267 0078 0AE0     		b	.L73
 1268              	.LVL178:
 1269              	.L76:
 1270              	.LBE6:
1066:..\FreeRTOS/queue.c **** 		}
 1271              		.loc 1 1066 0
 1272 007a 0024     		movs	r4, #0
 1273              	.LVL179:
 1274 007c 08E0     		b	.L73
 1275              	.LVL180:
 1276              	.L77:
 1277              	.LBB7:
1061:..\FreeRTOS/queue.c **** 		}
 1278              		.loc 1 1061 0
 1279 007e 0124     		movs	r4, #1
 1280              	.LVL181:
 1281 0080 06E0     		b	.L73
 1282              	.LVL182:
 1283              	.L78:
 1284 0082 0124     		movs	r4, #1
 1285              	.LVL183:
 1286 0084 04E0     		b	.L73
 1287              	.LVL184:
 1288              	.L79:
 1289 0086 0124     		movs	r4, #1
 1290              	.LVL185:
 1291 0088 02E0     		b	.L73
 1292              	.LVL186:
 1293              	.L80:
 1294 008a 0124     		movs	r4, #1
 1295              	.LVL187:
 1296 008c 00E0     		b	.L73
 1297              	.LVL188:
 1298              	.L81:
 1299 008e 0124     		movs	r4, #1
 1300              	.LVL189:
 1301              	.L73:
 1302              	.LBE7:
1069:..\FreeRTOS/queue.c **** 
 1303              		.loc 1 1069 0
 1304 0090 0098     		ldr	r0, [sp]
 1305 0092 FFF7FEFF 		bl	vClearInterruptMaskFromISR
 1306              	.LVL190:
1072:..\FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
 1307              		.loc 1 1072 0
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccApaELb.s 			page 78


 1308 0096 2000     		movs	r0, r4
 1309 0098 03B0     		add	sp, sp, #12
 1310              	.LVL191:
 1311              		@ sp needed
 1312              	.LVL192:
 1313              	.LVL193:
 1314              	.LVL194:
 1315 009a F0BD     		pop	{r4, r5, r6, r7, pc}
 1316              		.cfi_endproc
 1317              	.LFE41:
 1318              		.size	xQueueGenericSendFromISR, .-xQueueGenericSendFromISR
 1319              		.section	.text.xQueueGiveFromISR,"ax",%progbits
 1320              		.align	2
 1321              		.global	xQueueGiveFromISR
 1322              		.code	16
 1323              		.thumb_func
 1324              		.type	xQueueGiveFromISR, %function
 1325              	xQueueGiveFromISR:
 1326              	.LFB42:
1076:..\FreeRTOS/queue.c **** BaseType_t xReturn;
 1327              		.loc 1 1076 0
 1328              		.cfi_startproc
 1329              		@ args = 0, pretend = 0, frame = 0
 1330              		@ frame_needed = 0, uses_anonymous_args = 0
 1331              	.LVL195:
 1332 0000 70B5     		push	{r4, r5, r6, lr}
 1333              		.cfi_def_cfa_offset 16
 1334              		.cfi_offset 4, -16
 1335              		.cfi_offset 5, -12
 1336              		.cfi_offset 6, -8
 1337              		.cfi_offset 14, -4
 1338 0002 0400     		movs	r4, r0
 1339 0004 0E00     		movs	r6, r1
 1340              	.LVL196:
1114:..\FreeRTOS/queue.c **** 	{
 1341              		.loc 1 1114 0
 1342 0006 FFF7FEFF 		bl	ulSetInterruptMaskFromISR
 1343              	.LVL197:
 1344 000a 0500     		movs	r5, r0
 1345              	.LVL198:
 1346              	.LBB8:
1116:..\FreeRTOS/queue.c **** 
 1347              		.loc 1 1116 0
 1348 000c A26B     		ldr	r2, [r4, #56]
 1349              	.LVL199:
1121:..\FreeRTOS/queue.c **** 		{
 1350              		.loc 1 1121 0
 1351 000e E36B     		ldr	r3, [r4, #60]
 1352 0010 9A42     		cmp	r2, r3
 1353 0012 2AD2     		bcs	.L86
 1354              	.LBB9:
1123:..\FreeRTOS/queue.c **** 
 1355              		.loc 1 1123 0
 1356 0014 4523     		movs	r3, #69
 1357 0016 E35C     		ldrb	r3, [r4, r3]
 1358 0018 5BB2     		sxtb	r3, r3
 1359              	.LVL200:
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccApaELb.s 			page 79


1133:..\FreeRTOS/queue.c **** 
 1360              		.loc 1 1133 0
 1361 001a 0132     		adds	r2, r2, #1
 1362              	.LVL201:
 1363 001c A263     		str	r2, [r4, #56]
1137:..\FreeRTOS/queue.c **** 			{
 1364              		.loc 1 1137 0
 1365 001e 5A1C     		adds	r2, r3, #1
 1366 0020 1DD1     		bne	.L84
 1367              	.LVL202:
1141:..\FreeRTOS/queue.c **** 					{
 1368              		.loc 1 1141 0
 1369 0022 A36C     		ldr	r3, [r4, #72]
 1370              	.LVL203:
 1371 0024 002B     		cmp	r3, #0
 1372 0026 0BD0     		beq	.L85
1143:..\FreeRTOS/queue.c **** 						{
 1373              		.loc 1 1143 0
 1374 0028 0021     		movs	r1, #0
 1375 002a 2000     		movs	r0, r4
 1376              	.LVL204:
 1377 002c FFF7FEFF 		bl	prvNotifyQueueSetContainer
 1378              	.LVL205:
 1379 0030 0028     		cmp	r0, #0
 1380 0032 1CD0     		beq	.L87
1148:..\FreeRTOS/queue.c **** 							{
 1381              		.loc 1 1148 0
 1382 0034 002E     		cmp	r6, #0
 1383 0036 1CD0     		beq	.L88
1150:..\FreeRTOS/queue.c **** 							}
 1384              		.loc 1 1150 0
 1385 0038 0123     		movs	r3, #1
 1386 003a 3360     		str	r3, [r6]
1226:..\FreeRTOS/queue.c **** 		}
 1387              		.loc 1 1226 0
 1388 003c 0124     		movs	r4, #1
 1389              	.LVL206:
 1390 003e 1FE0     		b	.L83
 1391              	.LVL207:
 1392              	.L85:
1164:..\FreeRTOS/queue.c **** 						{
 1393              		.loc 1 1164 0
 1394 0040 636A     		ldr	r3, [r4, #36]
 1395 0042 002B     		cmp	r3, #0
 1396 0044 17D0     		beq	.L89
1166:..\FreeRTOS/queue.c **** 							{
 1397              		.loc 1 1166 0
 1398 0046 2000     		movs	r0, r4
 1399              	.LVL208:
 1400 0048 2430     		adds	r0, r0, #36
 1401 004a FFF7FEFF 		bl	xTaskRemoveFromEventList
 1402              	.LVL209:
 1403 004e 0028     		cmp	r0, #0
 1404 0050 13D0     		beq	.L90
1170:..\FreeRTOS/queue.c **** 								{
 1405              		.loc 1 1170 0
 1406 0052 002E     		cmp	r6, #0
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccApaELb.s 			page 80


 1407 0054 13D0     		beq	.L91
1172:..\FreeRTOS/queue.c **** 								}
 1408              		.loc 1 1172 0
 1409 0056 0123     		movs	r3, #1
 1410 0058 3360     		str	r3, [r6]
1226:..\FreeRTOS/queue.c **** 		}
 1411              		.loc 1 1226 0
 1412 005a 0124     		movs	r4, #1
 1413              	.LVL210:
 1414 005c 10E0     		b	.L83
 1415              	.LVL211:
 1416              	.L84:
1223:..\FreeRTOS/queue.c **** 			}
 1417              		.loc 1 1223 0
 1418 005e 0133     		adds	r3, r3, #1
 1419              	.LVL212:
 1420 0060 5BB2     		sxtb	r3, r3
 1421              	.LVL213:
 1422 0062 4522     		movs	r2, #69
 1423 0064 A354     		strb	r3, [r4, r2]
 1424              	.LVL214:
1226:..\FreeRTOS/queue.c **** 		}
 1425              		.loc 1 1226 0
 1426 0066 0124     		movs	r4, #1
 1427              	.LVL215:
 1428 0068 0AE0     		b	.L83
 1429              	.LVL216:
 1430              	.L86:
 1431              	.LBE9:
1231:..\FreeRTOS/queue.c **** 		}
 1432              		.loc 1 1231 0
 1433 006a 0024     		movs	r4, #0
 1434              	.LVL217:
 1435 006c 08E0     		b	.L83
 1436              	.LVL218:
 1437              	.L87:
 1438              	.LBB10:
1226:..\FreeRTOS/queue.c **** 		}
 1439              		.loc 1 1226 0
 1440 006e 0124     		movs	r4, #1
 1441              	.LVL219:
 1442 0070 06E0     		b	.L83
 1443              	.LVL220:
 1444              	.L88:
 1445 0072 0124     		movs	r4, #1
 1446              	.LVL221:
 1447 0074 04E0     		b	.L83
 1448              	.LVL222:
 1449              	.L89:
 1450 0076 0124     		movs	r4, #1
 1451              	.LVL223:
 1452 0078 02E0     		b	.L83
 1453              	.LVL224:
 1454              	.L90:
 1455 007a 0124     		movs	r4, #1
 1456              	.LVL225:
 1457 007c 00E0     		b	.L83
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccApaELb.s 			page 81


 1458              	.LVL226:
 1459              	.L91:
 1460 007e 0124     		movs	r4, #1
 1461              	.LVL227:
 1462              	.L83:
 1463              	.LBE10:
 1464              	.LBE8:
1234:..\FreeRTOS/queue.c **** 
 1465              		.loc 1 1234 0
 1466 0080 2800     		movs	r0, r5
 1467 0082 FFF7FEFF 		bl	vClearInterruptMaskFromISR
 1468              	.LVL228:
1237:..\FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
 1469              		.loc 1 1237 0
 1470 0086 2000     		movs	r0, r4
 1471              		@ sp needed
 1472              	.LVL229:
 1473              	.LVL230:
 1474              	.LVL231:
 1475 0088 70BD     		pop	{r4, r5, r6, pc}
 1476              		.cfi_endproc
 1477              	.LFE42:
 1478              		.size	xQueueGiveFromISR, .-xQueueGiveFromISR
 1479 008a C046     		.section	.text.xQueueReceive,"ax",%progbits
 1480              		.align	2
 1481              		.global	xQueueReceive
 1482              		.code	16
 1483              		.thumb_func
 1484              		.type	xQueueReceive, %function
 1485              	xQueueReceive:
 1486              	.LFB43:
1241:..\FreeRTOS/queue.c **** BaseType_t xEntryTimeSet = pdFALSE;
 1487              		.loc 1 1241 0
 1488              		.cfi_startproc
 1489              		@ args = 0, pretend = 0, frame = 16
 1490              		@ frame_needed = 0, uses_anonymous_args = 0
 1491              	.LVL232:
 1492 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1493              		.cfi_def_cfa_offset 20
 1494              		.cfi_offset 4, -20
 1495              		.cfi_offset 5, -16
 1496              		.cfi_offset 6, -12
 1497              		.cfi_offset 7, -8
 1498              		.cfi_offset 14, -4
 1499 0002 85B0     		sub	sp, sp, #20
 1500              		.cfi_def_cfa_offset 40
 1501 0004 0400     		movs	r4, r0
 1502 0006 0D00     		movs	r5, r1
 1503 0008 0192     		str	r2, [sp, #4]
 1504              	.LVL233:
1242:..\FreeRTOS/queue.c **** TimeOut_t xTimeOut;
 1505              		.loc 1 1242 0
 1506 000a 0027     		movs	r7, #0
 1507              	.LVL234:
 1508              	.L93:
1267:..\FreeRTOS/queue.c **** 		{
 1509              		.loc 1 1267 0
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccApaELb.s 			page 82


 1510 000c FFF7FEFF 		bl	vPortEnterCritical
 1511              	.LVL235:
 1512              	.LBB11:
1269:..\FreeRTOS/queue.c **** 
 1513              		.loc 1 1269 0
 1514 0010 A66B     		ldr	r6, [r4, #56]
 1515              	.LVL236:
1273:..\FreeRTOS/queue.c **** 			{
 1516              		.loc 1 1273 0
 1517 0012 002E     		cmp	r6, #0
 1518 0014 14D0     		beq	.L94
1276:..\FreeRTOS/queue.c **** 				traceQUEUE_RECEIVE( pxQueue );
 1519              		.loc 1 1276 0
 1520 0016 2900     		movs	r1, r5
 1521 0018 2000     		movs	r0, r4
 1522 001a FFF7FEFF 		bl	prvCopyDataFromQueue
 1523              	.LVL237:
1278:..\FreeRTOS/queue.c **** 
 1524              		.loc 1 1278 0
 1525 001e 013E     		subs	r6, r6, #1
 1526              	.LVL238:
 1527 0020 A663     		str	r6, [r4, #56]
1283:..\FreeRTOS/queue.c **** 				{
 1528              		.loc 1 1283 0
 1529 0022 2369     		ldr	r3, [r4, #16]
 1530 0024 002B     		cmp	r3, #0
 1531 0026 07D0     		beq	.L95
1285:..\FreeRTOS/queue.c **** 					{
 1532              		.loc 1 1285 0
 1533 0028 2000     		movs	r0, r4
 1534 002a 1030     		adds	r0, r0, #16
 1535 002c FFF7FEFF 		bl	xTaskRemoveFromEventList
 1536              	.LVL239:
 1537 0030 0028     		cmp	r0, #0
 1538 0032 01D0     		beq	.L95
1287:..\FreeRTOS/queue.c **** 					}
 1539              		.loc 1 1287 0
 1540 0034 FFF7FEFF 		bl	vPortYield
 1541              	.LVL240:
 1542              	.L95:
1299:..\FreeRTOS/queue.c **** 				return pdPASS;
 1543              		.loc 1 1299 0
 1544 0038 FFF7FEFF 		bl	vPortExitCritical
 1545              	.LVL241:
1300:..\FreeRTOS/queue.c **** 			}
 1546              		.loc 1 1300 0
 1547 003c 0120     		movs	r0, #1
 1548 003e 4FE0     		b	.L96
 1549              	.LVL242:
 1550              	.L94:
1304:..\FreeRTOS/queue.c **** 				{
 1551              		.loc 1 1304 0
 1552 0040 019B     		ldr	r3, [sp, #4]
 1553 0042 002B     		cmp	r3, #0
 1554 0044 03D1     		bne	.L97
1308:..\FreeRTOS/queue.c **** 					traceQUEUE_RECEIVE_FAILED( pxQueue );
 1555              		.loc 1 1308 0
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccApaELb.s 			page 83


 1556 0046 FFF7FEFF 		bl	vPortExitCritical
 1557              	.LVL243:
1310:..\FreeRTOS/queue.c **** 				}
 1558              		.loc 1 1310 0
 1559 004a 0020     		movs	r0, #0
 1560 004c 48E0     		b	.L96
 1561              	.L97:
1312:..\FreeRTOS/queue.c **** 				{
 1562              		.loc 1 1312 0
 1563 004e 002F     		cmp	r7, #0
 1564 0050 03D1     		bne	.L98
1316:..\FreeRTOS/queue.c **** 					xEntryTimeSet = pdTRUE;
 1565              		.loc 1 1316 0
 1566 0052 02A8     		add	r0, sp, #8
 1567 0054 FFF7FEFF 		bl	vTaskInternalSetTimeOutState
 1568              	.LVL244:
1317:..\FreeRTOS/queue.c **** 				}
 1569              		.loc 1 1317 0
 1570 0058 0137     		adds	r7, r7, #1
 1571              	.LVL245:
 1572              	.L98:
 1573              	.LBE11:
1326:..\FreeRTOS/queue.c **** 
 1574              		.loc 1 1326 0
 1575 005a FFF7FEFF 		bl	vPortExitCritical
 1576              	.LVL246:
1331:..\FreeRTOS/queue.c **** 		prvLockQueue( pxQueue );
 1577              		.loc 1 1331 0
 1578 005e FFF7FEFF 		bl	vTaskSuspendAll
 1579              	.LVL247:
1332:..\FreeRTOS/queue.c **** 
 1580              		.loc 1 1332 0
 1581 0062 FFF7FEFF 		bl	vPortEnterCritical
 1582              	.LVL248:
 1583 0066 4423     		movs	r3, #68
 1584 0068 E35C     		ldrb	r3, [r4, r3]
 1585 006a 5BB2     		sxtb	r3, r3
 1586 006c 0133     		adds	r3, r3, #1
 1587 006e 02D1     		bne	.L99
1332:..\FreeRTOS/queue.c **** 
 1588              		.loc 1 1332 0 is_stmt 0 discriminator 1
 1589 0070 0022     		movs	r2, #0
 1590 0072 4423     		movs	r3, #68
 1591 0074 E254     		strb	r2, [r4, r3]
 1592              	.L99:
1332:..\FreeRTOS/queue.c **** 
 1593              		.loc 1 1332 0 discriminator 3
 1594 0076 4523     		movs	r3, #69
 1595 0078 E35C     		ldrb	r3, [r4, r3]
 1596 007a 5BB2     		sxtb	r3, r3
 1597 007c 0133     		adds	r3, r3, #1
 1598 007e 02D1     		bne	.L100
1332:..\FreeRTOS/queue.c **** 
 1599              		.loc 1 1332 0 discriminator 4
 1600 0080 0022     		movs	r2, #0
 1601 0082 4523     		movs	r3, #69
 1602 0084 E254     		strb	r2, [r4, r3]
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccApaELb.s 			page 84


 1603              	.L100:
1332:..\FreeRTOS/queue.c **** 
 1604              		.loc 1 1332 0 discriminator 6
 1605 0086 FFF7FEFF 		bl	vPortExitCritical
 1606              	.LVL249:
1335:..\FreeRTOS/queue.c **** 		{
 1607              		.loc 1 1335 0 is_stmt 1 discriminator 6
 1608 008a 01A9     		add	r1, sp, #4
 1609              	.LVL250:
 1610 008c 02A8     		add	r0, sp, #8
 1611 008e FFF7FEFF 		bl	xTaskCheckForTimeOut
 1612              	.LVL251:
 1613 0092 0028     		cmp	r0, #0
 1614 0094 19D1     		bne	.L101
1339:..\FreeRTOS/queue.c **** 			{
 1615              		.loc 1 1339 0
 1616 0096 2000     		movs	r0, r4
 1617 0098 FFF7FEFF 		bl	prvIsQueueEmpty
 1618              	.LVL252:
 1619 009c 0028     		cmp	r0, #0
 1620 009e 0ED0     		beq	.L102
1342:..\FreeRTOS/queue.c **** 				prvUnlockQueue( pxQueue );
 1621              		.loc 1 1342 0
 1622 00a0 2000     		movs	r0, r4
 1623 00a2 2430     		adds	r0, r0, #36
 1624 00a4 0199     		ldr	r1, [sp, #4]
 1625 00a6 FFF7FEFF 		bl	vTaskPlaceOnEventList
 1626              	.LVL253:
1343:..\FreeRTOS/queue.c **** 				if( xTaskResumeAll() == pdFALSE )
 1627              		.loc 1 1343 0
 1628 00aa 2000     		movs	r0, r4
 1629 00ac FFF7FEFF 		bl	prvUnlockQueue
 1630              	.LVL254:
1344:..\FreeRTOS/queue.c **** 				{
 1631              		.loc 1 1344 0
 1632 00b0 FFF7FEFF 		bl	xTaskResumeAll
 1633              	.LVL255:
 1634 00b4 0028     		cmp	r0, #0
 1635 00b6 A9D1     		bne	.L93
1346:..\FreeRTOS/queue.c **** 				}
 1636              		.loc 1 1346 0
 1637 00b8 FFF7FEFF 		bl	vPortYield
 1638              	.LVL256:
 1639 00bc A6E7     		b	.L93
 1640              	.L102:
1357:..\FreeRTOS/queue.c **** 				( void ) xTaskResumeAll();
 1641              		.loc 1 1357 0
 1642 00be 2000     		movs	r0, r4
 1643 00c0 FFF7FEFF 		bl	prvUnlockQueue
 1644              	.LVL257:
1358:..\FreeRTOS/queue.c **** 			}
 1645              		.loc 1 1358 0
 1646 00c4 FFF7FEFF 		bl	xTaskResumeAll
 1647              	.LVL258:
 1648 00c8 A0E7     		b	.L93
 1649              	.L101:
1365:..\FreeRTOS/queue.c **** 			( void ) xTaskResumeAll();
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccApaELb.s 			page 85


 1650              		.loc 1 1365 0
 1651 00ca 2000     		movs	r0, r4
 1652 00cc FFF7FEFF 		bl	prvUnlockQueue
 1653              	.LVL259:
1366:..\FreeRTOS/queue.c **** 
 1654              		.loc 1 1366 0
 1655 00d0 FFF7FEFF 		bl	xTaskResumeAll
 1656              	.LVL260:
1368:..\FreeRTOS/queue.c **** 			{
 1657              		.loc 1 1368 0
 1658 00d4 2000     		movs	r0, r4
 1659 00d6 FFF7FEFF 		bl	prvIsQueueEmpty
 1660              	.LVL261:
 1661 00da 0028     		cmp	r0, #0
 1662 00dc 96D0     		beq	.L93
1371:..\FreeRTOS/queue.c **** 			}
 1663              		.loc 1 1371 0
 1664 00de 0020     		movs	r0, #0
 1665              	.LVL262:
 1666              	.L96:
1379:..\FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
 1667              		.loc 1 1379 0
 1668 00e0 05B0     		add	sp, sp, #20
 1669              		@ sp needed
 1670              	.LVL263:
 1671              	.LVL264:
 1672              	.LVL265:
 1673 00e2 F0BD     		pop	{r4, r5, r6, r7, pc}
 1674              		.cfi_endproc
 1675              	.LFE43:
 1676              		.size	xQueueReceive, .-xQueueReceive
 1677              		.section	.text.xQueueSemaphoreTake,"ax",%progbits
 1678              		.align	2
 1679              		.global	xQueueSemaphoreTake
 1680              		.code	16
 1681              		.thumb_func
 1682              		.type	xQueueSemaphoreTake, %function
 1683              	xQueueSemaphoreTake:
 1684              	.LFB44:
1383:..\FreeRTOS/queue.c **** BaseType_t xEntryTimeSet = pdFALSE;
 1685              		.loc 1 1383 0
 1686              		.cfi_startproc
 1687              		@ args = 0, pretend = 0, frame = 16
 1688              		@ frame_needed = 0, uses_anonymous_args = 0
 1689              	.LVL266:
 1690 0000 70B5     		push	{r4, r5, r6, lr}
 1691              		.cfi_def_cfa_offset 16
 1692              		.cfi_offset 4, -16
 1693              		.cfi_offset 5, -12
 1694              		.cfi_offset 6, -8
 1695              		.cfi_offset 14, -4
 1696 0002 84B0     		sub	sp, sp, #16
 1697              		.cfi_def_cfa_offset 32
 1698 0004 0400     		movs	r4, r0
 1699 0006 0191     		str	r1, [sp, #4]
 1700              	.LVL267:
1389:..\FreeRTOS/queue.c **** #endif
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccApaELb.s 			page 86


 1701              		.loc 1 1389 0
 1702 0008 0026     		movs	r6, #0
1384:..\FreeRTOS/queue.c **** TimeOut_t xTimeOut;
 1703              		.loc 1 1384 0
 1704 000a 0025     		movs	r5, #0
 1705              	.LVL268:
 1706              	.L105:
1413:..\FreeRTOS/queue.c **** 		{
 1707              		.loc 1 1413 0
 1708 000c FFF7FEFF 		bl	vPortEnterCritical
 1709              	.LVL269:
 1710              	.LBB12:
1417:..\FreeRTOS/queue.c **** 
 1711              		.loc 1 1417 0
 1712 0010 A36B     		ldr	r3, [r4, #56]
 1713              	.LVL270:
1421:..\FreeRTOS/queue.c **** 			{
 1714              		.loc 1 1421 0
 1715 0012 002B     		cmp	r3, #0
 1716 0014 16D0     		beq	.L106
1427:..\FreeRTOS/queue.c **** 
 1717              		.loc 1 1427 0
 1718 0016 013B     		subs	r3, r3, #1
 1719              	.LVL271:
 1720 0018 A363     		str	r3, [r4, #56]
1431:..\FreeRTOS/queue.c **** 					{
 1721              		.loc 1 1431 0
 1722 001a 2368     		ldr	r3, [r4]
 1723              	.LVL272:
 1724 001c 002B     		cmp	r3, #0
 1725 001e 02D1     		bne	.L107
1435:..\FreeRTOS/queue.c **** 					}
 1726              		.loc 1 1435 0
 1727 0020 FFF7FEFF 		bl	pvTaskIncrementMutexHeldCount
 1728              	.LVL273:
 1729 0024 6060     		str	r0, [r4, #4]
 1730              	.L107:
1446:..\FreeRTOS/queue.c **** 				{
 1731              		.loc 1 1446 0
 1732 0026 2369     		ldr	r3, [r4, #16]
 1733 0028 002B     		cmp	r3, #0
 1734 002a 07D0     		beq	.L108
1448:..\FreeRTOS/queue.c **** 					{
 1735              		.loc 1 1448 0
 1736 002c 2000     		movs	r0, r4
 1737 002e 1030     		adds	r0, r0, #16
 1738 0030 FFF7FEFF 		bl	xTaskRemoveFromEventList
 1739              	.LVL274:
 1740 0034 0028     		cmp	r0, #0
 1741 0036 01D0     		beq	.L108
1450:..\FreeRTOS/queue.c **** 					}
 1742              		.loc 1 1450 0
 1743 0038 FFF7FEFF 		bl	vPortYield
 1744              	.LVL275:
 1745              	.L108:
1462:..\FreeRTOS/queue.c **** 				return pdPASS;
 1746              		.loc 1 1462 0
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccApaELb.s 			page 87


 1747 003c FFF7FEFF 		bl	vPortExitCritical
 1748              	.LVL276:
1463:..\FreeRTOS/queue.c **** 			}
 1749              		.loc 1 1463 0
 1750 0040 0120     		movs	r0, #1
 1751 0042 69E0     		b	.L109
 1752              	.LVL277:
 1753              	.L106:
1467:..\FreeRTOS/queue.c **** 				{
 1754              		.loc 1 1467 0
 1755 0044 019B     		ldr	r3, [sp, #4]
 1756              	.LVL278:
 1757 0046 002B     		cmp	r3, #0
 1758 0048 03D1     		bne	.L110
1480:..\FreeRTOS/queue.c **** 					traceQUEUE_RECEIVE_FAILED( pxQueue );
 1759              		.loc 1 1480 0
 1760 004a FFF7FEFF 		bl	vPortExitCritical
 1761              	.LVL279:
1482:..\FreeRTOS/queue.c **** 				}
 1762              		.loc 1 1482 0
 1763 004e 0020     		movs	r0, #0
 1764 0050 62E0     		b	.L109
 1765              	.L110:
1484:..\FreeRTOS/queue.c **** 				{
 1766              		.loc 1 1484 0
 1767 0052 002D     		cmp	r5, #0
 1768 0054 03D1     		bne	.L111
1488:..\FreeRTOS/queue.c **** 					xEntryTimeSet = pdTRUE;
 1769              		.loc 1 1488 0
 1770 0056 02A8     		add	r0, sp, #8
 1771 0058 FFF7FEFF 		bl	vTaskInternalSetTimeOutState
 1772              	.LVL280:
1489:..\FreeRTOS/queue.c **** 				}
 1773              		.loc 1 1489 0
 1774 005c 0135     		adds	r5, r5, #1
 1775              	.LVL281:
 1776              	.L111:
 1777              	.LBE12:
1498:..\FreeRTOS/queue.c **** 
 1778              		.loc 1 1498 0
 1779 005e FFF7FEFF 		bl	vPortExitCritical
 1780              	.LVL282:
1503:..\FreeRTOS/queue.c **** 		prvLockQueue( pxQueue );
 1781              		.loc 1 1503 0
 1782 0062 FFF7FEFF 		bl	vTaskSuspendAll
 1783              	.LVL283:
1504:..\FreeRTOS/queue.c **** 
 1784              		.loc 1 1504 0
 1785 0066 FFF7FEFF 		bl	vPortEnterCritical
 1786              	.LVL284:
 1787 006a 4423     		movs	r3, #68
 1788 006c E35C     		ldrb	r3, [r4, r3]
 1789 006e 5BB2     		sxtb	r3, r3
 1790 0070 0133     		adds	r3, r3, #1
 1791 0072 02D1     		bne	.L112
1504:..\FreeRTOS/queue.c **** 
 1792              		.loc 1 1504 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccApaELb.s 			page 88


 1793 0074 0022     		movs	r2, #0
 1794 0076 4423     		movs	r3, #68
 1795 0078 E254     		strb	r2, [r4, r3]
 1796              	.L112:
1504:..\FreeRTOS/queue.c **** 
 1797              		.loc 1 1504 0 discriminator 3
 1798 007a 4523     		movs	r3, #69
 1799 007c E35C     		ldrb	r3, [r4, r3]
 1800 007e 5BB2     		sxtb	r3, r3
 1801 0080 0133     		adds	r3, r3, #1
 1802 0082 02D1     		bne	.L113
1504:..\FreeRTOS/queue.c **** 
 1803              		.loc 1 1504 0 discriminator 4
 1804 0084 0022     		movs	r2, #0
 1805 0086 4523     		movs	r3, #69
 1806 0088 E254     		strb	r2, [r4, r3]
 1807              	.L113:
1504:..\FreeRTOS/queue.c **** 
 1808              		.loc 1 1504 0 discriminator 6
 1809 008a FFF7FEFF 		bl	vPortExitCritical
 1810              	.LVL285:
1507:..\FreeRTOS/queue.c **** 		{
 1811              		.loc 1 1507 0 is_stmt 1 discriminator 6
 1812 008e 01A9     		add	r1, sp, #4
 1813              	.LVL286:
 1814 0090 02A8     		add	r0, sp, #8
 1815 0092 FFF7FEFF 		bl	xTaskCheckForTimeOut
 1816              	.LVL287:
 1817 0096 0028     		cmp	r0, #0
 1818 0098 24D1     		bne	.L114
1513:..\FreeRTOS/queue.c **** 			{
 1819              		.loc 1 1513 0
 1820 009a 2000     		movs	r0, r4
 1821 009c FFF7FEFF 		bl	prvIsQueueEmpty
 1822              	.LVL288:
 1823 00a0 0028     		cmp	r0, #0
 1824 00a2 19D0     		beq	.L115
1519:..\FreeRTOS/queue.c **** 					{
 1825              		.loc 1 1519 0
 1826 00a4 2368     		ldr	r3, [r4]
 1827 00a6 002B     		cmp	r3, #0
 1828 00a8 07D1     		bne	.L116
1521:..\FreeRTOS/queue.c **** 						{
 1829              		.loc 1 1521 0
 1830 00aa FFF7FEFF 		bl	vPortEnterCritical
 1831              	.LVL289:
1523:..\FreeRTOS/queue.c **** 						}
 1832              		.loc 1 1523 0
 1833 00ae 6068     		ldr	r0, [r4, #4]
 1834 00b0 FFF7FEFF 		bl	xTaskPriorityInherit
 1835              	.LVL290:
 1836 00b4 0600     		movs	r6, r0
 1837              	.LVL291:
1525:..\FreeRTOS/queue.c **** 					}
 1838              		.loc 1 1525 0
 1839 00b6 FFF7FEFF 		bl	vPortExitCritical
 1840              	.LVL292:
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccApaELb.s 			page 89


 1841              	.L116:
1534:..\FreeRTOS/queue.c **** 				prvUnlockQueue( pxQueue );
 1842              		.loc 1 1534 0
 1843 00ba 2000     		movs	r0, r4
 1844 00bc 2430     		adds	r0, r0, #36
 1845 00be 0199     		ldr	r1, [sp, #4]
 1846 00c0 FFF7FEFF 		bl	vTaskPlaceOnEventList
 1847              	.LVL293:
1535:..\FreeRTOS/queue.c **** 				if( xTaskResumeAll() == pdFALSE )
 1848              		.loc 1 1535 0
 1849 00c4 2000     		movs	r0, r4
 1850 00c6 FFF7FEFF 		bl	prvUnlockQueue
 1851              	.LVL294:
1536:..\FreeRTOS/queue.c **** 				{
 1852              		.loc 1 1536 0
 1853 00ca FFF7FEFF 		bl	xTaskResumeAll
 1854              	.LVL295:
 1855 00ce 0028     		cmp	r0, #0
 1856 00d0 9CD1     		bne	.L105
1538:..\FreeRTOS/queue.c **** 				}
 1857              		.loc 1 1538 0
 1858 00d2 FFF7FEFF 		bl	vPortYield
 1859              	.LVL296:
 1860 00d6 99E7     		b	.L105
 1861              	.L115:
1549:..\FreeRTOS/queue.c **** 				( void ) xTaskResumeAll();
 1862              		.loc 1 1549 0
 1863 00d8 2000     		movs	r0, r4
 1864 00da FFF7FEFF 		bl	prvUnlockQueue
 1865              	.LVL297:
1550:..\FreeRTOS/queue.c **** 			}
 1866              		.loc 1 1550 0
 1867 00de FFF7FEFF 		bl	xTaskResumeAll
 1868              	.LVL298:
 1869 00e2 93E7     		b	.L105
 1870              	.L114:
1556:..\FreeRTOS/queue.c **** 			( void ) xTaskResumeAll();
 1871              		.loc 1 1556 0
 1872 00e4 2000     		movs	r0, r4
 1873 00e6 FFF7FEFF 		bl	prvUnlockQueue
 1874              	.LVL299:
1557:..\FreeRTOS/queue.c **** 
 1875              		.loc 1 1557 0
 1876 00ea FFF7FEFF 		bl	xTaskResumeAll
 1877              	.LVL300:
1563:..\FreeRTOS/queue.c **** 			{
 1878              		.loc 1 1563 0
 1879 00ee 2000     		movs	r0, r4
 1880 00f0 FFF7FEFF 		bl	prvIsQueueEmpty
 1881              	.LVL301:
 1882 00f4 0028     		cmp	r0, #0
 1883 00f6 89D0     		beq	.L105
1570:..\FreeRTOS/queue.c **** 					{
 1884              		.loc 1 1570 0
 1885 00f8 002E     		cmp	r6, #0
 1886 00fa 0CD0     		beq	.L118
1572:..\FreeRTOS/queue.c **** 						{
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccApaELb.s 			page 90


 1887              		.loc 1 1572 0
 1888 00fc FFF7FEFF 		bl	vPortEnterCritical
 1889              	.LVL302:
 1890              	.LBB13:
1581:..\FreeRTOS/queue.c **** 							vTaskPriorityDisinheritAfterTimeout( ( void * ) pxQueue->pxMutexHolder, uxHighestWaitingPrio
 1891              		.loc 1 1581 0
 1892 0100 2000     		movs	r0, r4
 1893 0102 FFF7FEFF 		bl	prvGetDisinheritPriorityAfterTimeout
 1894              	.LVL303:
 1895 0106 0100     		movs	r1, r0
 1896              	.LVL304:
1582:..\FreeRTOS/queue.c **** 						}
 1897              		.loc 1 1582 0
 1898 0108 6068     		ldr	r0, [r4, #4]
 1899              	.LVL305:
 1900 010a FFF7FEFF 		bl	vTaskPriorityDisinheritAfterTimeout
 1901              	.LVL306:
 1902              	.LBE13:
1584:..\FreeRTOS/queue.c **** 					}
 1903              		.loc 1 1584 0
 1904 010e FFF7FEFF 		bl	vPortExitCritical
 1905              	.LVL307:
1590:..\FreeRTOS/queue.c **** 			}
 1906              		.loc 1 1590 0
 1907 0112 0020     		movs	r0, #0
 1908 0114 00E0     		b	.L109
 1909              	.L118:
 1910 0116 0020     		movs	r0, #0
 1911              	.L109:
1598:..\FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
 1912              		.loc 1 1598 0
 1913 0118 04B0     		add	sp, sp, #16
 1914              		@ sp needed
 1915              	.LVL308:
 1916              	.LVL309:
 1917              	.LVL310:
 1918 011a 70BD     		pop	{r4, r5, r6, pc}
 1919              		.cfi_endproc
 1920              	.LFE44:
 1921              		.size	xQueueSemaphoreTake, .-xQueueSemaphoreTake
 1922              		.section	.text.xQueueTakeMutexRecursive,"ax",%progbits
 1923              		.align	2
 1924              		.global	xQueueTakeMutexRecursive
 1925              		.code	16
 1926              		.thumb_func
 1927              		.type	xQueueTakeMutexRecursive, %function
 1928              	xQueueTakeMutexRecursive:
 1929              	.LFB38:
 631:..\FreeRTOS/queue.c **** 	BaseType_t xReturn;
 1930              		.loc 1 631 0
 1931              		.cfi_startproc
 1932              		@ args = 0, pretend = 0, frame = 0
 1933              		@ frame_needed = 0, uses_anonymous_args = 0
 1934              	.LVL311:
 1935 0000 70B5     		push	{r4, r5, r6, lr}
 1936              		.cfi_def_cfa_offset 16
 1937              		.cfi_offset 4, -16
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccApaELb.s 			page 91


 1938              		.cfi_offset 5, -12
 1939              		.cfi_offset 6, -8
 1940              		.cfi_offset 14, -4
 1941 0002 0400     		movs	r4, r0
 1942 0004 0E00     		movs	r6, r1
 1943              	.LVL312:
 642:..\FreeRTOS/queue.c **** 		{
 1944              		.loc 1 642 0
 1945 0006 4568     		ldr	r5, [r0, #4]
 1946 0008 FFF7FEFF 		bl	xTaskGetCurrentTaskHandle
 1947              	.LVL313:
 1948 000c 8542     		cmp	r5, r0
 1949 000e 04D1     		bne	.L120
 644:..\FreeRTOS/queue.c **** 			xReturn = pdPASS;
 1950              		.loc 1 644 0
 1951 0010 E368     		ldr	r3, [r4, #12]
 1952 0012 0133     		adds	r3, r3, #1
 1953 0014 E360     		str	r3, [r4, #12]
 1954              	.LVL314:
 645:..\FreeRTOS/queue.c **** 		}
 1955              		.loc 1 645 0
 1956 0016 0120     		movs	r0, #1
 1957 0018 08E0     		b	.L121
 1958              	.LVL315:
 1959              	.L120:
 649:..\FreeRTOS/queue.c **** 
 1960              		.loc 1 649 0
 1961 001a 3100     		movs	r1, r6
 1962 001c 2000     		movs	r0, r4
 1963 001e FFF7FEFF 		bl	xQueueSemaphoreTake
 1964              	.LVL316:
 654:..\FreeRTOS/queue.c **** 			{
 1965              		.loc 1 654 0
 1966 0022 0028     		cmp	r0, #0
 1967 0024 02D0     		beq	.L121
 656:..\FreeRTOS/queue.c **** 			}
 1968              		.loc 1 656 0
 1969 0026 E368     		ldr	r3, [r4, #12]
 1970 0028 0133     		adds	r3, r3, #1
 1971 002a E360     		str	r3, [r4, #12]
 1972              	.LVL317:
 1973              	.L121:
 665:..\FreeRTOS/queue.c **** 
 1974              		.loc 1 665 0
 1975              		@ sp needed
 1976              	.LVL318:
 1977              	.LVL319:
 1978 002c 70BD     		pop	{r4, r5, r6, pc}
 1979              		.cfi_endproc
 1980              	.LFE38:
 1981              		.size	xQueueTakeMutexRecursive, .-xQueueTakeMutexRecursive
 1982 002e C046     		.section	.text.xQueuePeek,"ax",%progbits
 1983              		.align	2
 1984              		.global	xQueuePeek
 1985              		.code	16
 1986              		.thumb_func
 1987              		.type	xQueuePeek, %function
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccApaELb.s 			page 92


 1988              	xQueuePeek:
 1989              	.LFB45:
1602:..\FreeRTOS/queue.c **** BaseType_t xEntryTimeSet = pdFALSE;
 1990              		.loc 1 1602 0
 1991              		.cfi_startproc
 1992              		@ args = 0, pretend = 0, frame = 16
 1993              		@ frame_needed = 0, uses_anonymous_args = 0
 1994              	.LVL320:
 1995 0000 70B5     		push	{r4, r5, r6, lr}
 1996              		.cfi_def_cfa_offset 16
 1997              		.cfi_offset 4, -16
 1998              		.cfi_offset 5, -12
 1999              		.cfi_offset 6, -8
 2000              		.cfi_offset 14, -4
 2001 0002 84B0     		sub	sp, sp, #16
 2002              		.cfi_def_cfa_offset 32
 2003 0004 0400     		movs	r4, r0
 2004 0006 0D00     		movs	r5, r1
 2005 0008 0192     		str	r2, [sp, #4]
 2006              	.LVL321:
1603:..\FreeRTOS/queue.c **** TimeOut_t xTimeOut;
 2007              		.loc 1 1603 0
 2008 000a 0026     		movs	r6, #0
 2009              	.LVL322:
 2010              	.L123:
1629:..\FreeRTOS/queue.c **** 		{
 2011              		.loc 1 1629 0
 2012 000c FFF7FEFF 		bl	vPortEnterCritical
 2013              	.LVL323:
 2014              	.LBB14:
1631:..\FreeRTOS/queue.c **** 
 2015              		.loc 1 1631 0
 2016 0010 A36B     		ldr	r3, [r4, #56]
 2017              	.LVL324:
1635:..\FreeRTOS/queue.c **** 			{
 2018              		.loc 1 1635 0
 2019 0012 002B     		cmp	r3, #0
 2020 0014 14D0     		beq	.L124
1640:..\FreeRTOS/queue.c **** 
 2021              		.loc 1 1640 0
 2022 0016 E668     		ldr	r6, [r4, #12]
 2023              	.LVL325:
1642:..\FreeRTOS/queue.c **** 				traceQUEUE_PEEK( pxQueue );
 2024              		.loc 1 1642 0
 2025 0018 2900     		movs	r1, r5
 2026 001a 2000     		movs	r0, r4
 2027 001c FFF7FEFF 		bl	prvCopyDataFromQueue
 2028              	.LVL326:
1646:..\FreeRTOS/queue.c **** 
 2029              		.loc 1 1646 0
 2030 0020 E660     		str	r6, [r4, #12]
1650:..\FreeRTOS/queue.c **** 				{
 2031              		.loc 1 1650 0
 2032 0022 636A     		ldr	r3, [r4, #36]
 2033 0024 002B     		cmp	r3, #0
 2034 0026 07D0     		beq	.L125
1652:..\FreeRTOS/queue.c **** 					{
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccApaELb.s 			page 93


 2035              		.loc 1 1652 0
 2036 0028 2000     		movs	r0, r4
 2037 002a 2430     		adds	r0, r0, #36
 2038 002c FFF7FEFF 		bl	xTaskRemoveFromEventList
 2039              	.LVL327:
 2040 0030 0028     		cmp	r0, #0
 2041 0032 01D0     		beq	.L125
1655:..\FreeRTOS/queue.c **** 					}
 2042              		.loc 1 1655 0
 2043 0034 FFF7FEFF 		bl	vPortYield
 2044              	.LVL328:
 2045              	.L125:
1667:..\FreeRTOS/queue.c **** 				return pdPASS;
 2046              		.loc 1 1667 0
 2047 0038 FFF7FEFF 		bl	vPortExitCritical
 2048              	.LVL329:
1668:..\FreeRTOS/queue.c **** 			}
 2049              		.loc 1 1668 0
 2050 003c 0120     		movs	r0, #1
 2051 003e 4FE0     		b	.L126
 2052              	.LVL330:
 2053              	.L124:
1672:..\FreeRTOS/queue.c **** 				{
 2054              		.loc 1 1672 0
 2055 0040 019B     		ldr	r3, [sp, #4]
 2056              	.LVL331:
 2057 0042 002B     		cmp	r3, #0
 2058 0044 03D1     		bne	.L127
1676:..\FreeRTOS/queue.c **** 					traceQUEUE_PEEK_FAILED( pxQueue );
 2059              		.loc 1 1676 0
 2060 0046 FFF7FEFF 		bl	vPortExitCritical
 2061              	.LVL332:
1678:..\FreeRTOS/queue.c **** 				}
 2062              		.loc 1 1678 0
 2063 004a 0020     		movs	r0, #0
 2064 004c 48E0     		b	.L126
 2065              	.L127:
1680:..\FreeRTOS/queue.c **** 				{
 2066              		.loc 1 1680 0
 2067 004e 002E     		cmp	r6, #0
 2068 0050 03D1     		bne	.L128
1685:..\FreeRTOS/queue.c **** 					xEntryTimeSet = pdTRUE;
 2069              		.loc 1 1685 0
 2070 0052 02A8     		add	r0, sp, #8
 2071 0054 FFF7FEFF 		bl	vTaskInternalSetTimeOutState
 2072              	.LVL333:
1686:..\FreeRTOS/queue.c **** 				}
 2073              		.loc 1 1686 0
 2074 0058 0136     		adds	r6, r6, #1
 2075              	.LVL334:
 2076              	.L128:
 2077              	.LBE14:
1695:..\FreeRTOS/queue.c **** 
 2078              		.loc 1 1695 0
 2079 005a FFF7FEFF 		bl	vPortExitCritical
 2080              	.LVL335:
1700:..\FreeRTOS/queue.c **** 		prvLockQueue( pxQueue );
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccApaELb.s 			page 94


 2081              		.loc 1 1700 0
 2082 005e FFF7FEFF 		bl	vTaskSuspendAll
 2083              	.LVL336:
1701:..\FreeRTOS/queue.c **** 
 2084              		.loc 1 1701 0
 2085 0062 FFF7FEFF 		bl	vPortEnterCritical
 2086              	.LVL337:
 2087 0066 4423     		movs	r3, #68
 2088 0068 E35C     		ldrb	r3, [r4, r3]
 2089 006a 5BB2     		sxtb	r3, r3
 2090 006c 0133     		adds	r3, r3, #1
 2091 006e 02D1     		bne	.L129
1701:..\FreeRTOS/queue.c **** 
 2092              		.loc 1 1701 0 is_stmt 0 discriminator 1
 2093 0070 0022     		movs	r2, #0
 2094 0072 4423     		movs	r3, #68
 2095 0074 E254     		strb	r2, [r4, r3]
 2096              	.L129:
1701:..\FreeRTOS/queue.c **** 
 2097              		.loc 1 1701 0 discriminator 3
 2098 0076 4523     		movs	r3, #69
 2099 0078 E35C     		ldrb	r3, [r4, r3]
 2100 007a 5BB2     		sxtb	r3, r3
 2101 007c 0133     		adds	r3, r3, #1
 2102 007e 02D1     		bne	.L130
1701:..\FreeRTOS/queue.c **** 
 2103              		.loc 1 1701 0 discriminator 4
 2104 0080 0022     		movs	r2, #0
 2105 0082 4523     		movs	r3, #69
 2106 0084 E254     		strb	r2, [r4, r3]
 2107              	.L130:
1701:..\FreeRTOS/queue.c **** 
 2108              		.loc 1 1701 0 discriminator 6
 2109 0086 FFF7FEFF 		bl	vPortExitCritical
 2110              	.LVL338:
1704:..\FreeRTOS/queue.c **** 		{
 2111              		.loc 1 1704 0 is_stmt 1 discriminator 6
 2112 008a 01A9     		add	r1, sp, #4
 2113              	.LVL339:
 2114 008c 02A8     		add	r0, sp, #8
 2115 008e FFF7FEFF 		bl	xTaskCheckForTimeOut
 2116              	.LVL340:
 2117 0092 0028     		cmp	r0, #0
 2118 0094 19D1     		bne	.L131
1708:..\FreeRTOS/queue.c **** 			{
 2119              		.loc 1 1708 0
 2120 0096 2000     		movs	r0, r4
 2121 0098 FFF7FEFF 		bl	prvIsQueueEmpty
 2122              	.LVL341:
 2123 009c 0028     		cmp	r0, #0
 2124 009e 0ED0     		beq	.L132
1711:..\FreeRTOS/queue.c **** 				prvUnlockQueue( pxQueue );
 2125              		.loc 1 1711 0
 2126 00a0 2000     		movs	r0, r4
 2127 00a2 2430     		adds	r0, r0, #36
 2128 00a4 0199     		ldr	r1, [sp, #4]
 2129 00a6 FFF7FEFF 		bl	vTaskPlaceOnEventList
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccApaELb.s 			page 95


 2130              	.LVL342:
1712:..\FreeRTOS/queue.c **** 				if( xTaskResumeAll() == pdFALSE )
 2131              		.loc 1 1712 0
 2132 00aa 2000     		movs	r0, r4
 2133 00ac FFF7FEFF 		bl	prvUnlockQueue
 2134              	.LVL343:
1713:..\FreeRTOS/queue.c **** 				{
 2135              		.loc 1 1713 0
 2136 00b0 FFF7FEFF 		bl	xTaskResumeAll
 2137              	.LVL344:
 2138 00b4 0028     		cmp	r0, #0
 2139 00b6 A9D1     		bne	.L123
1715:..\FreeRTOS/queue.c **** 				}
 2140              		.loc 1 1715 0
 2141 00b8 FFF7FEFF 		bl	vPortYield
 2142              	.LVL345:
 2143 00bc A6E7     		b	.L123
 2144              	.L132:
1726:..\FreeRTOS/queue.c **** 				( void ) xTaskResumeAll();
 2145              		.loc 1 1726 0
 2146 00be 2000     		movs	r0, r4
 2147 00c0 FFF7FEFF 		bl	prvUnlockQueue
 2148              	.LVL346:
1727:..\FreeRTOS/queue.c **** 			}
 2149              		.loc 1 1727 0
 2150 00c4 FFF7FEFF 		bl	xTaskResumeAll
 2151              	.LVL347:
 2152 00c8 A0E7     		b	.L123
 2153              	.L131:
1734:..\FreeRTOS/queue.c **** 			( void ) xTaskResumeAll();
 2154              		.loc 1 1734 0
 2155 00ca 2000     		movs	r0, r4
 2156 00cc FFF7FEFF 		bl	prvUnlockQueue
 2157              	.LVL348:
1735:..\FreeRTOS/queue.c **** 
 2158              		.loc 1 1735 0
 2159 00d0 FFF7FEFF 		bl	xTaskResumeAll
 2160              	.LVL349:
1737:..\FreeRTOS/queue.c **** 			{
 2161              		.loc 1 1737 0
 2162 00d4 2000     		movs	r0, r4
 2163 00d6 FFF7FEFF 		bl	prvIsQueueEmpty
 2164              	.LVL350:
 2165 00da 0028     		cmp	r0, #0
 2166 00dc 96D0     		beq	.L123
1740:..\FreeRTOS/queue.c **** 			}
 2167              		.loc 1 1740 0
 2168 00de 0020     		movs	r0, #0
 2169              	.LVL351:
 2170              	.L126:
1748:..\FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
 2171              		.loc 1 1748 0
 2172 00e0 04B0     		add	sp, sp, #16
 2173              		@ sp needed
 2174              	.LVL352:
 2175              	.LVL353:
 2176 00e2 70BD     		pop	{r4, r5, r6, pc}
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccApaELb.s 			page 96


 2177              		.cfi_endproc
 2178              	.LFE45:
 2179              		.size	xQueuePeek, .-xQueuePeek
 2180              		.section	.text.xQueueReceiveFromISR,"ax",%progbits
 2181              		.align	2
 2182              		.global	xQueueReceiveFromISR
 2183              		.code	16
 2184              		.thumb_func
 2185              		.type	xQueueReceiveFromISR, %function
 2186              	xQueueReceiveFromISR:
 2187              	.LFB46:
1752:..\FreeRTOS/queue.c **** BaseType_t xReturn;
 2188              		.loc 1 1752 0
 2189              		.cfi_startproc
 2190              		@ args = 0, pretend = 0, frame = 8
 2191              		@ frame_needed = 0, uses_anonymous_args = 0
 2192              	.LVL354:
 2193 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 2194              		.cfi_def_cfa_offset 20
 2195              		.cfi_offset 4, -20
 2196              		.cfi_offset 5, -16
 2197              		.cfi_offset 6, -12
 2198              		.cfi_offset 7, -8
 2199              		.cfi_offset 14, -4
 2200 0002 83B0     		sub	sp, sp, #12
 2201              		.cfi_def_cfa_offset 32
 2202 0004 0400     		movs	r4, r0
 2203 0006 0091     		str	r1, [sp]
 2204 0008 0192     		str	r2, [sp, #4]
 2205              	.LVL355:
1776:..\FreeRTOS/queue.c **** 	{
 2206              		.loc 1 1776 0
 2207 000a FFF7FEFF 		bl	ulSetInterruptMaskFromISR
 2208              	.LVL356:
 2209 000e 0500     		movs	r5, r0
 2210              	.LVL357:
 2211              	.LBB15:
1778:..\FreeRTOS/queue.c **** 
 2212              		.loc 1 1778 0
 2213 0010 A76B     		ldr	r7, [r4, #56]
 2214              	.LVL358:
1781:..\FreeRTOS/queue.c **** 		{
 2215              		.loc 1 1781 0
 2216 0012 002F     		cmp	r7, #0
 2217 0014 20D0     		beq	.L137
 2218              	.LBB16:
1783:..\FreeRTOS/queue.c **** 
 2219              		.loc 1 1783 0
 2220 0016 4423     		movs	r3, #68
 2221 0018 E35C     		ldrb	r3, [r4, r3]
 2222 001a 5EB2     		sxtb	r6, r3
 2223              	.LVL359:
1787:..\FreeRTOS/queue.c **** 			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 2224              		.loc 1 1787 0
 2225 001c 0099     		ldr	r1, [sp]
 2226 001e 2000     		movs	r0, r4
 2227              	.LVL360:
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccApaELb.s 			page 97


 2228 0020 FFF7FEFF 		bl	prvCopyDataFromQueue
 2229              	.LVL361:
1788:..\FreeRTOS/queue.c **** 
 2230              		.loc 1 1788 0
 2231 0024 7B1E     		subs	r3, r7, #1
 2232 0026 A363     		str	r3, [r4, #56]
1794:..\FreeRTOS/queue.c **** 			{
 2233              		.loc 1 1794 0
 2234 0028 731C     		adds	r3, r6, #1
 2235 002a 0FD1     		bne	.L136
1796:..\FreeRTOS/queue.c **** 				{
 2236              		.loc 1 1796 0
 2237 002c 2369     		ldr	r3, [r4, #16]
 2238 002e 002B     		cmp	r3, #0
 2239 0030 14D0     		beq	.L138
1798:..\FreeRTOS/queue.c **** 					{
 2240              		.loc 1 1798 0
 2241 0032 2000     		movs	r0, r4
 2242 0034 1030     		adds	r0, r0, #16
 2243 0036 FFF7FEFF 		bl	xTaskRemoveFromEventList
 2244              	.LVL362:
 2245 003a 0028     		cmp	r0, #0
 2246 003c 10D0     		beq	.L139
1802:..\FreeRTOS/queue.c **** 						{
 2247              		.loc 1 1802 0
 2248 003e 019A     		ldr	r2, [sp, #4]
 2249 0040 002A     		cmp	r2, #0
 2250 0042 0FD0     		beq	.L140
1804:..\FreeRTOS/queue.c **** 						}
 2251              		.loc 1 1804 0
 2252 0044 0123     		movs	r3, #1
 2253 0046 1360     		str	r3, [r2]
1828:..\FreeRTOS/queue.c **** 		}
 2254              		.loc 1 1828 0
 2255 0048 0124     		movs	r4, #1
 2256              	.LVL363:
 2257 004a 0CE0     		b	.L135
 2258              	.LVL364:
 2259              	.L136:
1825:..\FreeRTOS/queue.c **** 			}
 2260              		.loc 1 1825 0
 2261 004c 731C     		adds	r3, r6, #1
 2262 004e 5BB2     		sxtb	r3, r3
 2263 0050 4422     		movs	r2, #68
 2264 0052 A354     		strb	r3, [r4, r2]
1828:..\FreeRTOS/queue.c **** 		}
 2265              		.loc 1 1828 0
 2266 0054 0124     		movs	r4, #1
 2267              	.LVL365:
 2268 0056 06E0     		b	.L135
 2269              	.LVL366:
 2270              	.L137:
 2271              	.LBE16:
1832:..\FreeRTOS/queue.c **** 			traceQUEUE_RECEIVE_FROM_ISR_FAILED( pxQueue );
 2272              		.loc 1 1832 0
 2273 0058 0024     		movs	r4, #0
 2274              	.LVL367:
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccApaELb.s 			page 98


 2275 005a 04E0     		b	.L135
 2276              	.LVL368:
 2277              	.L138:
 2278              	.LBB17:
1828:..\FreeRTOS/queue.c **** 		}
 2279              		.loc 1 1828 0
 2280 005c 0124     		movs	r4, #1
 2281              	.LVL369:
 2282 005e 02E0     		b	.L135
 2283              	.LVL370:
 2284              	.L139:
 2285 0060 0124     		movs	r4, #1
 2286              	.LVL371:
 2287 0062 00E0     		b	.L135
 2288              	.LVL372:
 2289              	.L140:
 2290 0064 0124     		movs	r4, #1
 2291              	.LVL373:
 2292              	.L135:
 2293              	.LBE17:
 2294              	.LBE15:
1836:..\FreeRTOS/queue.c **** 
 2295              		.loc 1 1836 0
 2296 0066 2800     		movs	r0, r5
 2297 0068 FFF7FEFF 		bl	vClearInterruptMaskFromISR
 2298              	.LVL374:
1839:..\FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
 2299              		.loc 1 1839 0
 2300 006c 2000     		movs	r0, r4
 2301 006e 03B0     		add	sp, sp, #12
 2302              	.LVL375:
 2303              		@ sp needed
 2304              	.LVL376:
 2305              	.LVL377:
 2306              	.LVL378:
 2307 0070 F0BD     		pop	{r4, r5, r6, r7, pc}
 2308              		.cfi_endproc
 2309              	.LFE46:
 2310              		.size	xQueueReceiveFromISR, .-xQueueReceiveFromISR
 2311 0072 C046     		.section	.text.xQueuePeekFromISR,"ax",%progbits
 2312              		.align	2
 2313              		.global	xQueuePeekFromISR
 2314              		.code	16
 2315              		.thumb_func
 2316              		.type	xQueuePeekFromISR, %function
 2317              	xQueuePeekFromISR:
 2318              	.LFB47:
1843:..\FreeRTOS/queue.c **** BaseType_t xReturn;
 2319              		.loc 1 1843 0
 2320              		.cfi_startproc
 2321              		@ args = 0, pretend = 0, frame = 0
 2322              		@ frame_needed = 0, uses_anonymous_args = 0
 2323              	.LVL379:
 2324 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 2325              		.cfi_def_cfa_offset 24
 2326              		.cfi_offset 3, -24
 2327              		.cfi_offset 4, -20
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccApaELb.s 			page 99


 2328              		.cfi_offset 5, -16
 2329              		.cfi_offset 6, -12
 2330              		.cfi_offset 7, -8
 2331              		.cfi_offset 14, -4
 2332 0002 0400     		movs	r4, r0
 2333 0004 0E00     		movs	r6, r1
 2334              	.LVL380:
1869:..\FreeRTOS/queue.c **** 	{
 2335              		.loc 1 1869 0
 2336 0006 FFF7FEFF 		bl	ulSetInterruptMaskFromISR
 2337              	.LVL381:
 2338 000a 0500     		movs	r5, r0
 2339              	.LVL382:
1872:..\FreeRTOS/queue.c **** 		{
 2340              		.loc 1 1872 0
 2341 000c A36B     		ldr	r3, [r4, #56]
 2342 000e 002B     		cmp	r3, #0
 2343 0010 07D0     		beq	.L143
1878:..\FreeRTOS/queue.c **** 			prvCopyDataFromQueue( pxQueue, pvBuffer );
 2344              		.loc 1 1878 0
 2345 0012 E768     		ldr	r7, [r4, #12]
 2346              	.LVL383:
1879:..\FreeRTOS/queue.c **** 			pxQueue->u.pcReadFrom = pcOriginalReadPosition;
 2347              		.loc 1 1879 0
 2348 0014 3100     		movs	r1, r6
 2349 0016 2000     		movs	r0, r4
 2350              	.LVL384:
 2351 0018 FFF7FEFF 		bl	prvCopyDataFromQueue
 2352              	.LVL385:
1880:..\FreeRTOS/queue.c **** 
 2353              		.loc 1 1880 0
 2354 001c E760     		str	r7, [r4, #12]
 2355              	.LVL386:
1882:..\FreeRTOS/queue.c **** 		}
 2356              		.loc 1 1882 0
 2357 001e 0124     		movs	r4, #1
 2358              	.LVL387:
 2359 0020 00E0     		b	.L142
 2360              	.LVL388:
 2361              	.L143:
1886:..\FreeRTOS/queue.c **** 			traceQUEUE_PEEK_FROM_ISR_FAILED( pxQueue );
 2362              		.loc 1 1886 0
 2363 0022 0024     		movs	r4, #0
 2364              	.LVL389:
 2365              	.L142:
1890:..\FreeRTOS/queue.c **** 
 2366              		.loc 1 1890 0
 2367 0024 2800     		movs	r0, r5
 2368 0026 FFF7FEFF 		bl	vClearInterruptMaskFromISR
 2369              	.LVL390:
1893:..\FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
 2370              		.loc 1 1893 0
 2371 002a 2000     		movs	r0, r4
 2372              		@ sp needed
 2373              	.LVL391:
 2374              	.LVL392:
 2375              	.LVL393:
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccApaELb.s 			page 100


 2376 002c F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2377              		.cfi_endproc
 2378              	.LFE47:
 2379              		.size	xQueuePeekFromISR, .-xQueuePeekFromISR
 2380 002e C046     		.section	.text.uxQueueMessagesWaiting,"ax",%progbits
 2381              		.align	2
 2382              		.global	uxQueueMessagesWaiting
 2383              		.code	16
 2384              		.thumb_func
 2385              		.type	uxQueueMessagesWaiting, %function
 2386              	uxQueueMessagesWaiting:
 2387              	.LFB48:
1897:..\FreeRTOS/queue.c **** UBaseType_t uxReturn;
 2388              		.loc 1 1897 0
 2389              		.cfi_startproc
 2390              		@ args = 0, pretend = 0, frame = 0
 2391              		@ frame_needed = 0, uses_anonymous_args = 0
 2392              	.LVL394:
 2393 0000 10B5     		push	{r4, lr}
 2394              		.cfi_def_cfa_offset 8
 2395              		.cfi_offset 4, -8
 2396              		.cfi_offset 14, -4
 2397 0002 0400     		movs	r4, r0
1902:..\FreeRTOS/queue.c **** 	{
 2398              		.loc 1 1902 0
 2399 0004 FFF7FEFF 		bl	vPortEnterCritical
 2400              	.LVL395:
1904:..\FreeRTOS/queue.c **** 	}
 2401              		.loc 1 1904 0
 2402 0008 A46B     		ldr	r4, [r4, #56]
 2403              	.LVL396:
1906:..\FreeRTOS/queue.c **** 
 2404              		.loc 1 1906 0
 2405 000a FFF7FEFF 		bl	vPortExitCritical
 2406              	.LVL397:
1909:..\FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
 2407              		.loc 1 1909 0
 2408 000e 2000     		movs	r0, r4
 2409              		@ sp needed
 2410              	.LVL398:
 2411 0010 10BD     		pop	{r4, pc}
 2412              		.cfi_endproc
 2413              	.LFE48:
 2414              		.size	uxQueueMessagesWaiting, .-uxQueueMessagesWaiting
 2415 0012 C046     		.section	.text.uxQueueSpacesAvailable,"ax",%progbits
 2416              		.align	2
 2417              		.global	uxQueueSpacesAvailable
 2418              		.code	16
 2419              		.thumb_func
 2420              		.type	uxQueueSpacesAvailable, %function
 2421              	uxQueueSpacesAvailable:
 2422              	.LFB49:
1913:..\FreeRTOS/queue.c **** UBaseType_t uxReturn;
 2423              		.loc 1 1913 0
 2424              		.cfi_startproc
 2425              		@ args = 0, pretend = 0, frame = 0
 2426              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccApaELb.s 			page 101


 2427              	.LVL399:
 2428 0000 10B5     		push	{r4, lr}
 2429              		.cfi_def_cfa_offset 8
 2430              		.cfi_offset 4, -8
 2431              		.cfi_offset 14, -4
 2432 0002 0400     		movs	r4, r0
 2433              	.LVL400:
1920:..\FreeRTOS/queue.c **** 	{
 2434              		.loc 1 1920 0
 2435 0004 FFF7FEFF 		bl	vPortEnterCritical
 2436              	.LVL401:
1922:..\FreeRTOS/queue.c **** 	}
 2437              		.loc 1 1922 0
 2438 0008 E36B     		ldr	r3, [r4, #60]
 2439 000a A46B     		ldr	r4, [r4, #56]
 2440              	.LVL402:
 2441 000c 1C1B     		subs	r4, r3, r4
 2442              	.LVL403:
1924:..\FreeRTOS/queue.c **** 
 2443              		.loc 1 1924 0
 2444 000e FFF7FEFF 		bl	vPortExitCritical
 2445              	.LVL404:
1927:..\FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
 2446              		.loc 1 1927 0
 2447 0012 2000     		movs	r0, r4
 2448              		@ sp needed
 2449              	.LVL405:
 2450 0014 10BD     		pop	{r4, pc}
 2451              		.cfi_endproc
 2452              	.LFE49:
 2453              		.size	uxQueueSpacesAvailable, .-uxQueueSpacesAvailable
 2454 0016 C046     		.section	.text.uxQueueMessagesWaitingFromISR,"ax",%progbits
 2455              		.align	2
 2456              		.global	uxQueueMessagesWaitingFromISR
 2457              		.code	16
 2458              		.thumb_func
 2459              		.type	uxQueueMessagesWaitingFromISR, %function
 2460              	uxQueueMessagesWaitingFromISR:
 2461              	.LFB50:
1931:..\FreeRTOS/queue.c **** UBaseType_t uxReturn;
 2462              		.loc 1 1931 0
 2463              		.cfi_startproc
 2464              		@ args = 0, pretend = 0, frame = 0
 2465              		@ frame_needed = 0, uses_anonymous_args = 0
 2466              		@ link register save eliminated.
 2467              	.LVL406:
1936:..\FreeRTOS/queue.c **** 
 2468              		.loc 1 1936 0
 2469 0000 806B     		ldr	r0, [r0, #56]
 2470              	.LVL407:
1939:..\FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
 2471              		.loc 1 1939 0
 2472              		@ sp needed
 2473 0002 7047     		bx	lr
 2474              		.cfi_endproc
 2475              	.LFE50:
 2476              		.size	uxQueueMessagesWaitingFromISR, .-uxQueueMessagesWaitingFromISR
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccApaELb.s 			page 102


 2477              		.section	.text.xQueueIsQueueEmptyFromISR,"ax",%progbits
 2478              		.align	2
 2479              		.global	xQueueIsQueueEmptyFromISR
 2480              		.code	16
 2481              		.thumb_func
 2482              		.type	xQueueIsQueueEmptyFromISR, %function
 2483              	xQueueIsQueueEmptyFromISR:
 2484              	.LFB57:
2280:..\FreeRTOS/queue.c **** BaseType_t xReturn;
 2485              		.loc 1 2280 0
 2486              		.cfi_startproc
 2487              		@ args = 0, pretend = 0, frame = 0
 2488              		@ frame_needed = 0, uses_anonymous_args = 0
 2489              		@ link register save eliminated.
 2490              	.LVL408:
2284:..\FreeRTOS/queue.c **** 	{
 2491              		.loc 1 2284 0
 2492 0000 836B     		ldr	r3, [r0, #56]
 2493 0002 002B     		cmp	r3, #0
 2494 0004 01D1     		bne	.L149
2286:..\FreeRTOS/queue.c **** 	}
 2495              		.loc 1 2286 0
 2496 0006 0120     		movs	r0, #1
 2497              	.LVL409:
 2498 0008 00E0     		b	.L148
 2499              	.LVL410:
 2500              	.L149:
2290:..\FreeRTOS/queue.c **** 	}
 2501              		.loc 1 2290 0
 2502 000a 0020     		movs	r0, #0
 2503              	.LVL411:
 2504              	.L148:
2294:..\FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
 2505              		.loc 1 2294 0
 2506              		@ sp needed
 2507 000c 7047     		bx	lr
 2508              		.cfi_endproc
 2509              	.LFE57:
 2510              		.size	xQueueIsQueueEmptyFromISR, .-xQueueIsQueueEmptyFromISR
 2511 000e C046     		.section	.text.xQueueIsQueueFullFromISR,"ax",%progbits
 2512              		.align	2
 2513              		.global	xQueueIsQueueFullFromISR
 2514              		.code	16
 2515              		.thumb_func
 2516              		.type	xQueueIsQueueFullFromISR, %function
 2517              	xQueueIsQueueFullFromISR:
 2518              	.LFB59:
2319:..\FreeRTOS/queue.c **** BaseType_t xReturn;
 2519              		.loc 1 2319 0
 2520              		.cfi_startproc
 2521              		@ args = 0, pretend = 0, frame = 0
 2522              		@ frame_needed = 0, uses_anonymous_args = 0
 2523              		@ link register save eliminated.
 2524              	.LVL412:
2323:..\FreeRTOS/queue.c **** 	{
 2525              		.loc 1 2323 0
 2526 0000 826B     		ldr	r2, [r0, #56]
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccApaELb.s 			page 103


 2527 0002 C36B     		ldr	r3, [r0, #60]
 2528 0004 9A42     		cmp	r2, r3
 2529 0006 01D1     		bne	.L152
2325:..\FreeRTOS/queue.c **** 	}
 2530              		.loc 1 2325 0
 2531 0008 0120     		movs	r0, #1
 2532              	.LVL413:
 2533 000a 00E0     		b	.L151
 2534              	.LVL414:
 2535              	.L152:
2329:..\FreeRTOS/queue.c **** 	}
 2536              		.loc 1 2329 0
 2537 000c 0020     		movs	r0, #0
 2538              	.LVL415:
 2539              	.L151:
2333:..\FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
 2540              		.loc 1 2333 0
 2541              		@ sp needed
 2542 000e 7047     		bx	lr
 2543              		.cfi_endproc
 2544              	.LFE59:
 2545              		.size	xQueueIsQueueFullFromISR, .-xQueueIsQueueFullFromISR
 2546              		.section	.text.vQueueAddToRegistry,"ax",%progbits
 2547              		.align	2
 2548              		.global	vQueueAddToRegistry
 2549              		.code	16
 2550              		.thumb_func
 2551              		.type	vQueueAddToRegistry, %function
 2552              	vQueueAddToRegistry:
 2553              	.LFB60:
2614:..\FreeRTOS/queue.c **** 	UBaseType_t ux;
 2554              		.loc 1 2614 0
 2555              		.cfi_startproc
 2556              		@ args = 0, pretend = 0, frame = 0
 2557              		@ frame_needed = 0, uses_anonymous_args = 0
 2558              	.LVL416:
 2559 0000 10B5     		push	{r4, lr}
 2560              		.cfi_def_cfa_offset 8
 2561              		.cfi_offset 4, -8
 2562              		.cfi_offset 14, -4
 2563              	.LVL417:
2619:..\FreeRTOS/queue.c **** 		{
 2564              		.loc 1 2619 0
 2565 0002 0023     		movs	r3, #0
 2566 0004 0AE0     		b	.L154
 2567              	.LVL418:
 2568              	.L157:
2621:..\FreeRTOS/queue.c **** 			{
 2569              		.loc 1 2621 0
 2570 0006 DA00     		lsls	r2, r3, #3
 2571 0008 064C     		ldr	r4, .L158
 2572 000a 1259     		ldr	r2, [r2, r4]
 2573 000c 002A     		cmp	r2, #0
 2574 000e 04D1     		bne	.L155
2624:..\FreeRTOS/queue.c **** 				xQueueRegistry[ ux ].xHandle = xQueue;
 2575              		.loc 1 2624 0
 2576 0010 DB00     		lsls	r3, r3, #3
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccApaELb.s 			page 104


 2577              	.LVL419:
 2578 0012 1951     		str	r1, [r3, r4]
2625:..\FreeRTOS/queue.c **** 
 2579              		.loc 1 2625 0
 2580 0014 E318     		adds	r3, r4, r3
 2581 0016 5860     		str	r0, [r3, #4]
2628:..\FreeRTOS/queue.c **** 			}
 2582              		.loc 1 2628 0
 2583 0018 02E0     		b	.L153
 2584              	.LVL420:
 2585              	.L155:
2619:..\FreeRTOS/queue.c **** 		{
 2586              		.loc 1 2619 0 discriminator 2
 2587 001a 0133     		adds	r3, r3, #1
 2588              	.LVL421:
 2589              	.L154:
2619:..\FreeRTOS/queue.c **** 		{
 2590              		.loc 1 2619 0 is_stmt 0 discriminator 1
 2591 001c 092B     		cmp	r3, #9
 2592 001e F2D9     		bls	.L157
 2593              	.LVL422:
 2594              	.L153:
2635:..\FreeRTOS/queue.c **** 
 2595              		.loc 1 2635 0 is_stmt 1
 2596              		@ sp needed
 2597 0020 10BD     		pop	{r4, pc}
 2598              	.L159:
 2599 0022 C046     		.align	2
 2600              	.L158:
 2601 0024 00000000 		.word	xQueueRegistry
 2602              		.cfi_endproc
 2603              	.LFE60:
 2604              		.size	vQueueAddToRegistry, .-vQueueAddToRegistry
 2605              		.section	.text.pcQueueGetName,"ax",%progbits
 2606              		.align	2
 2607              		.global	pcQueueGetName
 2608              		.code	16
 2609              		.thumb_func
 2610              		.type	pcQueueGetName, %function
 2611              	pcQueueGetName:
 2612              	.LFB61:
2643:..\FreeRTOS/queue.c **** 	UBaseType_t ux;
 2613              		.loc 1 2643 0
 2614              		.cfi_startproc
 2615              		@ args = 0, pretend = 0, frame = 0
 2616              		@ frame_needed = 0, uses_anonymous_args = 0
 2617              		@ link register save eliminated.
 2618              	.LVL423:
2649:..\FreeRTOS/queue.c **** 		{
 2619              		.loc 1 2649 0
 2620 0000 0022     		movs	r2, #0
 2621 0002 09E0     		b	.L161
 2622              	.LVL424:
 2623              	.L164:
2651:..\FreeRTOS/queue.c **** 			{
 2624              		.loc 1 2651 0
 2625 0004 D300     		lsls	r3, r2, #3
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccApaELb.s 			page 105


 2626 0006 0649     		ldr	r1, .L165
 2627 0008 CB18     		adds	r3, r1, r3
 2628 000a 5B68     		ldr	r3, [r3, #4]
 2629 000c 8342     		cmp	r3, r0
 2630 000e 02D1     		bne	.L162
2653:..\FreeRTOS/queue.c **** 				break;
 2631              		.loc 1 2653 0
 2632 0010 D200     		lsls	r2, r2, #3
 2633              	.LVL425:
 2634 0012 5058     		ldr	r0, [r2, r1]
 2635              	.LVL426:
2654:..\FreeRTOS/queue.c **** 			}
 2636              		.loc 1 2654 0
 2637 0014 03E0     		b	.L163
 2638              	.LVL427:
 2639              	.L162:
2649:..\FreeRTOS/queue.c **** 		{
 2640              		.loc 1 2649 0 discriminator 2
 2641 0016 0132     		adds	r2, r2, #1
 2642              	.LVL428:
 2643              	.L161:
2649:..\FreeRTOS/queue.c **** 		{
 2644              		.loc 1 2649 0 is_stmt 0 discriminator 1
 2645 0018 092A     		cmp	r2, #9
 2646 001a F3D9     		bls	.L164
2645:..\FreeRTOS/queue.c **** 
 2647              		.loc 1 2645 0 is_stmt 1
 2648 001c 0020     		movs	r0, #0
 2649              	.LVL429:
 2650              	.L163:
2663:..\FreeRTOS/queue.c **** 
 2651              		.loc 1 2663 0
 2652              		@ sp needed
 2653 001e 7047     		bx	lr
 2654              	.L166:
 2655              		.align	2
 2656              	.L165:
 2657 0020 00000000 		.word	xQueueRegistry
 2658              		.cfi_endproc
 2659              	.LFE61:
 2660              		.size	pcQueueGetName, .-pcQueueGetName
 2661              		.section	.text.vQueueUnregisterQueue,"ax",%progbits
 2662              		.align	2
 2663              		.global	vQueueUnregisterQueue
 2664              		.code	16
 2665              		.thumb_func
 2666              		.type	vQueueUnregisterQueue, %function
 2667              	vQueueUnregisterQueue:
 2668              	.LFB62:
2671:..\FreeRTOS/queue.c **** 	UBaseType_t ux;
 2669              		.loc 1 2671 0
 2670              		.cfi_startproc
 2671              		@ args = 0, pretend = 0, frame = 0
 2672              		@ frame_needed = 0, uses_anonymous_args = 0
 2673              		@ link register save eliminated.
 2674              	.LVL430:
2676:..\FreeRTOS/queue.c **** 		{
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccApaELb.s 			page 106


 2675              		.loc 1 2676 0
 2676 0000 0022     		movs	r2, #0
 2677 0002 0CE0     		b	.L168
 2678              	.LVL431:
 2679              	.L171:
2678:..\FreeRTOS/queue.c **** 			{
 2680              		.loc 1 2678 0
 2681 0004 D300     		lsls	r3, r2, #3
 2682 0006 0749     		ldr	r1, .L172
 2683 0008 CB18     		adds	r3, r1, r3
 2684 000a 5B68     		ldr	r3, [r3, #4]
 2685 000c 8342     		cmp	r3, r0
 2686 000e 05D1     		bne	.L169
2681:..\FreeRTOS/queue.c **** 
 2687              		.loc 1 2681 0
 2688 0010 D200     		lsls	r2, r2, #3
 2689              	.LVL432:
 2690 0012 0023     		movs	r3, #0
 2691 0014 5350     		str	r3, [r2, r1]
2686:..\FreeRTOS/queue.c **** 				break;
 2692              		.loc 1 2686 0
 2693 0016 8A18     		adds	r2, r1, r2
 2694 0018 5360     		str	r3, [r2, #4]
2687:..\FreeRTOS/queue.c **** 			}
 2695              		.loc 1 2687 0
 2696 001a 02E0     		b	.L167
 2697              	.LVL433:
 2698              	.L169:
2676:..\FreeRTOS/queue.c **** 		{
 2699              		.loc 1 2676 0 discriminator 2
 2700 001c 0132     		adds	r2, r2, #1
 2701              	.LVL434:
 2702              	.L168:
2676:..\FreeRTOS/queue.c **** 		{
 2703              		.loc 1 2676 0 is_stmt 0 discriminator 1
 2704 001e 092A     		cmp	r2, #9
 2705 0020 F0D9     		bls	.L171
 2706              	.LVL435:
 2707              	.L167:
2695:..\FreeRTOS/queue.c **** 
 2708              		.loc 1 2695 0 is_stmt 1
 2709              		@ sp needed
 2710 0022 7047     		bx	lr
 2711              	.L173:
 2712              		.align	2
 2713              	.L172:
 2714 0024 00000000 		.word	xQueueRegistry
 2715              		.cfi_endproc
 2716              	.LFE62:
 2717              		.size	vQueueUnregisterQueue, .-vQueueUnregisterQueue
 2718              		.section	.text.vQueueDelete,"ax",%progbits
 2719              		.align	2
 2720              		.global	vQueueDelete
 2721              		.code	16
 2722              		.thumb_func
 2723              		.type	vQueueDelete, %function
 2724              	vQueueDelete:
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccApaELb.s 			page 107


 2725              	.LFB51:
1943:..\FreeRTOS/queue.c **** Queue_t * const pxQueue = ( Queue_t * ) xQueue;
 2726              		.loc 1 1943 0
 2727              		.cfi_startproc
 2728              		@ args = 0, pretend = 0, frame = 0
 2729              		@ frame_needed = 0, uses_anonymous_args = 0
 2730              	.LVL436:
 2731 0000 10B5     		push	{r4, lr}
 2732              		.cfi_def_cfa_offset 8
 2733              		.cfi_offset 4, -8
 2734              		.cfi_offset 14, -4
 2735 0002 0400     		movs	r4, r0
 2736              	.LVL437:
1951:..\FreeRTOS/queue.c **** 	}
 2737              		.loc 1 1951 0
 2738 0004 FFF7FEFF 		bl	vQueueUnregisterQueue
 2739              	.LVL438:
1959:..\FreeRTOS/queue.c **** 	}
 2740              		.loc 1 1959 0
 2741 0008 2000     		movs	r0, r4
 2742 000a FFF7FEFF 		bl	vPortFree
 2743              	.LVL439:
1981:..\FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
 2744              		.loc 1 1981 0
 2745              		@ sp needed
 2746              	.LVL440:
 2747 000e 10BD     		pop	{r4, pc}
 2748              		.cfi_endproc
 2749              	.LFE51:
 2750              		.size	vQueueDelete, .-vQueueDelete
 2751              		.section	.text.xQueueCreateSet,"ax",%progbits
 2752              		.align	2
 2753              		.global	xQueueCreateSet
 2754              		.code	16
 2755              		.thumb_func
 2756              		.type	xQueueCreateSet, %function
 2757              	xQueueCreateSet:
 2758              	.LFB63:
2739:..\FreeRTOS/queue.c **** 	QueueSetHandle_t pxQueue;
 2759              		.loc 1 2739 0
 2760              		.cfi_startproc
 2761              		@ args = 0, pretend = 0, frame = 0
 2762              		@ frame_needed = 0, uses_anonymous_args = 0
 2763              	.LVL441:
 2764 0000 10B5     		push	{r4, lr}
 2765              		.cfi_def_cfa_offset 8
 2766              		.cfi_offset 4, -8
 2767              		.cfi_offset 14, -4
2742:..\FreeRTOS/queue.c **** 
 2768              		.loc 1 2742 0
 2769 0002 0022     		movs	r2, #0
 2770 0004 0421     		movs	r1, #4
 2771 0006 FFF7FEFF 		bl	xQueueGenericCreate
 2772              	.LVL442:
2745:..\FreeRTOS/queue.c **** 
 2773              		.loc 1 2745 0
 2774              		@ sp needed
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccApaELb.s 			page 108


 2775 000a 10BD     		pop	{r4, pc}
 2776              		.cfi_endproc
 2777              	.LFE63:
 2778              		.size	xQueueCreateSet, .-xQueueCreateSet
 2779              		.section	.text.xQueueAddToSet,"ax",%progbits
 2780              		.align	2
 2781              		.global	xQueueAddToSet
 2782              		.code	16
 2783              		.thumb_func
 2784              		.type	xQueueAddToSet, %function
 2785              	xQueueAddToSet:
 2786              	.LFB64:
2753:..\FreeRTOS/queue.c **** 	BaseType_t xReturn;
 2787              		.loc 1 2753 0
 2788              		.cfi_startproc
 2789              		@ args = 0, pretend = 0, frame = 0
 2790              		@ frame_needed = 0, uses_anonymous_args = 0
 2791              	.LVL443:
 2792 0000 70B5     		push	{r4, r5, r6, lr}
 2793              		.cfi_def_cfa_offset 16
 2794              		.cfi_offset 4, -16
 2795              		.cfi_offset 5, -12
 2796              		.cfi_offset 6, -8
 2797              		.cfi_offset 14, -4
 2798 0002 0400     		movs	r4, r0
 2799 0004 0D00     		movs	r5, r1
2756:..\FreeRTOS/queue.c **** 		{
 2800              		.loc 1 2756 0
 2801 0006 FFF7FEFF 		bl	vPortEnterCritical
 2802              	.LVL444:
2758:..\FreeRTOS/queue.c **** 			{
 2803              		.loc 1 2758 0
 2804 000a A36C     		ldr	r3, [r4, #72]
 2805 000c 002B     		cmp	r3, #0
 2806 000e 05D1     		bne	.L178
2763:..\FreeRTOS/queue.c **** 			{
 2807              		.loc 1 2763 0
 2808 0010 A36B     		ldr	r3, [r4, #56]
 2809 0012 002B     		cmp	r3, #0
 2810 0014 04D1     		bne	.L179
2771:..\FreeRTOS/queue.c **** 				xReturn = pdPASS;
 2811              		.loc 1 2771 0
 2812 0016 A564     		str	r5, [r4, #72]
 2813              	.LVL445:
2772:..\FreeRTOS/queue.c **** 			}
 2814              		.loc 1 2772 0
 2815 0018 0124     		movs	r4, #1
 2816              	.LVL446:
 2817 001a 02E0     		b	.L177
 2818              	.LVL447:
 2819              	.L178:
2761:..\FreeRTOS/queue.c **** 			}
 2820              		.loc 1 2761 0
 2821 001c 0024     		movs	r4, #0
 2822              	.LVL448:
 2823 001e 00E0     		b	.L177
 2824              	.LVL449:
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccApaELb.s 			page 109


 2825              	.L179:
2767:..\FreeRTOS/queue.c **** 			}
 2826              		.loc 1 2767 0
 2827 0020 0024     		movs	r4, #0
 2828              	.LVL450:
 2829              	.L177:
2775:..\FreeRTOS/queue.c **** 
 2830              		.loc 1 2775 0
 2831 0022 FFF7FEFF 		bl	vPortExitCritical
 2832              	.LVL451:
2778:..\FreeRTOS/queue.c **** 
 2833              		.loc 1 2778 0
 2834 0026 2000     		movs	r0, r4
 2835              		@ sp needed
 2836              	.LVL452:
 2837              	.LVL453:
 2838 0028 70BD     		pop	{r4, r5, r6, pc}
 2839              		.cfi_endproc
 2840              	.LFE64:
 2841              		.size	xQueueAddToSet, .-xQueueAddToSet
 2842 002a C046     		.section	.text.xQueueRemoveFromSet,"ax",%progbits
 2843              		.align	2
 2844              		.global	xQueueRemoveFromSet
 2845              		.code	16
 2846              		.thumb_func
 2847              		.type	xQueueRemoveFromSet, %function
 2848              	xQueueRemoveFromSet:
 2849              	.LFB65:
2786:..\FreeRTOS/queue.c **** 	BaseType_t xReturn;
 2850              		.loc 1 2786 0
 2851              		.cfi_startproc
 2852              		@ args = 0, pretend = 0, frame = 0
 2853              		@ frame_needed = 0, uses_anonymous_args = 0
 2854              	.LVL454:
 2855 0000 10B5     		push	{r4, lr}
 2856              		.cfi_def_cfa_offset 8
 2857              		.cfi_offset 4, -8
 2858              		.cfi_offset 14, -4
 2859 0002 0400     		movs	r4, r0
 2860              	.LVL455:
2790:..\FreeRTOS/queue.c **** 		{
 2861              		.loc 1 2790 0
 2862 0004 836C     		ldr	r3, [r0, #72]
 2863 0006 8B42     		cmp	r3, r1
 2864 0008 0AD1     		bne	.L182
2795:..\FreeRTOS/queue.c **** 		{
 2865              		.loc 1 2795 0
 2866 000a 836B     		ldr	r3, [r0, #56]
 2867 000c 002B     		cmp	r3, #0
 2868 000e 09D1     		bne	.L183
2804:..\FreeRTOS/queue.c **** 			{
 2869              		.loc 1 2804 0
 2870 0010 FFF7FEFF 		bl	vPortEnterCritical
 2871              	.LVL456:
2807:..\FreeRTOS/queue.c **** 			}
 2872              		.loc 1 2807 0
 2873 0014 0023     		movs	r3, #0
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccApaELb.s 			page 110


 2874 0016 A364     		str	r3, [r4, #72]
2809:..\FreeRTOS/queue.c **** 			xReturn = pdPASS;
 2875              		.loc 1 2809 0
 2876 0018 FFF7FEFF 		bl	vPortExitCritical
 2877              	.LVL457:
2810:..\FreeRTOS/queue.c **** 		}
 2878              		.loc 1 2810 0
 2879 001c 0120     		movs	r0, #1
 2880 001e 02E0     		b	.L181
 2881              	.LVL458:
 2882              	.L182:
2793:..\FreeRTOS/queue.c **** 		}
 2883              		.loc 1 2793 0
 2884 0020 0020     		movs	r0, #0
 2885              	.LVL459:
 2886 0022 00E0     		b	.L181
 2887              	.LVL460:
 2888              	.L183:
2800:..\FreeRTOS/queue.c **** 		}
 2889              		.loc 1 2800 0
 2890 0024 0020     		movs	r0, #0
 2891              	.LVL461:
 2892              	.L181:
2814:..\FreeRTOS/queue.c **** 
 2893              		.loc 1 2814 0
 2894              		@ sp needed
 2895              	.LVL462:
 2896 0026 10BD     		pop	{r4, pc}
 2897              		.cfi_endproc
 2898              	.LFE65:
 2899              		.size	xQueueRemoveFromSet, .-xQueueRemoveFromSet
 2900              		.section	.text.xQueueSelectFromSet,"ax",%progbits
 2901              		.align	2
 2902              		.global	xQueueSelectFromSet
 2903              		.code	16
 2904              		.thumb_func
 2905              		.type	xQueueSelectFromSet, %function
 2906              	xQueueSelectFromSet:
 2907              	.LFB66:
2822:..\FreeRTOS/queue.c **** 	QueueSetMemberHandle_t xReturn = NULL;
 2908              		.loc 1 2822 0
 2909              		.cfi_startproc
 2910              		@ args = 0, pretend = 0, frame = 8
 2911              		@ frame_needed = 0, uses_anonymous_args = 0
 2912              	.LVL463:
 2913 0000 00B5     		push	{lr}
 2914              		.cfi_def_cfa_offset 4
 2915              		.cfi_offset 14, -4
 2916 0002 83B0     		sub	sp, sp, #12
 2917              		.cfi_def_cfa_offset 16
 2918 0004 0A00     		movs	r2, r1
2823:..\FreeRTOS/queue.c **** 
 2919              		.loc 1 2823 0
 2920 0006 0023     		movs	r3, #0
 2921 0008 0193     		str	r3, [sp, #4]
2825:..\FreeRTOS/queue.c **** 		return xReturn;
 2922              		.loc 1 2825 0
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccApaELb.s 			page 111


 2923 000a 01A9     		add	r1, sp, #4
 2924              	.LVL464:
 2925 000c FFF7FEFF 		bl	xQueueReceive
 2926              	.LVL465:
2827:..\FreeRTOS/queue.c **** 
 2927              		.loc 1 2827 0
 2928 0010 0198     		ldr	r0, [sp, #4]
 2929 0012 03B0     		add	sp, sp, #12
 2930              		@ sp needed
 2931 0014 00BD     		pop	{pc}
 2932              		.cfi_endproc
 2933              	.LFE66:
 2934              		.size	xQueueSelectFromSet, .-xQueueSelectFromSet
 2935 0016 C046     		.section	.text.xQueueSelectFromSetFromISR,"ax",%progbits
 2936              		.align	2
 2937              		.global	xQueueSelectFromSetFromISR
 2938              		.code	16
 2939              		.thumb_func
 2940              		.type	xQueueSelectFromSetFromISR, %function
 2941              	xQueueSelectFromSetFromISR:
 2942              	.LFB67:
2835:..\FreeRTOS/queue.c **** 	QueueSetMemberHandle_t xReturn = NULL;
 2943              		.loc 1 2835 0
 2944              		.cfi_startproc
 2945              		@ args = 0, pretend = 0, frame = 8
 2946              		@ frame_needed = 0, uses_anonymous_args = 0
 2947              	.LVL466:
 2948 0000 00B5     		push	{lr}
 2949              		.cfi_def_cfa_offset 4
 2950              		.cfi_offset 14, -4
 2951 0002 83B0     		sub	sp, sp, #12
 2952              		.cfi_def_cfa_offset 16
2836:..\FreeRTOS/queue.c **** 
 2953              		.loc 1 2836 0
 2954 0004 0023     		movs	r3, #0
 2955 0006 0193     		str	r3, [sp, #4]
2838:..\FreeRTOS/queue.c **** 		return xReturn;
 2956              		.loc 1 2838 0
 2957 0008 0022     		movs	r2, #0
 2958 000a 01A9     		add	r1, sp, #4
 2959 000c FFF7FEFF 		bl	xQueueReceiveFromISR
 2960              	.LVL467:
2840:..\FreeRTOS/queue.c **** 
 2961              		.loc 1 2840 0
 2962 0010 0198     		ldr	r0, [sp, #4]
 2963 0012 03B0     		add	sp, sp, #12
 2964              		@ sp needed
 2965 0014 00BD     		pop	{pc}
 2966              		.cfi_endproc
 2967              	.LFE67:
 2968              		.size	xQueueSelectFromSetFromISR, .-xQueueSelectFromSetFromISR
 2969              		.comm	xQueueRegistry,80,4
 2970 0016 C046     		.text
 2971              	.Letext0:
 2972              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.1\\psoc creator\\import\\gnu\\arm\\5.4.
 2973              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.1\\psoc creator\\import\\gnu\\arm\\5.4.
 2974              		.file 4 "c:\\program files (x86)\\cypress\\psoc creator\\4.1\\psoc creator\\import\\gnu\\arm\\5.4.
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccApaELb.s 			page 112


 2975              		.file 5 "..\\FreeRTOS\\portable\\GCC\\ARM_CM0/portmacro.h"
 2976              		.file 6 "..\\FreeRTOS\\include/list.h"
 2977              		.file 7 "..\\FreeRTOS\\include/task.h"
 2978              		.file 8 "..\\FreeRTOS\\include/queue.h"
 2979              		.file 9 "..\\FreeRTOS\\include/portable.h"
 2980              		.file 10 "Generated_Source\\PSoC4/RF1_REGS.h"
 2981              		.section	.debug_info,"",%progbits
 2982              	.Ldebug_info0:
 2983 0000 0C1C0000 		.4byte	0x1c0c
 2984 0004 0400     		.2byte	0x4
 2985 0006 00000000 		.4byte	.Ldebug_abbrev0
 2986 000a 04       		.byte	0x4
 2987 000b 01       		.uleb128 0x1
 2988 000c 10010000 		.4byte	.LASF185
 2989 0010 0C       		.byte	0xc
 2990 0011 B10A0000 		.4byte	.LASF186
 2991 0015 F1080000 		.4byte	.LASF187
 2992 0019 60000000 		.4byte	.Ldebug_ranges0+0x60
 2993 001d 00000000 		.4byte	0
 2994 0021 00000000 		.4byte	.Ldebug_line0
 2995 0025 02       		.uleb128 0x2
 2996 0026 68000000 		.4byte	.LASF3
 2997 002a 02       		.byte	0x2
 2998 002b D8       		.byte	0xd8
 2999 002c 30000000 		.4byte	0x30
 3000 0030 03       		.uleb128 0x3
 3001 0031 04       		.byte	0x4
 3002 0032 07       		.byte	0x7
 3003 0033 08080000 		.4byte	.LASF0
 3004 0037 04       		.uleb128 0x4
 3005 0038 04       		.byte	0x4
 3006 0039 05       		.byte	0x5
 3007 003a 696E7400 		.ascii	"int\000"
 3008 003e 03       		.uleb128 0x3
 3009 003f 08       		.byte	0x8
 3010 0040 05       		.byte	0x5
 3011 0041 73020000 		.4byte	.LASF1
 3012 0045 03       		.uleb128 0x3
 3013 0046 08       		.byte	0x8
 3014 0047 04       		.byte	0x4
 3015 0048 7C060000 		.4byte	.LASF2
 3016 004c 02       		.uleb128 0x2
 3017 004d F1070000 		.4byte	.LASF4
 3018 0051 03       		.byte	0x3
 3019 0052 1B       		.byte	0x1b
 3020 0053 57000000 		.4byte	0x57
 3021 0057 03       		.uleb128 0x3
 3022 0058 01       		.byte	0x1
 3023 0059 06       		.byte	0x6
 3024 005a 81020000 		.4byte	.LASF5
 3025 005e 02       		.uleb128 0x2
 3026 005f E1000000 		.4byte	.LASF6
 3027 0063 03       		.byte	0x3
 3028 0064 1D       		.byte	0x1d
 3029 0065 69000000 		.4byte	0x69
 3030 0069 03       		.uleb128 0x3
 3031 006a 01       		.byte	0x1
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccApaELb.s 			page 113


 3032 006b 08       		.byte	0x8
 3033 006c FA070000 		.4byte	.LASF7
 3034 0070 03       		.uleb128 0x3
 3035 0071 02       		.byte	0x2
 3036 0072 05       		.byte	0x5
 3037 0073 2A080000 		.4byte	.LASF8
 3038 0077 03       		.uleb128 0x3
 3039 0078 02       		.byte	0x2
 3040 0079 07       		.byte	0x7
 3041 007a 7C050000 		.4byte	.LASF9
 3042 007e 03       		.uleb128 0x3
 3043 007f 04       		.byte	0x4
 3044 0080 05       		.byte	0x5
 3045 0081 12030000 		.4byte	.LASF10
 3046 0085 02       		.uleb128 0x2
 3047 0086 09040000 		.4byte	.LASF11
 3048 008a 03       		.byte	0x3
 3049 008b 41       		.byte	0x41
 3050 008c 90000000 		.4byte	0x90
 3051 0090 03       		.uleb128 0x3
 3052 0091 04       		.byte	0x4
 3053 0092 07       		.byte	0x7
 3054 0093 F1040000 		.4byte	.LASF12
 3055 0097 03       		.uleb128 0x3
 3056 0098 08       		.byte	0x8
 3057 0099 07       		.byte	0x7
 3058 009a C7010000 		.4byte	.LASF13
 3059 009e 03       		.uleb128 0x3
 3060 009f 04       		.byte	0x4
 3061 00a0 07       		.byte	0x7
 3062 00a1 73060000 		.4byte	.LASF14
 3063 00a5 05       		.uleb128 0x5
 3064 00a6 04       		.byte	0x4
 3065 00a7 03       		.uleb128 0x3
 3066 00a8 01       		.byte	0x1
 3067 00a9 08       		.byte	0x8
 3068 00aa B9090000 		.4byte	.LASF15
 3069 00ae 06       		.uleb128 0x6
 3070 00af 04       		.byte	0x4
 3071 00b0 B4000000 		.4byte	0xb4
 3072 00b4 07       		.uleb128 0x7
 3073 00b5 A7000000 		.4byte	0xa7
 3074 00b9 06       		.uleb128 0x6
 3075 00ba 04       		.byte	0x4
 3076 00bb BF000000 		.4byte	0xbf
 3077 00bf 08       		.uleb128 0x8
 3078 00c0 02       		.uleb128 0x2
 3079 00c1 C50A0000 		.4byte	.LASF16
 3080 00c5 04       		.byte	0x4
 3081 00c6 14       		.byte	0x14
 3082 00c7 4C000000 		.4byte	0x4c
 3083 00cb 02       		.uleb128 0x2
 3084 00cc 660B0000 		.4byte	.LASF17
 3085 00d0 04       		.byte	0x4
 3086 00d1 18       		.byte	0x18
 3087 00d2 5E000000 		.4byte	0x5e
 3088 00d6 02       		.uleb128 0x2
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccApaELb.s 			page 114


 3089 00d7 560C0000 		.4byte	.LASF18
 3090 00db 04       		.byte	0x4
 3091 00dc 30       		.byte	0x30
 3092 00dd 85000000 		.4byte	0x85
 3093 00e1 03       		.uleb128 0x3
 3094 00e2 04       		.byte	0x4
 3095 00e3 04       		.byte	0x4
 3096 00e4 85070000 		.4byte	.LASF19
 3097 00e8 03       		.uleb128 0x3
 3098 00e9 08       		.byte	0x8
 3099 00ea 04       		.byte	0x4
 3100 00eb 49030000 		.4byte	.LASF20
 3101 00ef 09       		.uleb128 0x9
 3102 00f0 01       		.byte	0x1
 3103 00f1 69000000 		.4byte	0x69
 3104 00f5 0A       		.byte	0xa
 3105 00f6 1F       		.byte	0x1f
 3106 00f7 98010000 		.4byte	0x198
 3107 00fb 0A       		.uleb128 0xa
 3108 00fc 9E050000 		.4byte	.LASF21
 3109 0100 00       		.byte	0
 3110 0101 0A       		.uleb128 0xa
 3111 0102 8B040000 		.4byte	.LASF22
 3112 0106 01       		.byte	0x1
 3113 0107 0A       		.uleb128 0xa
 3114 0108 D5020000 		.4byte	.LASF23
 3115 010c 02       		.byte	0x2
 3116 010d 0A       		.uleb128 0xa
 3117 010e A8090000 		.4byte	.LASF24
 3118 0112 03       		.byte	0x3
 3119 0113 0A       		.uleb128 0xa
 3120 0114 0D060000 		.4byte	.LASF25
 3121 0118 04       		.byte	0x4
 3122 0119 0A       		.uleb128 0xa
 3123 011a 170A0000 		.4byte	.LASF26
 3124 011e 05       		.byte	0x5
 3125 011f 0A       		.uleb128 0xa
 3126 0120 62060000 		.4byte	.LASF27
 3127 0124 06       		.byte	0x6
 3128 0125 0A       		.uleb128 0xa
 3129 0126 FB0B0000 		.4byte	.LASF28
 3130 012a 07       		.byte	0x7
 3131 012b 0A       		.uleb128 0xa
 3132 012c 5F0C0000 		.4byte	.LASF29
 3133 0130 08       		.byte	0x8
 3134 0131 0A       		.uleb128 0xa
 3135 0132 E5080000 		.4byte	.LASF30
 3136 0136 09       		.byte	0x9
 3137 0137 0A       		.uleb128 0xa
 3138 0138 47020000 		.4byte	.LASF31
 3139 013c 0A       		.byte	0xa
 3140 013d 0A       		.uleb128 0xa
 3141 013e FA050000 		.4byte	.LASF32
 3142 0142 0B       		.byte	0xb
 3143 0143 0A       		.uleb128 0xa
 3144 0144 EB000000 		.4byte	.LASF33
 3145 0148 0C       		.byte	0xc
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccApaELb.s 			page 115


 3146 0149 0A       		.uleb128 0xa
 3147 014a 5F080000 		.4byte	.LASF34
 3148 014e 0D       		.byte	0xd
 3149 014f 0A       		.uleb128 0xa
 3150 0150 6A040000 		.4byte	.LASF35
 3151 0154 0E       		.byte	0xe
 3152 0155 0A       		.uleb128 0xa
 3153 0156 D00B0000 		.4byte	.LASF36
 3154 015a 0F       		.byte	0xf
 3155 015b 0A       		.uleb128 0xa
 3156 015c A0040000 		.4byte	.LASF37
 3157 0160 10       		.byte	0x10
 3158 0161 0A       		.uleb128 0xa
 3159 0162 E0050000 		.4byte	.LASF38
 3160 0166 11       		.byte	0x11
 3161 0167 0A       		.uleb128 0xa
 3162 0168 D0000000 		.4byte	.LASF39
 3163 016c 12       		.byte	0x12
 3164 016d 0A       		.uleb128 0xa
 3165 016e 3C080000 		.4byte	.LASF40
 3166 0172 13       		.byte	0x13
 3167 0173 0A       		.uleb128 0xa
 3168 0174 30040000 		.4byte	.LASF41
 3169 0178 14       		.byte	0x14
 3170 0179 0A       		.uleb128 0xa
 3171 017a BF0B0000 		.4byte	.LASF42
 3172 017e 15       		.byte	0x15
 3173 017f 0A       		.uleb128 0xa
 3174 0180 DE060000 		.4byte	.LASF43
 3175 0184 16       		.byte	0x16
 3176 0185 0A       		.uleb128 0xa
 3177 0186 66030000 		.4byte	.LASF44
 3178 018a 17       		.byte	0x17
 3179 018b 0A       		.uleb128 0xa
 3180 018c 7D040000 		.4byte	.LASF45
 3181 0190 1C       		.byte	0x1c
 3182 0191 0A       		.uleb128 0xa
 3183 0192 C0060000 		.4byte	.LASF46
 3184 0196 1D       		.byte	0x1d
 3185 0197 00       		.byte	0
 3186 0198 02       		.uleb128 0x2
 3187 0199 5B030000 		.4byte	.LASF47
 3188 019d 05       		.byte	0x5
 3189 019e 39       		.byte	0x39
 3190 019f 7E000000 		.4byte	0x7e
 3191 01a3 02       		.uleb128 0x2
 3192 01a4 4A0C0000 		.4byte	.LASF48
 3193 01a8 05       		.byte	0x5
 3194 01a9 3A       		.byte	0x3a
 3195 01aa 90000000 		.4byte	0x90
 3196 01ae 02       		.uleb128 0x2
 3197 01af 3E030000 		.4byte	.LASF49
 3198 01b3 05       		.byte	0x5
 3199 01b4 40       		.byte	0x40
 3200 01b5 D6000000 		.4byte	0xd6
 3201 01b9 06       		.uleb128 0x6
 3202 01ba 04       		.byte	0x4
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccApaELb.s 			page 116


 3203 01bb CB000000 		.4byte	0xcb
 3204 01bf 0B       		.uleb128 0xb
 3205 01c0 900A0000 		.4byte	.LASF56
 3206 01c4 14       		.byte	0x14
 3207 01c5 06       		.byte	0x6
 3208 01c6 8C       		.byte	0x8c
 3209 01c7 08020000 		.4byte	0x208
 3210 01cb 0C       		.uleb128 0xc
 3211 01cc 390B0000 		.4byte	.LASF50
 3212 01d0 06       		.byte	0x6
 3213 01d1 8F       		.byte	0x8f
 3214 01d2 AE010000 		.4byte	0x1ae
 3215 01d6 00       		.byte	0
 3216 01d7 0C       		.uleb128 0xc
 3217 01d8 A80B0000 		.4byte	.LASF51
 3218 01dc 06       		.byte	0x6
 3219 01dd 90       		.byte	0x90
 3220 01de 08020000 		.4byte	0x208
 3221 01e2 04       		.byte	0x4
 3222 01e3 0C       		.uleb128 0xc
 3223 01e4 42070000 		.4byte	.LASF52
 3224 01e8 06       		.byte	0x6
 3225 01e9 91       		.byte	0x91
 3226 01ea 08020000 		.4byte	0x208
 3227 01ee 08       		.byte	0x8
 3228 01ef 0C       		.uleb128 0xc
 3229 01f0 1D0B0000 		.4byte	.LASF53
 3230 01f4 06       		.byte	0x6
 3231 01f5 92       		.byte	0x92
 3232 01f6 A5000000 		.4byte	0xa5
 3233 01fa 0C       		.byte	0xc
 3234 01fb 0C       		.uleb128 0xc
 3235 01fc 9A070000 		.4byte	.LASF54
 3236 0200 06       		.byte	0x6
 3237 0201 93       		.byte	0x93
 3238 0202 A5000000 		.4byte	0xa5
 3239 0206 10       		.byte	0x10
 3240 0207 00       		.byte	0
 3241 0208 06       		.uleb128 0x6
 3242 0209 04       		.byte	0x4
 3243 020a BF010000 		.4byte	0x1bf
 3244 020e 02       		.uleb128 0x2
 3245 020f 06070000 		.4byte	.LASF55
 3246 0213 06       		.byte	0x6
 3247 0214 96       		.byte	0x96
 3248 0215 BF010000 		.4byte	0x1bf
 3249 0219 0B       		.uleb128 0xb
 3250 021a 27020000 		.4byte	.LASF57
 3251 021e 0C       		.byte	0xc
 3252 021f 06       		.byte	0x6
 3253 0220 98       		.byte	0x98
 3254 0221 4A020000 		.4byte	0x24a
 3255 0225 0C       		.uleb128 0xc
 3256 0226 390B0000 		.4byte	.LASF50
 3257 022a 06       		.byte	0x6
 3258 022b 9B       		.byte	0x9b
 3259 022c AE010000 		.4byte	0x1ae
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccApaELb.s 			page 117


 3260 0230 00       		.byte	0
 3261 0231 0C       		.uleb128 0xc
 3262 0232 A80B0000 		.4byte	.LASF51
 3263 0236 06       		.byte	0x6
 3264 0237 9C       		.byte	0x9c
 3265 0238 08020000 		.4byte	0x208
 3266 023c 04       		.byte	0x4
 3267 023d 0C       		.uleb128 0xc
 3268 023e 42070000 		.4byte	.LASF52
 3269 0242 06       		.byte	0x6
 3270 0243 9D       		.byte	0x9d
 3271 0244 08020000 		.4byte	0x208
 3272 0248 08       		.byte	0x8
 3273 0249 00       		.byte	0
 3274 024a 02       		.uleb128 0x2
 3275 024b 6F000000 		.4byte	.LASF58
 3276 024f 06       		.byte	0x6
 3277 0250 9F       		.byte	0x9f
 3278 0251 19020000 		.4byte	0x219
 3279 0255 0B       		.uleb128 0xb
 3280 0256 AE080000 		.4byte	.LASF59
 3281 025a 14       		.byte	0x14
 3282 025b 06       		.byte	0x6
 3283 025c A4       		.byte	0xa4
 3284 025d 86020000 		.4byte	0x286
 3285 0261 0C       		.uleb128 0xc
 3286 0262 E1040000 		.4byte	.LASF60
 3287 0266 06       		.byte	0x6
 3288 0267 A7       		.byte	0xa7
 3289 0268 86020000 		.4byte	0x286
 3290 026c 00       		.byte	0
 3291 026d 0C       		.uleb128 0xc
 3292 026e 92070000 		.4byte	.LASF61
 3293 0272 06       		.byte	0x6
 3294 0273 A8       		.byte	0xa8
 3295 0274 8B020000 		.4byte	0x28b
 3296 0278 04       		.byte	0x4
 3297 0279 0C       		.uleb128 0xc
 3298 027a 35030000 		.4byte	.LASF62
 3299 027e 06       		.byte	0x6
 3300 027f A9       		.byte	0xa9
 3301 0280 4A020000 		.4byte	0x24a
 3302 0284 08       		.byte	0x8
 3303 0285 00       		.byte	0
 3304 0286 0D       		.uleb128 0xd
 3305 0287 A3010000 		.4byte	0x1a3
 3306 028b 06       		.uleb128 0x6
 3307 028c 04       		.byte	0x4
 3308 028d 0E020000 		.4byte	0x20e
 3309 0291 02       		.uleb128 0x2
 3310 0292 DE080000 		.4byte	.LASF63
 3311 0296 06       		.byte	0x6
 3312 0297 AB       		.byte	0xab
 3313 0298 55020000 		.4byte	0x255
 3314 029c 0B       		.uleb128 0xb
 3315 029d 1D020000 		.4byte	.LASF64
 3316 02a1 08       		.byte	0x8
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccApaELb.s 			page 118


 3317 02a2 07       		.byte	0x7
 3318 02a3 5E       		.byte	0x5e
 3319 02a4 C1020000 		.4byte	0x2c1
 3320 02a8 0C       		.uleb128 0xc
 3321 02a9 14040000 		.4byte	.LASF65
 3322 02ad 07       		.byte	0x7
 3323 02ae 60       		.byte	0x60
 3324 02af 98010000 		.4byte	0x198
 3325 02b3 00       		.byte	0
 3326 02b4 0C       		.uleb128 0xc
 3327 02b5 D1040000 		.4byte	.LASF66
 3328 02b9 07       		.byte	0x7
 3329 02ba 61       		.byte	0x61
 3330 02bb AE010000 		.4byte	0x1ae
 3331 02bf 04       		.byte	0x4
 3332 02c0 00       		.byte	0
 3333 02c1 02       		.uleb128 0x2
 3334 02c2 7E000000 		.4byte	.LASF67
 3335 02c6 07       		.byte	0x7
 3336 02c7 62       		.byte	0x62
 3337 02c8 9C020000 		.4byte	0x29c
 3338 02cc 02       		.uleb128 0x2
 3339 02cd 0F020000 		.4byte	.LASF68
 3340 02d1 08       		.byte	0x8
 3341 02d2 2F       		.byte	0x2f
 3342 02d3 A5000000 		.4byte	0xa5
 3343 02d7 02       		.uleb128 0x2
 3344 02d8 E0070000 		.4byte	.LASF69
 3345 02dc 08       		.byte	0x8
 3346 02dd 36       		.byte	0x36
 3347 02de A5000000 		.4byte	0xa5
 3348 02e2 02       		.uleb128 0x2
 3349 02e3 8D020000 		.4byte	.LASF70
 3350 02e7 08       		.byte	0x8
 3351 02e8 3D       		.byte	0x3d
 3352 02e9 A5000000 		.4byte	0xa5
 3353 02ed 0E       		.uleb128 0xe
 3354 02ee 04       		.byte	0x4
 3355 02ef 01       		.byte	0x1
 3356 02f0 5F       		.byte	0x5f
 3357 02f1 0C030000 		.4byte	0x30c
 3358 02f5 0F       		.uleb128 0xf
 3359 02f6 50030000 		.4byte	.LASF71
 3360 02fa 01       		.byte	0x1
 3361 02fb 61       		.byte	0x61
 3362 02fc 0C030000 		.4byte	0x30c
 3363 0300 0F       		.uleb128 0xf
 3364 0301 15080000 		.4byte	.LASF72
 3365 0305 01       		.byte	0x1
 3366 0306 62       		.byte	0x62
 3367 0307 A3010000 		.4byte	0x1a3
 3368 030b 00       		.byte	0
 3369 030c 06       		.uleb128 0x6
 3370 030d 04       		.byte	0x4
 3371 030e C0000000 		.4byte	0xc0
 3372 0312 0B       		.uleb128 0xb
 3373 0313 560B0000 		.4byte	.LASF73
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccApaELb.s 			page 119


 3374 0317 4C       		.byte	0x4c
 3375 0318 01       		.byte	0x1
 3376 0319 59       		.byte	0x59
 3377 031a AD030000 		.4byte	0x3ad
 3378 031e 0C       		.uleb128 0xc
 3379 031f 99040000 		.4byte	.LASF74
 3380 0323 01       		.byte	0x1
 3381 0324 5B       		.byte	0x5b
 3382 0325 0C030000 		.4byte	0x30c
 3383 0329 00       		.byte	0
 3384 032a 0C       		.uleb128 0xc
 3385 032b 340A0000 		.4byte	.LASF75
 3386 032f 01       		.byte	0x1
 3387 0330 5C       		.byte	0x5c
 3388 0331 0C030000 		.4byte	0x30c
 3389 0335 04       		.byte	0x4
 3390 0336 0C       		.uleb128 0xc
 3391 0337 6E0B0000 		.4byte	.LASF76
 3392 033b 01       		.byte	0x1
 3393 033c 5D       		.byte	0x5d
 3394 033d 0C030000 		.4byte	0x30c
 3395 0341 08       		.byte	0x8
 3396 0342 10       		.uleb128 0x10
 3397 0343 7500     		.ascii	"u\000"
 3398 0345 01       		.byte	0x1
 3399 0346 63       		.byte	0x63
 3400 0347 ED020000 		.4byte	0x2ed
 3401 034b 0C       		.byte	0xc
 3402 034c 0C       		.uleb128 0xc
 3403 034d 250B0000 		.4byte	.LASF77
 3404 0351 01       		.byte	0x1
 3405 0352 65       		.byte	0x65
 3406 0353 91020000 		.4byte	0x291
 3407 0357 10       		.byte	0x10
 3408 0358 0C       		.uleb128 0xc
 3409 0359 EF060000 		.4byte	.LASF78
 3410 035d 01       		.byte	0x1
 3411 035e 66       		.byte	0x66
 3412 035f 91020000 		.4byte	0x291
 3413 0363 24       		.byte	0x24
 3414 0364 0C       		.uleb128 0xc
 3415 0365 72090000 		.4byte	.LASF79
 3416 0369 01       		.byte	0x1
 3417 036a 68       		.byte	0x68
 3418 036b 86020000 		.4byte	0x286
 3419 036f 38       		.byte	0x38
 3420 0370 0C       		.uleb128 0xc
 3421 0371 9E010000 		.4byte	.LASF80
 3422 0375 01       		.byte	0x1
 3423 0376 69       		.byte	0x69
 3424 0377 A3010000 		.4byte	0x1a3
 3425 037b 3C       		.byte	0x3c
 3426 037c 0C       		.uleb128 0xc
 3427 037d 9D0B0000 		.4byte	.LASF81
 3428 0381 01       		.byte	0x1
 3429 0382 6A       		.byte	0x6a
 3430 0383 A3010000 		.4byte	0x1a3
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccApaELb.s 			page 120


 3431 0387 40       		.byte	0x40
 3432 0388 0C       		.uleb128 0xc
 3433 0389 34080000 		.4byte	.LASF82
 3434 038d 01       		.byte	0x1
 3435 038e 6C       		.byte	0x6c
 3436 038f AD030000 		.4byte	0x3ad
 3437 0393 44       		.byte	0x44
 3438 0394 0C       		.uleb128 0xc
 3439 0395 26030000 		.4byte	.LASF83
 3440 0399 01       		.byte	0x1
 3441 039a 6D       		.byte	0x6d
 3442 039b AD030000 		.4byte	0x3ad
 3443 039f 45       		.byte	0x45
 3444 03a0 0C       		.uleb128 0xc
 3445 03a1 E7020000 		.4byte	.LASF84
 3446 03a5 01       		.byte	0x1
 3447 03a6 74       		.byte	0x74
 3448 03a7 B2030000 		.4byte	0x3b2
 3449 03ab 48       		.byte	0x48
 3450 03ac 00       		.byte	0
 3451 03ad 0D       		.uleb128 0xd
 3452 03ae C0000000 		.4byte	0xc0
 3453 03b2 06       		.uleb128 0x6
 3454 03b3 04       		.byte	0x4
 3455 03b4 12030000 		.4byte	0x312
 3456 03b8 02       		.uleb128 0x2
 3457 03b9 8B070000 		.4byte	.LASF85
 3458 03bd 01       		.byte	0x1
 3459 03be 7C       		.byte	0x7c
 3460 03bf 12030000 		.4byte	0x312
 3461 03c3 02       		.uleb128 0x2
 3462 03c4 B8060000 		.4byte	.LASF86
 3463 03c8 01       		.byte	0x1
 3464 03c9 80       		.byte	0x80
 3465 03ca B8030000 		.4byte	0x3b8
 3466 03ce 0B       		.uleb128 0xb
 3467 03cf FB010000 		.4byte	.LASF87
 3468 03d3 08       		.byte	0x8
 3469 03d4 01       		.byte	0x1
 3470 03d5 8D       		.byte	0x8d
 3471 03d6 F3030000 		.4byte	0x3f3
 3472 03da 0C       		.uleb128 0xc
 3473 03db FC090000 		.4byte	.LASF88
 3474 03df 01       		.byte	0x1
 3475 03e0 8F       		.byte	0x8f
 3476 03e1 AE000000 		.4byte	0xae
 3477 03e5 00       		.byte	0
 3478 03e6 0C       		.uleb128 0xc
 3479 03e7 A6070000 		.4byte	.LASF89
 3480 03eb 01       		.byte	0x1
 3481 03ec 90       		.byte	0x90
 3482 03ed CC020000 		.4byte	0x2cc
 3483 03f1 04       		.byte	0x4
 3484 03f2 00       		.byte	0
 3485 03f3 02       		.uleb128 0x2
 3486 03f4 CD050000 		.4byte	.LASF90
 3487 03f8 01       		.byte	0x1
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccApaELb.s 			page 121


 3488 03f9 91       		.byte	0x91
 3489 03fa CE030000 		.4byte	0x3ce
 3490 03fe 02       		.uleb128 0x2
 3491 03ff 88000000 		.4byte	.LASF91
 3492 0403 01       		.byte	0x1
 3493 0404 96       		.byte	0x96
 3494 0405 F3030000 		.4byte	0x3f3
 3495 0409 11       		.uleb128 0x11
 3496 040a 780B0000 		.4byte	.LASF92
 3497 040e 01       		.byte	0x1
 3498 040f E007     		.2byte	0x7e0
 3499 0411 A3010000 		.4byte	0x1a3
 3500 0415 00000000 		.4byte	.LFB52
 3501 0419 14000000 		.4byte	.LFE52-.LFB52
 3502 041d 01       		.uleb128 0x1
 3503 041e 9C       		.byte	0x9c
 3504 041f 44040000 		.4byte	0x444
 3505 0423 12       		.uleb128 0x12
 3506 0424 8D090000 		.4byte	.LASF94
 3507 0428 01       		.byte	0x1
 3508 0429 E007     		.2byte	0x7e0
 3509 042b 4F040000 		.4byte	0x44f
 3510 042f 00000000 		.4byte	.LLST0
 3511 0433 13       		.uleb128 0x13
 3512 0434 4D070000 		.4byte	.LASF95
 3513 0438 01       		.byte	0x1
 3514 0439 E207     		.2byte	0x7e2
 3515 043b A3010000 		.4byte	0x1a3
 3516 043f 3A000000 		.4byte	.LLST1
 3517 0443 00       		.byte	0
 3518 0444 06       		.uleb128 0x6
 3519 0445 04       		.byte	0x4
 3520 0446 4A040000 		.4byte	0x44a
 3521 044a 07       		.uleb128 0x7
 3522 044b C3030000 		.4byte	0x3c3
 3523 044f 07       		.uleb128 0x7
 3524 0450 44040000 		.4byte	0x444
 3525 0454 11       		.uleb128 0x11
 3526 0455 4A090000 		.4byte	.LASF93
 3527 0459 01       		.byte	0x1
 3528 045a F908     		.2byte	0x8f9
 3529 045c 98010000 		.4byte	0x198
 3530 0460 00000000 		.4byte	.LFB58
 3531 0464 1E000000 		.4byte	.LFE58-.LFB58
 3532 0468 01       		.uleb128 0x1
 3533 0469 9C       		.byte	0x9c
 3534 046a A1040000 		.4byte	0x4a1
 3535 046e 12       		.uleb128 0x12
 3536 046f 8D090000 		.4byte	.LASF94
 3537 0473 01       		.byte	0x1
 3538 0474 F908     		.2byte	0x8f9
 3539 0476 44040000 		.4byte	0x444
 3540 047a 58000000 		.4byte	.LLST2
 3541 047e 13       		.uleb128 0x13
 3542 047f C9040000 		.4byte	.LASF96
 3543 0483 01       		.byte	0x1
 3544 0484 FB08     		.2byte	0x8fb
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccApaELb.s 			page 122


 3545 0486 98010000 		.4byte	0x198
 3546 048a 9D000000 		.4byte	.LLST3
 3547 048e 14       		.uleb128 0x14
 3548 048f 08000000 		.4byte	.LVL6
 3549 0493 1D1B0000 		.4byte	0x1b1d
 3550 0497 14       		.uleb128 0x14
 3551 0498 1A000000 		.4byte	.LVL10
 3552 049c 281B0000 		.4byte	0x1b28
 3553 04a0 00       		.byte	0
 3554 04a1 11       		.uleb128 0x11
 3555 04a2 03050000 		.4byte	.LASF97
 3556 04a6 01       		.byte	0x1
 3557 04a7 D208     		.2byte	0x8d2
 3558 04a9 98010000 		.4byte	0x198
 3559 04ad 00000000 		.4byte	.LFB56
 3560 04b1 1C000000 		.4byte	.LFE56-.LFB56
 3561 04b5 01       		.uleb128 0x1
 3562 04b6 9C       		.byte	0x9c
 3563 04b7 EE040000 		.4byte	0x4ee
 3564 04bb 12       		.uleb128 0x12
 3565 04bc 8D090000 		.4byte	.LASF94
 3566 04c0 01       		.byte	0x1
 3567 04c1 D208     		.2byte	0x8d2
 3568 04c3 44040000 		.4byte	0x444
 3569 04c7 BB000000 		.4byte	.LLST4
 3570 04cb 13       		.uleb128 0x13
 3571 04cc C9040000 		.4byte	.LASF96
 3572 04d0 01       		.byte	0x1
 3573 04d1 D408     		.2byte	0x8d4
 3574 04d3 98010000 		.4byte	0x198
 3575 04d7 00010000 		.4byte	.LLST5
 3576 04db 14       		.uleb128 0x14
 3577 04dc 08000000 		.4byte	.LVL13
 3578 04e0 1D1B0000 		.4byte	0x1b1d
 3579 04e4 14       		.uleb128 0x14
 3580 04e5 18000000 		.4byte	.LVL17
 3581 04e9 281B0000 		.4byte	0x1b28
 3582 04ed 00       		.byte	0
 3583 04ee 11       		.uleb128 0x11
 3584 04ef E8010000 		.4byte	.LASF98
 3585 04f3 01       		.byte	0x1
 3586 04f4 F907     		.2byte	0x7f9
 3587 04f6 98010000 		.4byte	0x198
 3588 04fa 00000000 		.4byte	.LFB53
 3589 04fe 82000000 		.4byte	.LFE53-.LFB53
 3590 0502 01       		.uleb128 0x1
 3591 0503 9C       		.byte	0x9c
 3592 0504 74050000 		.4byte	0x574
 3593 0508 12       		.uleb128 0x12
 3594 0509 8D090000 		.4byte	.LASF94
 3595 050d 01       		.byte	0x1
 3596 050e F907     		.2byte	0x7f9
 3597 0510 7A050000 		.4byte	0x57a
 3598 0514 1E010000 		.4byte	.LLST6
 3599 0518 12       		.uleb128 0x12
 3600 0519 77070000 		.4byte	.LASF99
 3601 051d 01       		.byte	0x1
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccApaELb.s 			page 123


 3602 051e F907     		.2byte	0x7f9
 3603 0520 B9000000 		.4byte	0xb9
 3604 0524 8C010000 		.4byte	.LLST7
 3605 0528 12       		.uleb128 0x12
 3606 0529 CC0A0000 		.4byte	.LASF100
 3607 052d 01       		.byte	0x1
 3608 052e F907     		.2byte	0x7f9
 3609 0530 7F050000 		.4byte	0x57f
 3610 0534 F8010000 		.4byte	.LLST8
 3611 0538 13       		.uleb128 0x13
 3612 0539 C9040000 		.4byte	.LASF96
 3613 053d 01       		.byte	0x1
 3614 053e FB07     		.2byte	0x7fb
 3615 0540 98010000 		.4byte	0x198
 3616 0544 24020000 		.4byte	.LLST9
 3617 0548 13       		.uleb128 0x13
 3618 0549 72090000 		.4byte	.LASF79
 3619 054d 01       		.byte	0x1
 3620 054e FC07     		.2byte	0x7fc
 3621 0550 A3010000 		.4byte	0x1a3
 3622 0554 5A020000 		.4byte	.LLST10
 3623 0558 14       		.uleb128 0x14
 3624 0559 1A000000 		.4byte	.LVL24
 3625 055d 331B0000 		.4byte	0x1b33
 3626 0561 14       		.uleb128 0x14
 3627 0562 2A000000 		.4byte	.LVL27
 3628 0566 3F1B0000 		.4byte	0x1b3f
 3629 056a 14       		.uleb128 0x14
 3630 056b 48000000 		.4byte	.LVL30
 3631 056f 3F1B0000 		.4byte	0x1b3f
 3632 0573 00       		.byte	0
 3633 0574 06       		.uleb128 0x6
 3634 0575 04       		.byte	0x4
 3635 0576 C3030000 		.4byte	0x3c3
 3636 057a 07       		.uleb128 0x7
 3637 057b 74050000 		.4byte	0x574
 3638 057f 07       		.uleb128 0x7
 3639 0580 98010000 		.4byte	0x198
 3640 0584 11       		.uleb128 0x11
 3641 0585 750A0000 		.4byte	.LASF101
 3642 0589 01       		.byte	0x1
 3643 058a 1F0B     		.2byte	0xb1f
 3644 058c 98010000 		.4byte	0x198
 3645 0590 00000000 		.4byte	.LFB68
 3646 0594 50000000 		.4byte	.LFE68-.LFB68
 3647 0598 01       		.uleb128 0x1
 3648 0599 9C       		.byte	0x9c
 3649 059a 26060000 		.4byte	0x626
 3650 059e 12       		.uleb128 0x12
 3651 059f 8D090000 		.4byte	.LASF94
 3652 05a3 01       		.byte	0x1
 3653 05a4 1F0B     		.2byte	0xb1f
 3654 05a6 4F040000 		.4byte	0x44f
 3655 05aa 8D020000 		.4byte	.LLST11
 3656 05ae 12       		.uleb128 0x12
 3657 05af D0090000 		.4byte	.LASF102
 3658 05b3 01       		.byte	0x1
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccApaELb.s 			page 124


 3659 05b4 1F0B     		.2byte	0xb1f
 3660 05b6 7F050000 		.4byte	0x57f
 3661 05ba CF020000 		.4byte	.LLST12
 3662 05be 13       		.uleb128 0x13
 3663 05bf E7020000 		.4byte	.LASF84
 3664 05c3 01       		.byte	0x1
 3665 05c4 210B     		.2byte	0xb21
 3666 05c6 74050000 		.4byte	0x574
 3667 05ca 14030000 		.4byte	.LLST13
 3668 05ce 13       		.uleb128 0x13
 3669 05cf C9040000 		.4byte	.LASF96
 3670 05d3 01       		.byte	0x1
 3671 05d4 220B     		.2byte	0xb22
 3672 05d6 98010000 		.4byte	0x198
 3673 05da 27030000 		.4byte	.LLST14
 3674 05de 15       		.uleb128 0x15
 3675 05df 00000000 		.4byte	.Ldebug_ranges0+0
 3676 05e3 13       		.uleb128 0x13
 3677 05e4 26030000 		.4byte	.LASF83
 3678 05e8 01       		.byte	0x1
 3679 05e9 2B0B     		.2byte	0xb2b
 3680 05eb 26060000 		.4byte	0x626
 3681 05ef 7E030000 		.4byte	.LLST15
 3682 05f3 16       		.uleb128 0x16
 3683 05f4 20000000 		.4byte	.LVL45
 3684 05f8 EE040000 		.4byte	0x4ee
 3685 05fc 14060000 		.4byte	0x614
 3686 0600 17       		.uleb128 0x17
 3687 0601 01       		.uleb128 0x1
 3688 0602 50       		.byte	0x50
 3689 0603 02       		.uleb128 0x2
 3690 0604 74       		.byte	0x74
 3691 0605 00       		.sleb128 0
 3692 0606 17       		.uleb128 0x17
 3693 0607 01       		.uleb128 0x1
 3694 0608 51       		.byte	0x51
 3695 0609 02       		.uleb128 0x2
 3696 060a 91       		.byte	0x91
 3697 060b 6C       		.sleb128 -20
 3698 060c 17       		.uleb128 0x17
 3699 060d 01       		.uleb128 0x1
 3700 060e 52       		.byte	0x52
 3701 060f 03       		.uleb128 0x3
 3702 0610 F3       		.byte	0xf3
 3703 0611 01       		.uleb128 0x1
 3704 0612 51       		.byte	0x51
 3705 0613 00       		.byte	0
 3706 0614 18       		.uleb128 0x18
 3707 0615 34000000 		.4byte	.LVL48
 3708 0619 481B0000 		.4byte	0x1b48
 3709 061d 17       		.uleb128 0x17
 3710 061e 01       		.uleb128 0x1
 3711 061f 50       		.byte	0x50
 3712 0620 02       		.uleb128 0x2
 3713 0621 74       		.byte	0x74
 3714 0622 24       		.sleb128 36
 3715 0623 00       		.byte	0
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccApaELb.s 			page 125


 3716 0624 00       		.byte	0
 3717 0625 00       		.byte	0
 3718 0626 07       		.uleb128 0x7
 3719 0627 C0000000 		.4byte	0xc0
 3720 062b 19       		.uleb128 0x19
 3721 062c A7010000 		.4byte	.LASF104
 3722 0630 01       		.byte	0x1
 3723 0631 4808     		.2byte	0x848
 3724 0633 00000000 		.4byte	.LFB54
 3725 0637 24000000 		.4byte	.LFE54-.LFB54
 3726 063b 01       		.uleb128 0x1
 3727 063c 9C       		.byte	0x9c
 3728 063d 72060000 		.4byte	0x672
 3729 0641 12       		.uleb128 0x12
 3730 0642 8D090000 		.4byte	.LASF94
 3731 0646 01       		.byte	0x1
 3732 0647 4808     		.2byte	0x848
 3733 0649 7A050000 		.4byte	0x57a
 3734 064d A9030000 		.4byte	.LLST16
 3735 0651 12       		.uleb128 0x12
 3736 0652 84090000 		.4byte	.LASF103
 3737 0656 01       		.byte	0x1
 3738 0657 4808     		.2byte	0x848
 3739 0659 72060000 		.4byte	0x672
 3740 065d CA030000 		.4byte	.LLST17
 3741 0661 18       		.uleb128 0x18
 3742 0662 22000000 		.4byte	.LVL60
 3743 0666 3F1B0000 		.4byte	0x1b3f
 3744 066a 17       		.uleb128 0x17
 3745 066b 01       		.uleb128 0x1
 3746 066c 50       		.byte	0x50
 3747 066d 02       		.uleb128 0x2
 3748 066e 74       		.byte	0x74
 3749 066f 00       		.sleb128 0
 3750 0670 00       		.byte	0
 3751 0671 00       		.byte	0
 3752 0672 07       		.uleb128 0x7
 3753 0673 A5000000 		.4byte	0xa5
 3754 0677 19       		.uleb128 0x19
 3755 0678 080A0000 		.4byte	.LASF105
 3756 067c 01       		.byte	0x1
 3757 067d 5A08     		.2byte	0x85a
 3758 067f 00000000 		.4byte	.LFB55
 3759 0683 86000000 		.4byte	.LFE55-.LFB55
 3760 0687 01       		.uleb128 0x1
 3761 0688 9C       		.byte	0x9c
 3762 0689 5A070000 		.4byte	0x75a
 3763 068d 12       		.uleb128 0x12
 3764 068e 8D090000 		.4byte	.LASF94
 3765 0692 01       		.byte	0x1
 3766 0693 5A08     		.2byte	0x85a
 3767 0695 7A050000 		.4byte	0x57a
 3768 0699 F6030000 		.4byte	.LLST18
 3769 069d 1A       		.uleb128 0x1a
 3770 069e 08000000 		.4byte	.LBB4
 3771 06a2 44000000 		.4byte	.LBE4-.LBB4
 3772 06a6 FA060000 		.4byte	0x6fa
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccApaELb.s 			page 126


 3773 06aa 13       		.uleb128 0x13
 3774 06ab 26030000 		.4byte	.LASF83
 3775 06af 01       		.byte	0x1
 3776 06b0 6408     		.2byte	0x864
 3777 06b2 C0000000 		.4byte	0xc0
 3778 06b6 22040000 		.4byte	.LLST19
 3779 06ba 16       		.uleb128 0x16
 3780 06bb 1E000000 		.4byte	.LVL65
 3781 06bf 84050000 		.4byte	0x584
 3782 06c3 D3060000 		.4byte	0x6d3
 3783 06c7 17       		.uleb128 0x17
 3784 06c8 01       		.uleb128 0x1
 3785 06c9 50       		.byte	0x50
 3786 06ca 02       		.uleb128 0x2
 3787 06cb 75       		.byte	0x75
 3788 06cc 00       		.sleb128 0
 3789 06cd 17       		.uleb128 0x17
 3790 06ce 01       		.uleb128 0x1
 3791 06cf 51       		.byte	0x51
 3792 06d0 01       		.uleb128 0x1
 3793 06d1 30       		.byte	0x30
 3794 06d2 00       		.byte	0
 3795 06d3 14       		.uleb128 0x14
 3796 06d4 26000000 		.4byte	.LVL66
 3797 06d8 541B0000 		.4byte	0x1b54
 3798 06dc 16       		.uleb128 0x16
 3799 06dd 36000000 		.4byte	.LVL67
 3800 06e1 481B0000 		.4byte	0x1b48
 3801 06e5 F0060000 		.4byte	0x6f0
 3802 06e9 17       		.uleb128 0x17
 3803 06ea 01       		.uleb128 0x1
 3804 06eb 50       		.byte	0x50
 3805 06ec 02       		.uleb128 0x2
 3806 06ed 75       		.byte	0x75
 3807 06ee 24       		.sleb128 36
 3808 06ef 00       		.byte	0
 3809 06f0 14       		.uleb128 0x14
 3810 06f1 3E000000 		.4byte	.LVL68
 3811 06f5 541B0000 		.4byte	0x1b54
 3812 06f9 00       		.byte	0
 3813 06fa 1A       		.uleb128 0x1a
 3814 06fb 54000000 		.4byte	.LBB5
 3815 06ff 2C000000 		.4byte	.LBE5-.LBB5
 3816 0703 35070000 		.4byte	0x735
 3817 0707 13       		.uleb128 0x13
 3818 0708 34080000 		.4byte	.LASF82
 3819 070c 01       		.byte	0x1
 3820 070d B508     		.2byte	0x8b5
 3821 070f C0000000 		.4byte	0xc0
 3822 0713 40040000 		.4byte	.LLST20
 3823 0717 16       		.uleb128 0x16
 3824 0718 6A000000 		.4byte	.LVL75
 3825 071c 481B0000 		.4byte	0x1b48
 3826 0720 2B070000 		.4byte	0x72b
 3827 0724 17       		.uleb128 0x17
 3828 0725 01       		.uleb128 0x1
 3829 0726 50       		.byte	0x50
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccApaELb.s 			page 127


 3830 0727 02       		.uleb128 0x2
 3831 0728 75       		.byte	0x75
 3832 0729 10       		.sleb128 16
 3833 072a 00       		.byte	0
 3834 072b 14       		.uleb128 0x14
 3835 072c 72000000 		.4byte	.LVL76
 3836 0730 541B0000 		.4byte	0x1b54
 3837 0734 00       		.byte	0
 3838 0735 14       		.uleb128 0x14
 3839 0736 08000000 		.4byte	.LVL63
 3840 073a 1D1B0000 		.4byte	0x1b1d
 3841 073e 14       		.uleb128 0x14
 3842 073f 50000000 		.4byte	.LVL71
 3843 0743 281B0000 		.4byte	0x1b28
 3844 0747 14       		.uleb128 0x14
 3845 0748 54000000 		.4byte	.LVL72
 3846 074c 1D1B0000 		.4byte	0x1b1d
 3847 0750 14       		.uleb128 0x14
 3848 0751 84000000 		.4byte	.LVL79
 3849 0755 281B0000 		.4byte	0x1b28
 3850 0759 00       		.byte	0
 3851 075a 1B       		.uleb128 0x1b
 3852 075b 95090000 		.4byte	.LASF113
 3853 075f 01       		.byte	0x1
 3854 0760 F8       		.byte	0xf8
 3855 0761 98010000 		.4byte	0x198
 3856 0765 00000000 		.4byte	.LFB32
 3857 0769 64000000 		.4byte	.LFE32-.LFB32
 3858 076d 01       		.uleb128 0x1
 3859 076e 9C       		.byte	0x9c
 3860 076f F8070000 		.4byte	0x7f8
 3861 0773 1C       		.uleb128 0x1c
 3862 0774 11070000 		.4byte	.LASF106
 3863 0778 01       		.byte	0x1
 3864 0779 F8       		.byte	0xf8
 3865 077a CC020000 		.4byte	0x2cc
 3866 077e 5E040000 		.4byte	.LLST21
 3867 0782 1C       		.uleb128 0x1c
 3868 0783 DE010000 		.4byte	.LASF107
 3869 0787 01       		.byte	0x1
 3870 0788 F8       		.byte	0xf8
 3871 0789 98010000 		.4byte	0x198
 3872 078d 8A040000 		.4byte	.LLST22
 3873 0791 1D       		.uleb128 0x1d
 3874 0792 8D090000 		.4byte	.LASF94
 3875 0796 01       		.byte	0x1
 3876 0797 FA       		.byte	0xfa
 3877 0798 7A050000 		.4byte	0x57a
 3878 079c B6040000 		.4byte	.LLST23
 3879 07a0 14       		.uleb128 0x14
 3880 07a1 0A000000 		.4byte	.LVL84
 3881 07a5 1D1B0000 		.4byte	0x1b1d
 3882 07a9 16       		.uleb128 0x16
 3883 07aa 42000000 		.4byte	.LVL85
 3884 07ae 481B0000 		.4byte	0x1b48
 3885 07b2 BD070000 		.4byte	0x7bd
 3886 07b6 17       		.uleb128 0x17
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccApaELb.s 			page 128


 3887 07b7 01       		.uleb128 0x1
 3888 07b8 50       		.byte	0x50
 3889 07b9 02       		.uleb128 0x2
 3890 07ba 74       		.byte	0x74
 3891 07bb 10       		.sleb128 16
 3892 07bc 00       		.byte	0
 3893 07bd 14       		.uleb128 0x14
 3894 07be 4A000000 		.4byte	.LVL86
 3895 07c2 601B0000 		.4byte	0x1b60
 3896 07c6 16       		.uleb128 0x16
 3897 07c7 54000000 		.4byte	.LVL87
 3898 07cb 6B1B0000 		.4byte	0x1b6b
 3899 07cf DA070000 		.4byte	0x7da
 3900 07d3 17       		.uleb128 0x17
 3901 07d4 01       		.uleb128 0x1
 3902 07d5 50       		.byte	0x50
 3903 07d6 02       		.uleb128 0x2
 3904 07d7 74       		.byte	0x74
 3905 07d8 10       		.sleb128 16
 3906 07d9 00       		.byte	0
 3907 07da 16       		.uleb128 0x16
 3908 07db 5C000000 		.4byte	.LVL88
 3909 07df 6B1B0000 		.4byte	0x1b6b
 3910 07e3 EE070000 		.4byte	0x7ee
 3911 07e7 17       		.uleb128 0x17
 3912 07e8 01       		.uleb128 0x1
 3913 07e9 50       		.byte	0x50
 3914 07ea 02       		.uleb128 0x2
 3915 07eb 74       		.byte	0x74
 3916 07ec 24       		.sleb128 36
 3917 07ed 00       		.byte	0
 3918 07ee 14       		.uleb128 0x14
 3919 07ef 60000000 		.4byte	.LVL89
 3920 07f3 281B0000 		.4byte	0x1b28
 3921 07f7 00       		.byte	0
 3922 07f8 19       		.uleb128 0x19
 3923 07f9 D9030000 		.4byte	.LASF108
 3924 07fd 01       		.byte	0x1
 3925 07fe 9901     		.2byte	0x199
 3926 0800 00000000 		.4byte	.LFB34
 3927 0804 20000000 		.4byte	.LFE34-.LFB34
 3928 0808 01       		.uleb128 0x1
 3929 0809 9C       		.byte	0x9c
 3930 080a 73080000 		.4byte	0x873
 3931 080e 12       		.uleb128 0x12
 3932 080f D0060000 		.4byte	.LASF109
 3933 0813 01       		.byte	0x1
 3934 0814 9901     		.2byte	0x199
 3935 0816 73080000 		.4byte	0x873
 3936 081a E2040000 		.4byte	.LLST24
 3937 081e 12       		.uleb128 0x12
 3938 081f 9D0B0000 		.4byte	.LASF81
 3939 0823 01       		.byte	0x1
 3940 0824 9901     		.2byte	0x199
 3941 0826 73080000 		.4byte	0x873
 3942 082a 0F050000 		.4byte	.LLST25
 3943 082e 12       		.uleb128 0x12
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccApaELb.s 			page 129


 3944 082f 650A0000 		.4byte	.LASF110
 3945 0833 01       		.byte	0x1
 3946 0834 9901     		.2byte	0x199
 3947 0836 B9010000 		.4byte	0x1b9
 3948 083a 3D050000 		.4byte	.LLST26
 3949 083e 12       		.uleb128 0x12
 3950 083f 19000000 		.4byte	.LASF111
 3951 0843 01       		.byte	0x1
 3952 0844 9901     		.2byte	0x199
 3953 0846 78080000 		.4byte	0x878
 3954 084a 5E050000 		.4byte	.LLST27
 3955 084e 1E       		.uleb128 0x1e
 3956 084f BC010000 		.4byte	.LASF112
 3957 0853 01       		.byte	0x1
 3958 0854 9901     		.2byte	0x199
 3959 0856 74050000 		.4byte	0x574
 3960 085a 02       		.uleb128 0x2
 3961 085b 91       		.byte	0x91
 3962 085c 00       		.sleb128 0
 3963 085d 18       		.uleb128 0x18
 3964 085e 1A000000 		.4byte	.LVL95
 3965 0862 5A070000 		.4byte	0x75a
 3966 0866 17       		.uleb128 0x17
 3967 0867 01       		.uleb128 0x1
 3968 0868 50       		.byte	0x50
 3969 0869 02       		.uleb128 0x2
 3970 086a 74       		.byte	0x74
 3971 086b 00       		.sleb128 0
 3972 086c 17       		.uleb128 0x17
 3973 086d 01       		.uleb128 0x1
 3974 086e 51       		.byte	0x51
 3975 086f 01       		.uleb128 0x1
 3976 0870 31       		.byte	0x31
 3977 0871 00       		.byte	0
 3978 0872 00       		.byte	0
 3979 0873 07       		.uleb128 0x7
 3980 0874 A3010000 		.4byte	0x1a3
 3981 0878 07       		.uleb128 0x7
 3982 0879 CB000000 		.4byte	0xcb
 3983 087d 1F       		.uleb128 0x1f
 3984 087e 9A080000 		.4byte	.LASF114
 3985 0882 01       		.byte	0x1
 3986 0883 6701     		.2byte	0x167
 3987 0885 CC020000 		.4byte	0x2cc
 3988 0889 00000000 		.4byte	.LFB33
 3989 088d 34000000 		.4byte	.LFE33-.LFB33
 3990 0891 01       		.uleb128 0x1
 3991 0892 9C       		.byte	0x9c
 3992 0893 29090000 		.4byte	0x929
 3993 0897 12       		.uleb128 0x12
 3994 0898 D0060000 		.4byte	.LASF109
 3995 089c 01       		.byte	0x1
 3996 089d 6701     		.2byte	0x167
 3997 089f 73080000 		.4byte	0x873
 3998 08a3 7F050000 		.4byte	.LLST28
 3999 08a7 12       		.uleb128 0x12
 4000 08a8 9D0B0000 		.4byte	.LASF81
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccApaELb.s 			page 130


 4001 08ac 01       		.byte	0x1
 4002 08ad 6701     		.2byte	0x167
 4003 08af 73080000 		.4byte	0x873
 4004 08b3 C1050000 		.4byte	.LLST29
 4005 08b7 12       		.uleb128 0x12
 4006 08b8 19000000 		.4byte	.LASF111
 4007 08bc 01       		.byte	0x1
 4008 08bd 6701     		.2byte	0x167
 4009 08bf 78080000 		.4byte	0x878
 4010 08c3 ED050000 		.4byte	.LLST30
 4011 08c7 13       		.uleb128 0x13
 4012 08c8 BC010000 		.4byte	.LASF112
 4013 08cc 01       		.byte	0x1
 4014 08cd 6901     		.2byte	0x169
 4015 08cf 74050000 		.4byte	0x574
 4016 08d3 0E060000 		.4byte	.LLST31
 4017 08d7 13       		.uleb128 0x13
 4018 08d8 440B0000 		.4byte	.LASF115
 4019 08dc 01       		.byte	0x1
 4020 08dd 6A01     		.2byte	0x16a
 4021 08df 25000000 		.4byte	0x25
 4022 08e3 37060000 		.4byte	.LLST32
 4023 08e7 20       		.uleb128 0x20
 4024 08e8 650A0000 		.4byte	.LASF110
 4025 08ec 01       		.byte	0x1
 4026 08ed 6B01     		.2byte	0x16b
 4027 08ef B9010000 		.4byte	0x1b9
 4028 08f3 01       		.uleb128 0x1
 4029 08f4 52       		.byte	0x52
 4030 08f5 14       		.uleb128 0x14
 4031 08f6 1A000000 		.4byte	.LVL101
 4032 08fa 771B0000 		.4byte	0x1b77
 4033 08fe 18       		.uleb128 0x18
 4034 08ff 2E000000 		.4byte	.LVL104
 4035 0903 F8070000 		.4byte	0x7f8
 4036 0907 17       		.uleb128 0x17
 4037 0908 01       		.uleb128 0x1
 4038 0909 50       		.byte	0x50
 4039 090a 02       		.uleb128 0x2
 4040 090b 75       		.byte	0x75
 4041 090c 00       		.sleb128 0
 4042 090d 17       		.uleb128 0x17
 4043 090e 01       		.uleb128 0x1
 4044 090f 51       		.byte	0x51
 4045 0910 02       		.uleb128 0x2
 4046 0911 77       		.byte	0x77
 4047 0912 00       		.sleb128 0
 4048 0913 17       		.uleb128 0x17
 4049 0914 01       		.uleb128 0x1
 4050 0915 52       		.byte	0x52
 4051 0916 03       		.uleb128 0x3
 4052 0917 74       		.byte	0x74
 4053 0918 CC00     		.sleb128 76
 4054 091a 17       		.uleb128 0x17
 4055 091b 01       		.uleb128 0x1
 4056 091c 53       		.byte	0x53
 4057 091d 02       		.uleb128 0x2
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccApaELb.s 			page 131


 4058 091e 76       		.byte	0x76
 4059 091f 00       		.sleb128 0
 4060 0920 17       		.uleb128 0x17
 4061 0921 02       		.uleb128 0x2
 4062 0922 7D       		.byte	0x7d
 4063 0923 00       		.sleb128 0
 4064 0924 02       		.uleb128 0x2
 4065 0925 74       		.byte	0x74
 4066 0926 00       		.sleb128 0
 4067 0927 00       		.byte	0
 4068 0928 00       		.byte	0
 4069 0929 1F       		.uleb128 0x1f
 4070 092a 7A030000 		.4byte	.LASF116
 4071 092e 01       		.byte	0x1
 4072 092f BC02     		.2byte	0x2bc
 4073 0931 CC020000 		.4byte	0x2cc
 4074 0935 00000000 		.4byte	.LFB39
 4075 0939 14000000 		.4byte	.LFE39-.LFB39
 4076 093d 01       		.uleb128 0x1
 4077 093e 9C       		.byte	0x9c
 4078 093f 8D090000 		.4byte	0x98d
 4079 0943 12       		.uleb128 0x12
 4080 0944 1B030000 		.4byte	.LASF117
 4081 0948 01       		.byte	0x1
 4082 0949 BC02     		.2byte	0x2bc
 4083 094b 73080000 		.4byte	0x873
 4084 094f 63060000 		.4byte	.LLST33
 4085 0953 12       		.uleb128 0x12
 4086 0954 D60A0000 		.4byte	.LASF118
 4087 0958 01       		.byte	0x1
 4088 0959 BC02     		.2byte	0x2bc
 4089 095b 73080000 		.4byte	0x873
 4090 095f 84060000 		.4byte	.LLST34
 4091 0963 20       		.uleb128 0x20
 4092 0964 A6070000 		.4byte	.LASF89
 4093 0968 01       		.byte	0x1
 4094 0969 BE02     		.2byte	0x2be
 4095 096b CC020000 		.4byte	0x2cc
 4096 096f 01       		.uleb128 0x1
 4097 0970 50       		.byte	0x50
 4098 0971 18       		.uleb128 0x18
 4099 0972 0C000000 		.4byte	.LVL110
 4100 0976 7D080000 		.4byte	0x87d
 4101 097a 17       		.uleb128 0x17
 4102 097b 01       		.uleb128 0x1
 4103 097c 50       		.byte	0x50
 4104 097d 03       		.uleb128 0x3
 4105 097e F3       		.byte	0xf3
 4106 097f 01       		.uleb128 0x1
 4107 0980 50       		.byte	0x50
 4108 0981 17       		.uleb128 0x17
 4109 0982 01       		.uleb128 0x1
 4110 0983 51       		.byte	0x51
 4111 0984 01       		.uleb128 0x1
 4112 0985 30       		.byte	0x30
 4113 0986 17       		.uleb128 0x17
 4114 0987 01       		.uleb128 0x1
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccApaELb.s 			page 132


 4115 0988 52       		.byte	0x52
 4116 0989 01       		.uleb128 0x1
 4117 098a 32       		.byte	0x32
 4118 098b 00       		.byte	0
 4119 098c 00       		.byte	0
 4120 098d 1F       		.uleb128 0x1f
 4121 098e 4F050000 		.4byte	.LASF119
 4122 0992 01       		.byte	0x1
 4123 0993 D602     		.2byte	0x2d6
 4124 0995 98010000 		.4byte	0x198
 4125 0999 00000000 		.4byte	.LFB40
 4126 099d 02010000 		.4byte	.LFE40-.LFB40
 4127 09a1 01       		.uleb128 0x1
 4128 09a2 9C       		.byte	0x9c
 4129 09a3 850B0000 		.4byte	0xb85
 4130 09a7 12       		.uleb128 0x12
 4131 09a8 11070000 		.4byte	.LASF106
 4132 09ac 01       		.byte	0x1
 4133 09ad D602     		.2byte	0x2d6
 4134 09af CC020000 		.4byte	0x2cc
 4135 09b3 B0060000 		.4byte	.LLST35
 4136 09b7 12       		.uleb128 0x12
 4137 09b8 77070000 		.4byte	.LASF99
 4138 09bc 01       		.byte	0x1
 4139 09bd D602     		.2byte	0x2d6
 4140 09bf 850B0000 		.4byte	0xb85
 4141 09c3 DC060000 		.4byte	.LLST36
 4142 09c7 12       		.uleb128 0x12
 4143 09c8 C8020000 		.4byte	.LASF120
 4144 09cc 01       		.byte	0x1
 4145 09cd D602     		.2byte	0x2d6
 4146 09cf AE010000 		.4byte	0x1ae
 4147 09d3 08070000 		.4byte	.LLST37
 4148 09d7 12       		.uleb128 0x12
 4149 09d8 D0090000 		.4byte	.LASF102
 4150 09dc 01       		.byte	0x1
 4151 09dd D602     		.2byte	0x2d6
 4152 09df 7F050000 		.4byte	0x57f
 4153 09e3 3F070000 		.4byte	.LLST38
 4154 09e7 13       		.uleb128 0x13
 4155 09e8 AE070000 		.4byte	.LASF121
 4156 09ec 01       		.byte	0x1
 4157 09ed D802     		.2byte	0x2d8
 4158 09ef 98010000 		.4byte	0x198
 4159 09f3 6B070000 		.4byte	.LLST39
 4160 09f7 13       		.uleb128 0x13
 4161 09f8 8F050000 		.4byte	.LASF122
 4162 09fc 01       		.byte	0x1
 4163 09fd D802     		.2byte	0x2d8
 4164 09ff 98010000 		.4byte	0x198
 4165 0a03 A1070000 		.4byte	.LLST40
 4166 0a07 20       		.uleb128 0x20
 4167 0a08 98030000 		.4byte	.LASF123
 4168 0a0c 01       		.byte	0x1
 4169 0a0d D902     		.2byte	0x2d9
 4170 0a0f C1020000 		.4byte	0x2c1
 4171 0a13 02       		.uleb128 0x2
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccApaELb.s 			page 133


 4172 0a14 91       		.byte	0x91
 4173 0a15 60       		.sleb128 -32
 4174 0a16 13       		.uleb128 0x13
 4175 0a17 8D090000 		.4byte	.LASF94
 4176 0a1b 01       		.byte	0x1
 4177 0a1c DA02     		.2byte	0x2da
 4178 0a1e 7A050000 		.4byte	0x57a
 4179 0a22 CA070000 		.4byte	.LLST41
 4180 0a26 14       		.uleb128 0x14
 4181 0a27 12000000 		.4byte	.LVL115
 4182 0a2b 1D1B0000 		.4byte	0x1b1d
 4183 0a2f 16       		.uleb128 0x16
 4184 0a30 28000000 		.4byte	.LVL116
 4185 0a34 EE040000 		.4byte	0x4ee
 4186 0a38 4F0A0000 		.4byte	0xa4f
 4187 0a3c 17       		.uleb128 0x17
 4188 0a3d 01       		.uleb128 0x1
 4189 0a3e 50       		.byte	0x50
 4190 0a3f 02       		.uleb128 0x2
 4191 0a40 74       		.byte	0x74
 4192 0a41 00       		.sleb128 0
 4193 0a42 17       		.uleb128 0x17
 4194 0a43 01       		.uleb128 0x1
 4195 0a44 51       		.byte	0x51
 4196 0a45 02       		.uleb128 0x2
 4197 0a46 75       		.byte	0x75
 4198 0a47 00       		.sleb128 0
 4199 0a48 17       		.uleb128 0x17
 4200 0a49 01       		.uleb128 0x1
 4201 0a4a 52       		.byte	0x52
 4202 0a4b 02       		.uleb128 0x2
 4203 0a4c 77       		.byte	0x77
 4204 0a4d 00       		.sleb128 0
 4205 0a4e 00       		.byte	0
 4206 0a4f 16       		.uleb128 0x16
 4207 0a50 36000000 		.4byte	.LVL118
 4208 0a54 84050000 		.4byte	0x584
 4209 0a58 690A0000 		.4byte	0xa69
 4210 0a5c 17       		.uleb128 0x17
 4211 0a5d 01       		.uleb128 0x1
 4212 0a5e 50       		.byte	0x50
 4213 0a5f 02       		.uleb128 0x2
 4214 0a60 74       		.byte	0x74
 4215 0a61 00       		.sleb128 0
 4216 0a62 17       		.uleb128 0x17
 4217 0a63 01       		.uleb128 0x1
 4218 0a64 51       		.byte	0x51
 4219 0a65 02       		.uleb128 0x2
 4220 0a66 77       		.byte	0x77
 4221 0a67 00       		.sleb128 0
 4222 0a68 00       		.byte	0
 4223 0a69 14       		.uleb128 0x14
 4224 0a6a 3E000000 		.4byte	.LVL119
 4225 0a6e 601B0000 		.4byte	0x1b60
 4226 0a72 16       		.uleb128 0x16
 4227 0a73 4E000000 		.4byte	.LVL122
 4228 0a77 481B0000 		.4byte	0x1b48
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccApaELb.s 			page 134


 4229 0a7b 860A0000 		.4byte	0xa86
 4230 0a7f 17       		.uleb128 0x17
 4231 0a80 01       		.uleb128 0x1
 4232 0a81 50       		.byte	0x50
 4233 0a82 02       		.uleb128 0x2
 4234 0a83 74       		.byte	0x74
 4235 0a84 24       		.sleb128 36
 4236 0a85 00       		.byte	0
 4237 0a86 14       		.uleb128 0x14
 4238 0a87 56000000 		.4byte	.LVL123
 4239 0a8b 601B0000 		.4byte	0x1b60
 4240 0a8f 14       		.uleb128 0x14
 4241 0a90 60000000 		.4byte	.LVL125
 4242 0a94 601B0000 		.4byte	0x1b60
 4243 0a98 14       		.uleb128 0x14
 4244 0a99 64000000 		.4byte	.LVL126
 4245 0a9d 281B0000 		.4byte	0x1b28
 4246 0aa1 14       		.uleb128 0x14
 4247 0aa2 72000000 		.4byte	.LVL127
 4248 0aa6 281B0000 		.4byte	0x1b28
 4249 0aaa 16       		.uleb128 0x16
 4250 0aab 80000000 		.4byte	.LVL128
 4251 0aaf 821B0000 		.4byte	0x1b82
 4252 0ab3 BE0A0000 		.4byte	0xabe
 4253 0ab7 17       		.uleb128 0x17
 4254 0ab8 01       		.uleb128 0x1
 4255 0ab9 50       		.byte	0x50
 4256 0aba 02       		.uleb128 0x2
 4257 0abb 91       		.byte	0x91
 4258 0abc 60       		.sleb128 -32
 4259 0abd 00       		.byte	0
 4260 0abe 14       		.uleb128 0x14
 4261 0abf 86000000 		.4byte	.LVL130
 4262 0ac3 281B0000 		.4byte	0x1b28
 4263 0ac7 14       		.uleb128 0x14
 4264 0ac8 8A000000 		.4byte	.LVL131
 4265 0acc 8E1B0000 		.4byte	0x1b8e
 4266 0ad0 14       		.uleb128 0x14
 4267 0ad1 8E000000 		.4byte	.LVL132
 4268 0ad5 1D1B0000 		.4byte	0x1b1d
 4269 0ad9 14       		.uleb128 0x14
 4270 0ada B2000000 		.4byte	.LVL133
 4271 0ade 281B0000 		.4byte	0x1b28
 4272 0ae2 16       		.uleb128 0x16
 4273 0ae3 BA000000 		.4byte	.LVL135
 4274 0ae7 9A1B0000 		.4byte	0x1b9a
 4275 0aeb FC0A0000 		.4byte	0xafc
 4276 0aef 17       		.uleb128 0x17
 4277 0af0 01       		.uleb128 0x1
 4278 0af1 50       		.byte	0x50
 4279 0af2 02       		.uleb128 0x2
 4280 0af3 91       		.byte	0x91
 4281 0af4 60       		.sleb128 -32
 4282 0af5 17       		.uleb128 0x17
 4283 0af6 01       		.uleb128 0x1
 4284 0af7 51       		.byte	0x51
 4285 0af8 02       		.uleb128 0x2
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccApaELb.s 			page 135


 4286 0af9 91       		.byte	0x91
 4287 0afa 5C       		.sleb128 -36
 4288 0afb 00       		.byte	0
 4289 0afc 16       		.uleb128 0x16
 4290 0afd C4000000 		.4byte	.LVL136
 4291 0b01 54040000 		.4byte	0x454
 4292 0b05 100B0000 		.4byte	0xb10
 4293 0b09 17       		.uleb128 0x17
 4294 0b0a 01       		.uleb128 0x1
 4295 0b0b 50       		.byte	0x50
 4296 0b0c 02       		.uleb128 0x2
 4297 0b0d 74       		.byte	0x74
 4298 0b0e 00       		.sleb128 0
 4299 0b0f 00       		.byte	0
 4300 0b10 16       		.uleb128 0x16
 4301 0b11 D2000000 		.4byte	.LVL137
 4302 0b15 A61B0000 		.4byte	0x1ba6
 4303 0b19 240B0000 		.4byte	0xb24
 4304 0b1d 17       		.uleb128 0x17
 4305 0b1e 01       		.uleb128 0x1
 4306 0b1f 50       		.byte	0x50
 4307 0b20 02       		.uleb128 0x2
 4308 0b21 74       		.byte	0x74
 4309 0b22 10       		.sleb128 16
 4310 0b23 00       		.byte	0
 4311 0b24 16       		.uleb128 0x16
 4312 0b25 D8000000 		.4byte	.LVL138
 4313 0b29 77060000 		.4byte	0x677
 4314 0b2d 380B0000 		.4byte	0xb38
 4315 0b31 17       		.uleb128 0x17
 4316 0b32 01       		.uleb128 0x1
 4317 0b33 50       		.byte	0x50
 4318 0b34 02       		.uleb128 0x2
 4319 0b35 74       		.byte	0x74
 4320 0b36 00       		.sleb128 0
 4321 0b37 00       		.byte	0
 4322 0b38 14       		.uleb128 0x14
 4323 0b39 DC000000 		.4byte	.LVL139
 4324 0b3d B21B0000 		.4byte	0x1bb2
 4325 0b41 14       		.uleb128 0x14
 4326 0b42 E4000000 		.4byte	.LVL140
 4327 0b46 601B0000 		.4byte	0x1b60
 4328 0b4a 16       		.uleb128 0x16
 4329 0b4b EC000000 		.4byte	.LVL141
 4330 0b4f 77060000 		.4byte	0x677
 4331 0b53 5E0B0000 		.4byte	0xb5e
 4332 0b57 17       		.uleb128 0x17
 4333 0b58 01       		.uleb128 0x1
 4334 0b59 50       		.byte	0x50
 4335 0b5a 02       		.uleb128 0x2
 4336 0b5b 74       		.byte	0x74
 4337 0b5c 00       		.sleb128 0
 4338 0b5d 00       		.byte	0
 4339 0b5e 14       		.uleb128 0x14
 4340 0b5f F0000000 		.4byte	.LVL142
 4341 0b63 B21B0000 		.4byte	0x1bb2
 4342 0b67 16       		.uleb128 0x16
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccApaELb.s 			page 136


 4343 0b68 F8000000 		.4byte	.LVL143
 4344 0b6c 77060000 		.4byte	0x677
 4345 0b70 7B0B0000 		.4byte	0xb7b
 4346 0b74 17       		.uleb128 0x17
 4347 0b75 01       		.uleb128 0x1
 4348 0b76 50       		.byte	0x50
 4349 0b77 02       		.uleb128 0x2
 4350 0b78 74       		.byte	0x74
 4351 0b79 00       		.sleb128 0
 4352 0b7a 00       		.byte	0
 4353 0b7b 14       		.uleb128 0x14
 4354 0b7c FC000000 		.4byte	.LVL144
 4355 0b80 B21B0000 		.4byte	0x1bb2
 4356 0b84 00       		.byte	0
 4357 0b85 07       		.uleb128 0x7
 4358 0b86 B9000000 		.4byte	0xb9
 4359 0b8a 19       		.uleb128 0x19
 4360 0b8b 30000000 		.4byte	.LASF124
 4361 0b8f 01       		.byte	0x1
 4362 0b90 C501     		.2byte	0x1c5
 4363 0b92 00000000 		.4byte	.LFB35
 4364 0b96 18000000 		.4byte	.LFE35-.LFB35
 4365 0b9a 01       		.uleb128 0x1
 4366 0b9b 9C       		.byte	0x9c
 4367 0b9c D10B0000 		.4byte	0xbd1
 4368 0ba0 12       		.uleb128 0x12
 4369 0ba1 BC010000 		.4byte	.LASF112
 4370 0ba5 01       		.byte	0x1
 4371 0ba6 C501     		.2byte	0x1c5
 4372 0ba8 74050000 		.4byte	0x574
 4373 0bac F6070000 		.4byte	.LLST42
 4374 0bb0 18       		.uleb128 0x18
 4375 0bb1 16000000 		.4byte	.LVL150
 4376 0bb5 8D090000 		.4byte	0x98d
 4377 0bb9 17       		.uleb128 0x17
 4378 0bba 01       		.uleb128 0x1
 4379 0bbb 50       		.byte	0x50
 4380 0bbc 03       		.uleb128 0x3
 4381 0bbd F3       		.byte	0xf3
 4382 0bbe 01       		.uleb128 0x1
 4383 0bbf 50       		.byte	0x50
 4384 0bc0 17       		.uleb128 0x17
 4385 0bc1 01       		.uleb128 0x1
 4386 0bc2 51       		.byte	0x51
 4387 0bc3 01       		.uleb128 0x1
 4388 0bc4 30       		.byte	0x30
 4389 0bc5 17       		.uleb128 0x17
 4390 0bc6 01       		.uleb128 0x1
 4391 0bc7 52       		.byte	0x52
 4392 0bc8 01       		.uleb128 0x1
 4393 0bc9 30       		.byte	0x30
 4394 0bca 17       		.uleb128 0x17
 4395 0bcb 01       		.uleb128 0x1
 4396 0bcc 53       		.byte	0x53
 4397 0bcd 01       		.uleb128 0x1
 4398 0bce 30       		.byte	0x30
 4399 0bcf 00       		.byte	0
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccApaELb.s 			page 137


 4400 0bd0 00       		.byte	0
 4401 0bd1 1F       		.uleb128 0x1f
 4402 0bd2 BB050000 		.4byte	.LASF125
 4403 0bd6 01       		.byte	0x1
 4404 0bd7 E301     		.2byte	0x1e3
 4405 0bd9 CC020000 		.4byte	0x2cc
 4406 0bdd 00000000 		.4byte	.LFB36
 4407 0be1 16000000 		.4byte	.LFE36-.LFB36
 4408 0be5 01       		.uleb128 0x1
 4409 0be6 9C       		.byte	0x9c
 4410 0be7 4E0C0000 		.4byte	0xc4e
 4411 0beb 12       		.uleb128 0x12
 4412 0bec 19000000 		.4byte	.LASF111
 4413 0bf0 01       		.byte	0x1
 4414 0bf1 E301     		.2byte	0x1e3
 4415 0bf3 78080000 		.4byte	0x878
 4416 0bf7 17080000 		.4byte	.LLST43
 4417 0bfb 13       		.uleb128 0x13
 4418 0bfc BC010000 		.4byte	.LASF112
 4419 0c00 01       		.byte	0x1
 4420 0c01 E501     		.2byte	0x1e5
 4421 0c03 74050000 		.4byte	0x574
 4422 0c07 38080000 		.4byte	.LLST44
 4423 0c0b 21       		.uleb128 0x21
 4424 0c0c 43000000 		.4byte	.LASF126
 4425 0c10 01       		.byte	0x1
 4426 0c11 E601     		.2byte	0x1e6
 4427 0c13 73080000 		.4byte	0x873
 4428 0c17 01       		.byte	0x1
 4429 0c18 21       		.uleb128 0x21
 4430 0c19 18070000 		.4byte	.LASF127
 4431 0c1d 01       		.byte	0x1
 4432 0c1e E601     		.2byte	0x1e6
 4433 0c20 73080000 		.4byte	0x873
 4434 0c24 00       		.byte	0
 4435 0c25 16       		.uleb128 0x16
 4436 0c26 0C000000 		.4byte	.LVL154
 4437 0c2a 7D080000 		.4byte	0x87d
 4438 0c2e 3D0C0000 		.4byte	0xc3d
 4439 0c32 17       		.uleb128 0x17
 4440 0c33 01       		.uleb128 0x1
 4441 0c34 50       		.byte	0x50
 4442 0c35 01       		.uleb128 0x1
 4443 0c36 31       		.byte	0x31
 4444 0c37 17       		.uleb128 0x17
 4445 0c38 01       		.uleb128 0x1
 4446 0c39 51       		.byte	0x51
 4447 0c3a 01       		.uleb128 0x1
 4448 0c3b 30       		.byte	0x30
 4449 0c3c 00       		.byte	0
 4450 0c3d 18       		.uleb128 0x18
 4451 0c3e 12000000 		.4byte	.LVL156
 4452 0c42 8A0B0000 		.4byte	0xb8a
 4453 0c46 17       		.uleb128 0x17
 4454 0c47 01       		.uleb128 0x1
 4455 0c48 50       		.byte	0x50
 4456 0c49 02       		.uleb128 0x2
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccApaELb.s 			page 138


 4457 0c4a 74       		.byte	0x74
 4458 0c4b 00       		.sleb128 0
 4459 0c4c 00       		.byte	0
 4460 0c4d 00       		.byte	0
 4461 0c4e 1F       		.uleb128 0x1f
 4462 0c4f B4080000 		.4byte	.LASF128
 4463 0c53 01       		.byte	0x1
 4464 0c54 3F02     		.2byte	0x23f
 4465 0c56 98010000 		.4byte	0x198
 4466 0c5a 00000000 		.4byte	.LFB37
 4467 0c5e 2E000000 		.4byte	.LFE37-.LFB37
 4468 0c62 01       		.uleb128 0x1
 4469 0c63 9C       		.byte	0x9c
 4470 0c64 BA0C0000 		.4byte	0xcba
 4471 0c68 12       		.uleb128 0x12
 4472 0c69 02040000 		.4byte	.LASF129
 4473 0c6d 01       		.byte	0x1
 4474 0c6e 3F02     		.2byte	0x23f
 4475 0c70 CC020000 		.4byte	0x2cc
 4476 0c74 61080000 		.4byte	.LLST45
 4477 0c78 20       		.uleb128 0x20
 4478 0c79 C9040000 		.4byte	.LASF96
 4479 0c7d 01       		.byte	0x1
 4480 0c7e 4102     		.2byte	0x241
 4481 0c80 98010000 		.4byte	0x198
 4482 0c84 01       		.uleb128 0x1
 4483 0c85 50       		.byte	0x50
 4484 0c86 13       		.uleb128 0x13
 4485 0c87 3F060000 		.4byte	.LASF130
 4486 0c8b 01       		.byte	0x1
 4487 0c8c 4202     		.2byte	0x242
 4488 0c8e 7A050000 		.4byte	0x57a
 4489 0c92 8D080000 		.4byte	.LLST46
 4490 0c96 14       		.uleb128 0x14
 4491 0c97 0A000000 		.4byte	.LVL160
 4492 0c9b BE1B0000 		.4byte	0x1bbe
 4493 0c9f 18       		.uleb128 0x18
 4494 0ca0 22000000 		.4byte	.LVL161
 4495 0ca4 8D090000 		.4byte	0x98d
 4496 0ca8 17       		.uleb128 0x17
 4497 0ca9 01       		.uleb128 0x1
 4498 0caa 50       		.byte	0x50
 4499 0cab 02       		.uleb128 0x2
 4500 0cac 74       		.byte	0x74
 4501 0cad 00       		.sleb128 0
 4502 0cae 17       		.uleb128 0x17
 4503 0caf 01       		.uleb128 0x1
 4504 0cb0 51       		.byte	0x51
 4505 0cb1 01       		.uleb128 0x1
 4506 0cb2 30       		.byte	0x30
 4507 0cb3 17       		.uleb128 0x17
 4508 0cb4 01       		.uleb128 0x1
 4509 0cb5 52       		.byte	0x52
 4510 0cb6 01       		.uleb128 0x1
 4511 0cb7 30       		.byte	0x30
 4512 0cb8 00       		.byte	0
 4513 0cb9 00       		.byte	0
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccApaELb.s 			page 139


 4514 0cba 1F       		.uleb128 0x1f
 4515 0cbb 00000000 		.4byte	.LASF131
 4516 0cbf 01       		.byte	0x1
 4517 0cc0 9C03     		.2byte	0x39c
 4518 0cc2 98010000 		.4byte	0x198
 4519 0cc6 00000000 		.4byte	.LFB41
 4520 0cca 9C000000 		.4byte	.LFE41-.LFB41
 4521 0cce 01       		.uleb128 0x1
 4522 0ccf 9C       		.byte	0x9c
 4523 0cd0 C40D0000 		.4byte	0xdc4
 4524 0cd4 12       		.uleb128 0x12
 4525 0cd5 11070000 		.4byte	.LASF106
 4526 0cd9 01       		.byte	0x1
 4527 0cda 9C03     		.2byte	0x39c
 4528 0cdc CC020000 		.4byte	0x2cc
 4529 0ce0 B9080000 		.4byte	.LLST47
 4530 0ce4 12       		.uleb128 0x12
 4531 0ce5 77070000 		.4byte	.LASF99
 4532 0ce9 01       		.byte	0x1
 4533 0cea 9C03     		.2byte	0x39c
 4534 0cec 850B0000 		.4byte	0xb85
 4535 0cf0 E5080000 		.4byte	.LLST48
 4536 0cf4 12       		.uleb128 0x12
 4537 0cf5 9C000000 		.4byte	.LASF132
 4538 0cf9 01       		.byte	0x1
 4539 0cfa 9C03     		.2byte	0x39c
 4540 0cfc CA0D0000 		.4byte	0xdca
 4541 0d00 04090000 		.4byte	.LLST49
 4542 0d04 12       		.uleb128 0x12
 4543 0d05 D0090000 		.4byte	.LASF102
 4544 0d09 01       		.byte	0x1
 4545 0d0a 9C03     		.2byte	0x39c
 4546 0d0c 7F050000 		.4byte	0x57f
 4547 0d10 30090000 		.4byte	.LLST50
 4548 0d14 13       		.uleb128 0x13
 4549 0d15 C9040000 		.4byte	.LASF96
 4550 0d19 01       		.byte	0x1
 4551 0d1a 9E03     		.2byte	0x39e
 4552 0d1c 98010000 		.4byte	0x198
 4553 0d20 240A0000 		.4byte	.LLST51
 4554 0d24 13       		.uleb128 0x13
 4555 0d25 33090000 		.4byte	.LASF133
 4556 0d29 01       		.byte	0x1
 4557 0d2a 9F03     		.2byte	0x39f
 4558 0d2c A3010000 		.4byte	0x1a3
 4559 0d30 420A0000 		.4byte	.LLST52
 4560 0d34 13       		.uleb128 0x13
 4561 0d35 8D090000 		.4byte	.LASF94
 4562 0d39 01       		.byte	0x1
 4563 0d3a A003     		.2byte	0x3a0
 4564 0d3c 7A050000 		.4byte	0x57a
 4565 0d40 840A0000 		.4byte	.LLST53
 4566 0d44 22       		.uleb128 0x22
 4567 0d45 18000000 		.4byte	.Ldebug_ranges0+0x18
 4568 0d49 A90D0000 		.4byte	0xda9
 4569 0d4d 13       		.uleb128 0x13
 4570 0d4e 26030000 		.4byte	.LASF83
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccApaELb.s 			page 140


 4571 0d52 01       		.byte	0x1
 4572 0d53 BF03     		.2byte	0x3bf
 4573 0d55 26060000 		.4byte	0x626
 4574 0d59 B00A0000 		.4byte	.LLST54
 4575 0d5d 16       		.uleb128 0x16
 4576 0d5e 2E000000 		.4byte	.LVL170
 4577 0d62 EE040000 		.4byte	0x4ee
 4578 0d66 7E0D0000 		.4byte	0xd7e
 4579 0d6a 17       		.uleb128 0x17
 4580 0d6b 01       		.uleb128 0x1
 4581 0d6c 50       		.byte	0x50
 4582 0d6d 02       		.uleb128 0x2
 4583 0d6e 76       		.byte	0x76
 4584 0d6f 00       		.sleb128 0
 4585 0d70 17       		.uleb128 0x17
 4586 0d71 01       		.uleb128 0x1
 4587 0d72 51       		.byte	0x51
 4588 0d73 03       		.uleb128 0x3
 4589 0d74 91       		.byte	0x91
 4590 0d75 64       		.sleb128 -28
 4591 0d76 06       		.byte	0x6
 4592 0d77 17       		.uleb128 0x17
 4593 0d78 01       		.uleb128 0x1
 4594 0d79 52       		.byte	0x52
 4595 0d7a 02       		.uleb128 0x2
 4596 0d7b 74       		.byte	0x74
 4597 0d7c 00       		.sleb128 0
 4598 0d7d 00       		.byte	0
 4599 0d7e 16       		.uleb128 0x16
 4600 0d7f 40000000 		.4byte	.LVL171
 4601 0d83 84050000 		.4byte	0x584
 4602 0d87 980D0000 		.4byte	0xd98
 4603 0d8b 17       		.uleb128 0x17
 4604 0d8c 01       		.uleb128 0x1
 4605 0d8d 50       		.byte	0x50
 4606 0d8e 02       		.uleb128 0x2
 4607 0d8f 76       		.byte	0x76
 4608 0d90 00       		.sleb128 0
 4609 0d91 17       		.uleb128 0x17
 4610 0d92 01       		.uleb128 0x1
 4611 0d93 51       		.byte	0x51
 4612 0d94 02       		.uleb128 0x2
 4613 0d95 74       		.byte	0x74
 4614 0d96 00       		.sleb128 0
 4615 0d97 00       		.byte	0
 4616 0d98 18       		.uleb128 0x18
 4617 0d99 5E000000 		.4byte	.LVL174
 4618 0d9d 481B0000 		.4byte	0x1b48
 4619 0da1 17       		.uleb128 0x17
 4620 0da2 01       		.uleb128 0x1
 4621 0da3 50       		.byte	0x50
 4622 0da4 02       		.uleb128 0x2
 4623 0da5 76       		.byte	0x76
 4624 0da6 24       		.sleb128 36
 4625 0da7 00       		.byte	0
 4626 0da8 00       		.byte	0
 4627 0da9 14       		.uleb128 0x14
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccApaELb.s 			page 141


 4628 0daa 10000000 		.4byte	.LVL166
 4629 0dae CA1B0000 		.4byte	0x1bca
 4630 0db2 18       		.uleb128 0x18
 4631 0db3 96000000 		.4byte	.LVL190
 4632 0db7 D51B0000 		.4byte	0x1bd5
 4633 0dbb 17       		.uleb128 0x17
 4634 0dbc 01       		.uleb128 0x1
 4635 0dbd 50       		.byte	0x50
 4636 0dbe 03       		.uleb128 0x3
 4637 0dbf 7D       		.byte	0x7d
 4638 0dc0 00       		.sleb128 0
 4639 0dc1 06       		.byte	0x6
 4640 0dc2 00       		.byte	0
 4641 0dc3 00       		.byte	0
 4642 0dc4 06       		.uleb128 0x6
 4643 0dc5 04       		.byte	0x4
 4644 0dc6 98010000 		.4byte	0x198
 4645 0dca 07       		.uleb128 0x7
 4646 0dcb C40D0000 		.4byte	0xdc4
 4647 0dcf 1F       		.uleb128 0x1f
 4648 0dd0 4D080000 		.4byte	.LASF134
 4649 0dd4 01       		.byte	0x1
 4650 0dd5 3304     		.2byte	0x433
 4651 0dd7 98010000 		.4byte	0x198
 4652 0ddb 00000000 		.4byte	.LFB42
 4653 0ddf 8A000000 		.4byte	.LFE42-.LFB42
 4654 0de3 01       		.uleb128 0x1
 4655 0de4 9C       		.byte	0x9c
 4656 0de5 B00E0000 		.4byte	0xeb0
 4657 0de9 12       		.uleb128 0x12
 4658 0dea 11070000 		.4byte	.LASF106
 4659 0dee 01       		.byte	0x1
 4660 0def 3304     		.2byte	0x433
 4661 0df1 CC020000 		.4byte	0x2cc
 4662 0df5 CE0A0000 		.4byte	.LLST55
 4663 0df9 12       		.uleb128 0x12
 4664 0dfa 9C000000 		.4byte	.LASF132
 4665 0dfe 01       		.byte	0x1
 4666 0dff 3304     		.2byte	0x433
 4667 0e01 CA0D0000 		.4byte	0xdca
 4668 0e05 C20B0000 		.4byte	.LLST56
 4669 0e09 13       		.uleb128 0x13
 4670 0e0a C9040000 		.4byte	.LASF96
 4671 0e0e 01       		.byte	0x1
 4672 0e0f 3504     		.2byte	0x435
 4673 0e11 98010000 		.4byte	0x198
 4674 0e15 EE0B0000 		.4byte	.LLST57
 4675 0e19 13       		.uleb128 0x13
 4676 0e1a 33090000 		.4byte	.LASF133
 4677 0e1e 01       		.byte	0x1
 4678 0e1f 3604     		.2byte	0x436
 4679 0e21 A3010000 		.4byte	0x1a3
 4680 0e25 0C0C0000 		.4byte	.LLST58
 4681 0e29 13       		.uleb128 0x13
 4682 0e2a 8D090000 		.4byte	.LASF94
 4683 0e2e 01       		.byte	0x1
 4684 0e2f 3704     		.2byte	0x437
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccApaELb.s 			page 142


 4685 0e31 7A050000 		.4byte	0x57a
 4686 0e35 6C0C0000 		.4byte	.LLST59
 4687 0e39 1A       		.uleb128 0x1a
 4688 0e3a 0C000000 		.4byte	.LBB8
 4689 0e3e 74000000 		.4byte	.LBE8-.LBB8
 4690 0e42 960E0000 		.4byte	0xe96
 4691 0e46 13       		.uleb128 0x13
 4692 0e47 72090000 		.4byte	.LASF79
 4693 0e4b 01       		.byte	0x1
 4694 0e4c 5C04     		.2byte	0x45c
 4695 0e4e 73080000 		.4byte	0x873
 4696 0e52 600D0000 		.4byte	.LLST60
 4697 0e56 15       		.uleb128 0x15
 4698 0e57 30000000 		.4byte	.Ldebug_ranges0+0x30
 4699 0e5b 13       		.uleb128 0x13
 4700 0e5c 26030000 		.4byte	.LASF83
 4701 0e60 01       		.byte	0x1
 4702 0e61 6304     		.2byte	0x463
 4703 0e63 26060000 		.4byte	0x626
 4704 0e67 DE0D0000 		.4byte	.LLST61
 4705 0e6b 16       		.uleb128 0x16
 4706 0e6c 30000000 		.4byte	.LVL205
 4707 0e70 84050000 		.4byte	0x584
 4708 0e74 840E0000 		.4byte	0xe84
 4709 0e78 17       		.uleb128 0x17
 4710 0e79 01       		.uleb128 0x1
 4711 0e7a 50       		.byte	0x50
 4712 0e7b 02       		.uleb128 0x2
 4713 0e7c 74       		.byte	0x74
 4714 0e7d 00       		.sleb128 0
 4715 0e7e 17       		.uleb128 0x17
 4716 0e7f 01       		.uleb128 0x1
 4717 0e80 51       		.byte	0x51
 4718 0e81 01       		.uleb128 0x1
 4719 0e82 30       		.byte	0x30
 4720 0e83 00       		.byte	0
 4721 0e84 18       		.uleb128 0x18
 4722 0e85 4E000000 		.4byte	.LVL209
 4723 0e89 481B0000 		.4byte	0x1b48
 4724 0e8d 17       		.uleb128 0x17
 4725 0e8e 01       		.uleb128 0x1
 4726 0e8f 50       		.byte	0x50
 4727 0e90 02       		.uleb128 0x2
 4728 0e91 74       		.byte	0x74
 4729 0e92 24       		.sleb128 36
 4730 0e93 00       		.byte	0
 4731 0e94 00       		.byte	0
 4732 0e95 00       		.byte	0
 4733 0e96 14       		.uleb128 0x14
 4734 0e97 0A000000 		.4byte	.LVL197
 4735 0e9b CA1B0000 		.4byte	0x1bca
 4736 0e9f 18       		.uleb128 0x18
 4737 0ea0 86000000 		.4byte	.LVL228
 4738 0ea4 D51B0000 		.4byte	0x1bd5
 4739 0ea8 17       		.uleb128 0x17
 4740 0ea9 01       		.uleb128 0x1
 4741 0eaa 50       		.byte	0x50
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccApaELb.s 			page 143


 4742 0eab 02       		.uleb128 0x2
 4743 0eac 75       		.byte	0x75
 4744 0ead 00       		.sleb128 0
 4745 0eae 00       		.byte	0
 4746 0eaf 00       		.byte	0
 4747 0eb0 1F       		.uleb128 0x1f
 4748 0eb1 AD050000 		.4byte	.LASF135
 4749 0eb5 01       		.byte	0x1
 4750 0eb6 D804     		.2byte	0x4d8
 4751 0eb8 98010000 		.4byte	0x198
 4752 0ebc 00000000 		.4byte	.LFB43
 4753 0ec0 E4000000 		.4byte	.LFE43-.LFB43
 4754 0ec4 01       		.uleb128 0x1
 4755 0ec5 9C       		.byte	0x9c
 4756 0ec6 80100000 		.4byte	0x1080
 4757 0eca 12       		.uleb128 0x12
 4758 0ecb 11070000 		.4byte	.LASF106
 4759 0ecf 01       		.byte	0x1
 4760 0ed0 D804     		.2byte	0x4d8
 4761 0ed2 CC020000 		.4byte	0x2cc
 4762 0ed6 090E0000 		.4byte	.LLST62
 4763 0eda 12       		.uleb128 0x12
 4764 0edb 84090000 		.4byte	.LASF103
 4765 0edf 01       		.byte	0x1
 4766 0ee0 D804     		.2byte	0x4d8
 4767 0ee2 72060000 		.4byte	0x672
 4768 0ee6 350E0000 		.4byte	.LLST63
 4769 0eea 12       		.uleb128 0x12
 4770 0eeb C8020000 		.4byte	.LASF120
 4771 0eef 01       		.byte	0x1
 4772 0ef0 D804     		.2byte	0x4d8
 4773 0ef2 AE010000 		.4byte	0x1ae
 4774 0ef6 610E0000 		.4byte	.LLST64
 4775 0efa 13       		.uleb128 0x13
 4776 0efb AE070000 		.4byte	.LASF121
 4777 0eff 01       		.byte	0x1
 4778 0f00 DA04     		.2byte	0x4da
 4779 0f02 98010000 		.4byte	0x198
 4780 0f06 980E0000 		.4byte	.LLST65
 4781 0f0a 20       		.uleb128 0x20
 4782 0f0b 98030000 		.4byte	.LASF123
 4783 0f0f 01       		.byte	0x1
 4784 0f10 DB04     		.2byte	0x4db
 4785 0f12 C1020000 		.4byte	0x2c1
 4786 0f16 02       		.uleb128 0x2
 4787 0f17 91       		.byte	0x91
 4788 0f18 60       		.sleb128 -32
 4789 0f19 13       		.uleb128 0x13
 4790 0f1a 8D090000 		.4byte	.LASF94
 4791 0f1e 01       		.byte	0x1
 4792 0f1f DC04     		.2byte	0x4dc
 4793 0f21 7A050000 		.4byte	0x57a
 4794 0f25 CE0E0000 		.4byte	.LLST66
 4795 0f29 1A       		.uleb128 0x1a
 4796 0f2a 10000000 		.4byte	.LBB11
 4797 0f2e 4A000000 		.4byte	.LBE11-.LBB11
 4798 0f32 A00F0000 		.4byte	0xfa0
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccApaELb.s 			page 144


 4799 0f36 13       		.uleb128 0x13
 4800 0f37 72090000 		.4byte	.LASF79
 4801 0f3b 01       		.byte	0x1
 4802 0f3c F504     		.2byte	0x4f5
 4803 0f3e 73080000 		.4byte	0x873
 4804 0f42 FA0E0000 		.4byte	.LLST67
 4805 0f46 16       		.uleb128 0x16
 4806 0f47 1E000000 		.4byte	.LVL237
 4807 0f4b 2B060000 		.4byte	0x62b
 4808 0f4f 600F0000 		.4byte	0xf60
 4809 0f53 17       		.uleb128 0x17
 4810 0f54 01       		.uleb128 0x1
 4811 0f55 50       		.byte	0x50
 4812 0f56 02       		.uleb128 0x2
 4813 0f57 74       		.byte	0x74
 4814 0f58 00       		.sleb128 0
 4815 0f59 17       		.uleb128 0x17
 4816 0f5a 01       		.uleb128 0x1
 4817 0f5b 51       		.byte	0x51
 4818 0f5c 02       		.uleb128 0x2
 4819 0f5d 75       		.byte	0x75
 4820 0f5e 00       		.sleb128 0
 4821 0f5f 00       		.byte	0
 4822 0f60 16       		.uleb128 0x16
 4823 0f61 30000000 		.4byte	.LVL239
 4824 0f65 481B0000 		.4byte	0x1b48
 4825 0f69 740F0000 		.4byte	0xf74
 4826 0f6d 17       		.uleb128 0x17
 4827 0f6e 01       		.uleb128 0x1
 4828 0f6f 50       		.byte	0x50
 4829 0f70 02       		.uleb128 0x2
 4830 0f71 74       		.byte	0x74
 4831 0f72 10       		.sleb128 16
 4832 0f73 00       		.byte	0
 4833 0f74 14       		.uleb128 0x14
 4834 0f75 38000000 		.4byte	.LVL240
 4835 0f79 601B0000 		.4byte	0x1b60
 4836 0f7d 14       		.uleb128 0x14
 4837 0f7e 3C000000 		.4byte	.LVL241
 4838 0f82 281B0000 		.4byte	0x1b28
 4839 0f86 14       		.uleb128 0x14
 4840 0f87 4A000000 		.4byte	.LVL243
 4841 0f8b 281B0000 		.4byte	0x1b28
 4842 0f8f 18       		.uleb128 0x18
 4843 0f90 58000000 		.4byte	.LVL244
 4844 0f94 821B0000 		.4byte	0x1b82
 4845 0f98 17       		.uleb128 0x17
 4846 0f99 01       		.uleb128 0x1
 4847 0f9a 50       		.byte	0x50
 4848 0f9b 02       		.uleb128 0x2
 4849 0f9c 91       		.byte	0x91
 4850 0f9d 60       		.sleb128 -32
 4851 0f9e 00       		.byte	0
 4852 0f9f 00       		.byte	0
 4853 0fa0 14       		.uleb128 0x14
 4854 0fa1 10000000 		.4byte	.LVL235
 4855 0fa5 1D1B0000 		.4byte	0x1b1d
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccApaELb.s 			page 145


 4856 0fa9 14       		.uleb128 0x14
 4857 0faa 5E000000 		.4byte	.LVL246
 4858 0fae 281B0000 		.4byte	0x1b28
 4859 0fb2 14       		.uleb128 0x14
 4860 0fb3 62000000 		.4byte	.LVL247
 4861 0fb7 8E1B0000 		.4byte	0x1b8e
 4862 0fbb 14       		.uleb128 0x14
 4863 0fbc 66000000 		.4byte	.LVL248
 4864 0fc0 1D1B0000 		.4byte	0x1b1d
 4865 0fc4 14       		.uleb128 0x14
 4866 0fc5 8A000000 		.4byte	.LVL249
 4867 0fc9 281B0000 		.4byte	0x1b28
 4868 0fcd 16       		.uleb128 0x16
 4869 0fce 92000000 		.4byte	.LVL251
 4870 0fd2 9A1B0000 		.4byte	0x1b9a
 4871 0fd6 E70F0000 		.4byte	0xfe7
 4872 0fda 17       		.uleb128 0x17
 4873 0fdb 01       		.uleb128 0x1
 4874 0fdc 50       		.byte	0x50
 4875 0fdd 02       		.uleb128 0x2
 4876 0fde 91       		.byte	0x91
 4877 0fdf 60       		.sleb128 -32
 4878 0fe0 17       		.uleb128 0x17
 4879 0fe1 01       		.uleb128 0x1
 4880 0fe2 51       		.byte	0x51
 4881 0fe3 02       		.uleb128 0x2
 4882 0fe4 91       		.byte	0x91
 4883 0fe5 5C       		.sleb128 -36
 4884 0fe6 00       		.byte	0
 4885 0fe7 16       		.uleb128 0x16
 4886 0fe8 9C000000 		.4byte	.LVL252
 4887 0fec A1040000 		.4byte	0x4a1
 4888 0ff0 FB0F0000 		.4byte	0xffb
 4889 0ff4 17       		.uleb128 0x17
 4890 0ff5 01       		.uleb128 0x1
 4891 0ff6 50       		.byte	0x50
 4892 0ff7 02       		.uleb128 0x2
 4893 0ff8 74       		.byte	0x74
 4894 0ff9 00       		.sleb128 0
 4895 0ffa 00       		.byte	0
 4896 0ffb 16       		.uleb128 0x16
 4897 0ffc AA000000 		.4byte	.LVL253
 4898 1000 A61B0000 		.4byte	0x1ba6
 4899 1004 0F100000 		.4byte	0x100f
 4900 1008 17       		.uleb128 0x17
 4901 1009 01       		.uleb128 0x1
 4902 100a 50       		.byte	0x50
 4903 100b 02       		.uleb128 0x2
 4904 100c 74       		.byte	0x74
 4905 100d 24       		.sleb128 36
 4906 100e 00       		.byte	0
 4907 100f 16       		.uleb128 0x16
 4908 1010 B0000000 		.4byte	.LVL254
 4909 1014 77060000 		.4byte	0x677
 4910 1018 23100000 		.4byte	0x1023
 4911 101c 17       		.uleb128 0x17
 4912 101d 01       		.uleb128 0x1
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccApaELb.s 			page 146


 4913 101e 50       		.byte	0x50
 4914 101f 02       		.uleb128 0x2
 4915 1020 74       		.byte	0x74
 4916 1021 00       		.sleb128 0
 4917 1022 00       		.byte	0
 4918 1023 14       		.uleb128 0x14
 4919 1024 B4000000 		.4byte	.LVL255
 4920 1028 B21B0000 		.4byte	0x1bb2
 4921 102c 14       		.uleb128 0x14
 4922 102d BC000000 		.4byte	.LVL256
 4923 1031 601B0000 		.4byte	0x1b60
 4924 1035 16       		.uleb128 0x16
 4925 1036 C4000000 		.4byte	.LVL257
 4926 103a 77060000 		.4byte	0x677
 4927 103e 49100000 		.4byte	0x1049
 4928 1042 17       		.uleb128 0x17
 4929 1043 01       		.uleb128 0x1
 4930 1044 50       		.byte	0x50
 4931 1045 02       		.uleb128 0x2
 4932 1046 74       		.byte	0x74
 4933 1047 00       		.sleb128 0
 4934 1048 00       		.byte	0
 4935 1049 14       		.uleb128 0x14
 4936 104a C8000000 		.4byte	.LVL258
 4937 104e B21B0000 		.4byte	0x1bb2
 4938 1052 16       		.uleb128 0x16
 4939 1053 D0000000 		.4byte	.LVL259
 4940 1057 77060000 		.4byte	0x677
 4941 105b 66100000 		.4byte	0x1066
 4942 105f 17       		.uleb128 0x17
 4943 1060 01       		.uleb128 0x1
 4944 1061 50       		.byte	0x50
 4945 1062 02       		.uleb128 0x2
 4946 1063 74       		.byte	0x74
 4947 1064 00       		.sleb128 0
 4948 1065 00       		.byte	0
 4949 1066 14       		.uleb128 0x14
 4950 1067 D4000000 		.4byte	.LVL260
 4951 106b B21B0000 		.4byte	0x1bb2
 4952 106f 18       		.uleb128 0x18
 4953 1070 DA000000 		.4byte	.LVL261
 4954 1074 A1040000 		.4byte	0x4a1
 4955 1078 17       		.uleb128 0x17
 4956 1079 01       		.uleb128 0x1
 4957 107a 50       		.byte	0x50
 4958 107b 02       		.uleb128 0x2
 4959 107c 74       		.byte	0x74
 4960 107d 00       		.sleb128 0
 4961 107e 00       		.byte	0
 4962 107f 00       		.byte	0
 4963 1080 1F       		.uleb128 0x1f
 4964 1081 27050000 		.4byte	.LASF136
 4965 1085 01       		.byte	0x1
 4966 1086 6605     		.2byte	0x566
 4967 1088 98010000 		.4byte	0x198
 4968 108c 00000000 		.4byte	.LFB44
 4969 1090 1C010000 		.4byte	.LFE44-.LFB44
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccApaELb.s 			page 147


 4970 1094 01       		.uleb128 0x1
 4971 1095 9C       		.byte	0x9c
 4972 1096 AB120000 		.4byte	0x12ab
 4973 109a 12       		.uleb128 0x12
 4974 109b 11070000 		.4byte	.LASF106
 4975 109f 01       		.byte	0x1
 4976 10a0 6605     		.2byte	0x566
 4977 10a2 CC020000 		.4byte	0x2cc
 4978 10a6 250F0000 		.4byte	.LLST68
 4979 10aa 12       		.uleb128 0x12
 4980 10ab C8020000 		.4byte	.LASF120
 4981 10af 01       		.byte	0x1
 4982 10b0 6605     		.2byte	0x566
 4983 10b2 AE010000 		.4byte	0x1ae
 4984 10b6 510F0000 		.4byte	.LLST69
 4985 10ba 13       		.uleb128 0x13
 4986 10bb AE070000 		.4byte	.LASF121
 4987 10bf 01       		.byte	0x1
 4988 10c0 6805     		.2byte	0x568
 4989 10c2 98010000 		.4byte	0x198
 4990 10c6 880F0000 		.4byte	.LLST70
 4991 10ca 20       		.uleb128 0x20
 4992 10cb 98030000 		.4byte	.LASF123
 4993 10cf 01       		.byte	0x1
 4994 10d0 6905     		.2byte	0x569
 4995 10d2 C1020000 		.4byte	0x2c1
 4996 10d6 02       		.uleb128 0x2
 4997 10d7 91       		.byte	0x91
 4998 10d8 68       		.sleb128 -24
 4999 10d9 13       		.uleb128 0x13
 5000 10da 8D090000 		.4byte	.LASF94
 5001 10de 01       		.byte	0x1
 5002 10df 6A05     		.2byte	0x56a
 5003 10e1 7A050000 		.4byte	0x57a
 5004 10e5 BE0F0000 		.4byte	.LLST71
 5005 10e9 13       		.uleb128 0x13
 5006 10ea CB070000 		.4byte	.LASF137
 5007 10ee 01       		.byte	0x1
 5008 10ef 6D05     		.2byte	0x56d
 5009 10f1 98010000 		.4byte	0x198
 5010 10f5 EA0F0000 		.4byte	.LLST72
 5011 10f9 1A       		.uleb128 0x1a
 5012 10fa 10000000 		.4byte	.LBB12
 5013 10fe 4E000000 		.4byte	.LBE12-.LBB12
 5014 1102 5F110000 		.4byte	0x115f
 5015 1106 13       		.uleb128 0x13
 5016 1107 B4030000 		.4byte	.LASF138
 5017 110b 01       		.byte	0x1
 5018 110c 8905     		.2byte	0x589
 5019 110e 73080000 		.4byte	0x873
 5020 1112 1F100000 		.4byte	.LLST73
 5021 1116 14       		.uleb128 0x14
 5022 1117 24000000 		.4byte	.LVL273
 5023 111b E01B0000 		.4byte	0x1be0
 5024 111f 16       		.uleb128 0x16
 5025 1120 34000000 		.4byte	.LVL274
 5026 1124 481B0000 		.4byte	0x1b48
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccApaELb.s 			page 148


 5027 1128 33110000 		.4byte	0x1133
 5028 112c 17       		.uleb128 0x17
 5029 112d 01       		.uleb128 0x1
 5030 112e 50       		.byte	0x50
 5031 112f 02       		.uleb128 0x2
 5032 1130 74       		.byte	0x74
 5033 1131 10       		.sleb128 16
 5034 1132 00       		.byte	0
 5035 1133 14       		.uleb128 0x14
 5036 1134 3C000000 		.4byte	.LVL275
 5037 1138 601B0000 		.4byte	0x1b60
 5038 113c 14       		.uleb128 0x14
 5039 113d 40000000 		.4byte	.LVL276
 5040 1141 281B0000 		.4byte	0x1b28
 5041 1145 14       		.uleb128 0x14
 5042 1146 4E000000 		.4byte	.LVL279
 5043 114a 281B0000 		.4byte	0x1b28
 5044 114e 18       		.uleb128 0x18
 5045 114f 5C000000 		.4byte	.LVL280
 5046 1153 821B0000 		.4byte	0x1b82
 5047 1157 17       		.uleb128 0x17
 5048 1158 01       		.uleb128 0x1
 5049 1159 50       		.byte	0x50
 5050 115a 02       		.uleb128 0x2
 5051 115b 91       		.byte	0x91
 5052 115c 68       		.sleb128 -24
 5053 115d 00       		.byte	0
 5054 115e 00       		.byte	0
 5055 115f 1A       		.uleb128 0x1a
 5056 1160 00010000 		.4byte	.LBB13
 5057 1164 0E000000 		.4byte	.LBE13-.LBB13
 5058 1168 9A110000 		.4byte	0x119a
 5059 116c 13       		.uleb128 0x13
 5060 116d 5A020000 		.4byte	.LASF139
 5061 1171 01       		.byte	0x1
 5062 1172 2606     		.2byte	0x626
 5063 1174 A3010000 		.4byte	0x1a3
 5064 1178 5A100000 		.4byte	.LLST74
 5065 117c 16       		.uleb128 0x16
 5066 117d 06010000 		.4byte	.LVL303
 5067 1181 09040000 		.4byte	0x409
 5068 1185 90110000 		.4byte	0x1190
 5069 1189 17       		.uleb128 0x17
 5070 118a 01       		.uleb128 0x1
 5071 118b 50       		.byte	0x50
 5072 118c 02       		.uleb128 0x2
 5073 118d 74       		.byte	0x74
 5074 118e 00       		.sleb128 0
 5075 118f 00       		.byte	0
 5076 1190 14       		.uleb128 0x14
 5077 1191 0E010000 		.4byte	.LVL306
 5078 1195 EC1B0000 		.4byte	0x1bec
 5079 1199 00       		.byte	0
 5080 119a 14       		.uleb128 0x14
 5081 119b 10000000 		.4byte	.LVL269
 5082 119f 1D1B0000 		.4byte	0x1b1d
 5083 11a3 14       		.uleb128 0x14
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccApaELb.s 			page 149


 5084 11a4 62000000 		.4byte	.LVL282
 5085 11a8 281B0000 		.4byte	0x1b28
 5086 11ac 14       		.uleb128 0x14
 5087 11ad 66000000 		.4byte	.LVL283
 5088 11b1 8E1B0000 		.4byte	0x1b8e
 5089 11b5 14       		.uleb128 0x14
 5090 11b6 6A000000 		.4byte	.LVL284
 5091 11ba 1D1B0000 		.4byte	0x1b1d
 5092 11be 14       		.uleb128 0x14
 5093 11bf 8E000000 		.4byte	.LVL285
 5094 11c3 281B0000 		.4byte	0x1b28
 5095 11c7 16       		.uleb128 0x16
 5096 11c8 96000000 		.4byte	.LVL287
 5097 11cc 9A1B0000 		.4byte	0x1b9a
 5098 11d0 E1110000 		.4byte	0x11e1
 5099 11d4 17       		.uleb128 0x17
 5100 11d5 01       		.uleb128 0x1
 5101 11d6 50       		.byte	0x50
 5102 11d7 02       		.uleb128 0x2
 5103 11d8 91       		.byte	0x91
 5104 11d9 68       		.sleb128 -24
 5105 11da 17       		.uleb128 0x17
 5106 11db 01       		.uleb128 0x1
 5107 11dc 51       		.byte	0x51
 5108 11dd 02       		.uleb128 0x2
 5109 11de 91       		.byte	0x91
 5110 11df 64       		.sleb128 -28
 5111 11e0 00       		.byte	0
 5112 11e1 16       		.uleb128 0x16
 5113 11e2 A0000000 		.4byte	.LVL288
 5114 11e6 A1040000 		.4byte	0x4a1
 5115 11ea F5110000 		.4byte	0x11f5
 5116 11ee 17       		.uleb128 0x17
 5117 11ef 01       		.uleb128 0x1
 5118 11f0 50       		.byte	0x50
 5119 11f1 02       		.uleb128 0x2
 5120 11f2 74       		.byte	0x74
 5121 11f3 00       		.sleb128 0
 5122 11f4 00       		.byte	0
 5123 11f5 14       		.uleb128 0x14
 5124 11f6 AE000000 		.4byte	.LVL289
 5125 11fa 1D1B0000 		.4byte	0x1b1d
 5126 11fe 14       		.uleb128 0x14
 5127 11ff B4000000 		.4byte	.LVL290
 5128 1203 F81B0000 		.4byte	0x1bf8
 5129 1207 14       		.uleb128 0x14
 5130 1208 BA000000 		.4byte	.LVL292
 5131 120c 281B0000 		.4byte	0x1b28
 5132 1210 16       		.uleb128 0x16
 5133 1211 C4000000 		.4byte	.LVL293
 5134 1215 A61B0000 		.4byte	0x1ba6
 5135 1219 24120000 		.4byte	0x1224
 5136 121d 17       		.uleb128 0x17
 5137 121e 01       		.uleb128 0x1
 5138 121f 50       		.byte	0x50
 5139 1220 02       		.uleb128 0x2
 5140 1221 74       		.byte	0x74
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccApaELb.s 			page 150


 5141 1222 24       		.sleb128 36
 5142 1223 00       		.byte	0
 5143 1224 16       		.uleb128 0x16
 5144 1225 CA000000 		.4byte	.LVL294
 5145 1229 77060000 		.4byte	0x677
 5146 122d 38120000 		.4byte	0x1238
 5147 1231 17       		.uleb128 0x17
 5148 1232 01       		.uleb128 0x1
 5149 1233 50       		.byte	0x50
 5150 1234 02       		.uleb128 0x2
 5151 1235 74       		.byte	0x74
 5152 1236 00       		.sleb128 0
 5153 1237 00       		.byte	0
 5154 1238 14       		.uleb128 0x14
 5155 1239 CE000000 		.4byte	.LVL295
 5156 123d B21B0000 		.4byte	0x1bb2
 5157 1241 14       		.uleb128 0x14
 5158 1242 D6000000 		.4byte	.LVL296
 5159 1246 601B0000 		.4byte	0x1b60
 5160 124a 16       		.uleb128 0x16
 5161 124b DE000000 		.4byte	.LVL297
 5162 124f 77060000 		.4byte	0x677
 5163 1253 5E120000 		.4byte	0x125e
 5164 1257 17       		.uleb128 0x17
 5165 1258 01       		.uleb128 0x1
 5166 1259 50       		.byte	0x50
 5167 125a 02       		.uleb128 0x2
 5168 125b 74       		.byte	0x74
 5169 125c 00       		.sleb128 0
 5170 125d 00       		.byte	0
 5171 125e 14       		.uleb128 0x14
 5172 125f E2000000 		.4byte	.LVL298
 5173 1263 B21B0000 		.4byte	0x1bb2
 5174 1267 16       		.uleb128 0x16
 5175 1268 EA000000 		.4byte	.LVL299
 5176 126c 77060000 		.4byte	0x677
 5177 1270 7B120000 		.4byte	0x127b
 5178 1274 17       		.uleb128 0x17
 5179 1275 01       		.uleb128 0x1
 5180 1276 50       		.byte	0x50
 5181 1277 02       		.uleb128 0x2
 5182 1278 74       		.byte	0x74
 5183 1279 00       		.sleb128 0
 5184 127a 00       		.byte	0
 5185 127b 14       		.uleb128 0x14
 5186 127c EE000000 		.4byte	.LVL300
 5187 1280 B21B0000 		.4byte	0x1bb2
 5188 1284 16       		.uleb128 0x16
 5189 1285 F4000000 		.4byte	.LVL301
 5190 1289 A1040000 		.4byte	0x4a1
 5191 128d 98120000 		.4byte	0x1298
 5192 1291 17       		.uleb128 0x17
 5193 1292 01       		.uleb128 0x1
 5194 1293 50       		.byte	0x50
 5195 1294 02       		.uleb128 0x2
 5196 1295 74       		.byte	0x74
 5197 1296 00       		.sleb128 0
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccApaELb.s 			page 151


 5198 1297 00       		.byte	0
 5199 1298 14       		.uleb128 0x14
 5200 1299 00010000 		.4byte	.LVL302
 5201 129d 1D1B0000 		.4byte	0x1b1d
 5202 12a1 14       		.uleb128 0x14
 5203 12a2 12010000 		.4byte	.LVL307
 5204 12a6 281B0000 		.4byte	0x1b28
 5205 12aa 00       		.byte	0
 5206 12ab 1F       		.uleb128 0x1f
 5207 12ac B0040000 		.4byte	.LASF140
 5208 12b0 01       		.byte	0x1
 5209 12b1 7602     		.2byte	0x276
 5210 12b3 98010000 		.4byte	0x198
 5211 12b7 00000000 		.4byte	.LFB38
 5212 12bb 2E000000 		.4byte	.LFE38-.LFB38
 5213 12bf 01       		.uleb128 0x1
 5214 12c0 9C       		.byte	0x9c
 5215 12c1 25130000 		.4byte	0x1325
 5216 12c5 12       		.uleb128 0x12
 5217 12c6 02040000 		.4byte	.LASF129
 5218 12ca 01       		.byte	0x1
 5219 12cb 7602     		.2byte	0x276
 5220 12cd CC020000 		.4byte	0x2cc
 5221 12d1 78100000 		.4byte	.LLST75
 5222 12d5 12       		.uleb128 0x12
 5223 12d6 C8020000 		.4byte	.LASF120
 5224 12da 01       		.byte	0x1
 5225 12db 7602     		.2byte	0x276
 5226 12dd AE010000 		.4byte	0x1ae
 5227 12e1 A4100000 		.4byte	.LLST76
 5228 12e5 13       		.uleb128 0x13
 5229 12e6 C9040000 		.4byte	.LASF96
 5230 12ea 01       		.byte	0x1
 5231 12eb 7802     		.2byte	0x278
 5232 12ed 98010000 		.4byte	0x198
 5233 12f1 D0100000 		.4byte	.LLST77
 5234 12f5 13       		.uleb128 0x13
 5235 12f6 3F060000 		.4byte	.LASF130
 5236 12fa 01       		.byte	0x1
 5237 12fb 7902     		.2byte	0x279
 5238 12fd 7A050000 		.4byte	0x57a
 5239 1301 EF100000 		.4byte	.LLST78
 5240 1305 14       		.uleb128 0x14
 5241 1306 0C000000 		.4byte	.LVL313
 5242 130a BE1B0000 		.4byte	0x1bbe
 5243 130e 18       		.uleb128 0x18
 5244 130f 22000000 		.4byte	.LVL316
 5245 1313 80100000 		.4byte	0x1080
 5246 1317 17       		.uleb128 0x17
 5247 1318 01       		.uleb128 0x1
 5248 1319 50       		.byte	0x50
 5249 131a 02       		.uleb128 0x2
 5250 131b 74       		.byte	0x74
 5251 131c 00       		.sleb128 0
 5252 131d 17       		.uleb128 0x17
 5253 131e 01       		.uleb128 0x1
 5254 131f 51       		.byte	0x51
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccApaELb.s 			page 152


 5255 1320 02       		.uleb128 0x2
 5256 1321 76       		.byte	0x76
 5257 1322 00       		.sleb128 0
 5258 1323 00       		.byte	0
 5259 1324 00       		.byte	0
 5260 1325 1F       		.uleb128 0x1f
 5261 1326 25000000 		.4byte	.LASF141
 5262 132a 01       		.byte	0x1
 5263 132b 4106     		.2byte	0x641
 5264 132d 98010000 		.4byte	0x198
 5265 1331 00000000 		.4byte	.LFB45
 5266 1335 E4000000 		.4byte	.LFE45-.LFB45
 5267 1339 01       		.uleb128 0x1
 5268 133a 9C       		.byte	0x9c
 5269 133b 05150000 		.4byte	0x1505
 5270 133f 12       		.uleb128 0x12
 5271 1340 11070000 		.4byte	.LASF106
 5272 1344 01       		.byte	0x1
 5273 1345 4106     		.2byte	0x641
 5274 1347 CC020000 		.4byte	0x2cc
 5275 134b 1B110000 		.4byte	.LLST79
 5276 134f 12       		.uleb128 0x12
 5277 1350 84090000 		.4byte	.LASF103
 5278 1354 01       		.byte	0x1
 5279 1355 4106     		.2byte	0x641
 5280 1357 72060000 		.4byte	0x672
 5281 135b 47110000 		.4byte	.LLST80
 5282 135f 12       		.uleb128 0x12
 5283 1360 C8020000 		.4byte	.LASF120
 5284 1364 01       		.byte	0x1
 5285 1365 4106     		.2byte	0x641
 5286 1367 AE010000 		.4byte	0x1ae
 5287 136b 73110000 		.4byte	.LLST81
 5288 136f 13       		.uleb128 0x13
 5289 1370 AE070000 		.4byte	.LASF121
 5290 1374 01       		.byte	0x1
 5291 1375 4306     		.2byte	0x643
 5292 1377 98010000 		.4byte	0x198
 5293 137b AA110000 		.4byte	.LLST82
 5294 137f 20       		.uleb128 0x20
 5295 1380 98030000 		.4byte	.LASF123
 5296 1384 01       		.byte	0x1
 5297 1385 4406     		.2byte	0x644
 5298 1387 C1020000 		.4byte	0x2c1
 5299 138b 02       		.uleb128 0x2
 5300 138c 91       		.byte	0x91
 5301 138d 68       		.sleb128 -24
 5302 138e 13       		.uleb128 0x13
 5303 138f FB020000 		.4byte	.LASF142
 5304 1393 01       		.byte	0x1
 5305 1394 4506     		.2byte	0x645
 5306 1396 0C030000 		.4byte	0x30c
 5307 139a EB110000 		.4byte	.LLST83
 5308 139e 13       		.uleb128 0x13
 5309 139f 8D090000 		.4byte	.LASF94
 5310 13a3 01       		.byte	0x1
 5311 13a4 4606     		.2byte	0x646
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccApaELb.s 			page 153


 5312 13a6 7A050000 		.4byte	0x57a
 5313 13aa FE110000 		.4byte	.LLST84
 5314 13ae 1A       		.uleb128 0x1a
 5315 13af 10000000 		.4byte	.LBB14
 5316 13b3 4A000000 		.4byte	.LBE14-.LBB14
 5317 13b7 25140000 		.4byte	0x1425
 5318 13bb 13       		.uleb128 0x13
 5319 13bc 72090000 		.4byte	.LASF79
 5320 13c0 01       		.byte	0x1
 5321 13c1 5F06     		.2byte	0x65f
 5322 13c3 73080000 		.4byte	0x873
 5323 13c7 2A120000 		.4byte	.LLST85
 5324 13cb 16       		.uleb128 0x16
 5325 13cc 20000000 		.4byte	.LVL326
 5326 13d0 2B060000 		.4byte	0x62b
 5327 13d4 E5130000 		.4byte	0x13e5
 5328 13d8 17       		.uleb128 0x17
 5329 13d9 01       		.uleb128 0x1
 5330 13da 50       		.byte	0x50
 5331 13db 02       		.uleb128 0x2
 5332 13dc 74       		.byte	0x74
 5333 13dd 00       		.sleb128 0
 5334 13de 17       		.uleb128 0x17
 5335 13df 01       		.uleb128 0x1
 5336 13e0 51       		.byte	0x51
 5337 13e1 02       		.uleb128 0x2
 5338 13e2 75       		.byte	0x75
 5339 13e3 00       		.sleb128 0
 5340 13e4 00       		.byte	0
 5341 13e5 16       		.uleb128 0x16
 5342 13e6 30000000 		.4byte	.LVL327
 5343 13ea 481B0000 		.4byte	0x1b48
 5344 13ee F9130000 		.4byte	0x13f9
 5345 13f2 17       		.uleb128 0x17
 5346 13f3 01       		.uleb128 0x1
 5347 13f4 50       		.byte	0x50
 5348 13f5 02       		.uleb128 0x2
 5349 13f6 74       		.byte	0x74
 5350 13f7 24       		.sleb128 36
 5351 13f8 00       		.byte	0
 5352 13f9 14       		.uleb128 0x14
 5353 13fa 38000000 		.4byte	.LVL328
 5354 13fe 601B0000 		.4byte	0x1b60
 5355 1402 14       		.uleb128 0x14
 5356 1403 3C000000 		.4byte	.LVL329
 5357 1407 281B0000 		.4byte	0x1b28
 5358 140b 14       		.uleb128 0x14
 5359 140c 4A000000 		.4byte	.LVL332
 5360 1410 281B0000 		.4byte	0x1b28
 5361 1414 18       		.uleb128 0x18
 5362 1415 58000000 		.4byte	.LVL333
 5363 1419 821B0000 		.4byte	0x1b82
 5364 141d 17       		.uleb128 0x17
 5365 141e 01       		.uleb128 0x1
 5366 141f 50       		.byte	0x50
 5367 1420 02       		.uleb128 0x2
 5368 1421 91       		.byte	0x91
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccApaELb.s 			page 154


 5369 1422 68       		.sleb128 -24
 5370 1423 00       		.byte	0
 5371 1424 00       		.byte	0
 5372 1425 14       		.uleb128 0x14
 5373 1426 10000000 		.4byte	.LVL323
 5374 142a 1D1B0000 		.4byte	0x1b1d
 5375 142e 14       		.uleb128 0x14
 5376 142f 5E000000 		.4byte	.LVL335
 5377 1433 281B0000 		.4byte	0x1b28
 5378 1437 14       		.uleb128 0x14
 5379 1438 62000000 		.4byte	.LVL336
 5380 143c 8E1B0000 		.4byte	0x1b8e
 5381 1440 14       		.uleb128 0x14
 5382 1441 66000000 		.4byte	.LVL337
 5383 1445 1D1B0000 		.4byte	0x1b1d
 5384 1449 14       		.uleb128 0x14
 5385 144a 8A000000 		.4byte	.LVL338
 5386 144e 281B0000 		.4byte	0x1b28
 5387 1452 16       		.uleb128 0x16
 5388 1453 92000000 		.4byte	.LVL340
 5389 1457 9A1B0000 		.4byte	0x1b9a
 5390 145b 6C140000 		.4byte	0x146c
 5391 145f 17       		.uleb128 0x17
 5392 1460 01       		.uleb128 0x1
 5393 1461 50       		.byte	0x50
 5394 1462 02       		.uleb128 0x2
 5395 1463 91       		.byte	0x91
 5396 1464 68       		.sleb128 -24
 5397 1465 17       		.uleb128 0x17
 5398 1466 01       		.uleb128 0x1
 5399 1467 51       		.byte	0x51
 5400 1468 02       		.uleb128 0x2
 5401 1469 91       		.byte	0x91
 5402 146a 64       		.sleb128 -28
 5403 146b 00       		.byte	0
 5404 146c 16       		.uleb128 0x16
 5405 146d 9C000000 		.4byte	.LVL341
 5406 1471 A1040000 		.4byte	0x4a1
 5407 1475 80140000 		.4byte	0x1480
 5408 1479 17       		.uleb128 0x17
 5409 147a 01       		.uleb128 0x1
 5410 147b 50       		.byte	0x50
 5411 147c 02       		.uleb128 0x2
 5412 147d 74       		.byte	0x74
 5413 147e 00       		.sleb128 0
 5414 147f 00       		.byte	0
 5415 1480 16       		.uleb128 0x16
 5416 1481 AA000000 		.4byte	.LVL342
 5417 1485 A61B0000 		.4byte	0x1ba6
 5418 1489 94140000 		.4byte	0x1494
 5419 148d 17       		.uleb128 0x17
 5420 148e 01       		.uleb128 0x1
 5421 148f 50       		.byte	0x50
 5422 1490 02       		.uleb128 0x2
 5423 1491 74       		.byte	0x74
 5424 1492 24       		.sleb128 36
 5425 1493 00       		.byte	0
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccApaELb.s 			page 155


 5426 1494 16       		.uleb128 0x16
 5427 1495 B0000000 		.4byte	.LVL343
 5428 1499 77060000 		.4byte	0x677
 5429 149d A8140000 		.4byte	0x14a8
 5430 14a1 17       		.uleb128 0x17
 5431 14a2 01       		.uleb128 0x1
 5432 14a3 50       		.byte	0x50
 5433 14a4 02       		.uleb128 0x2
 5434 14a5 74       		.byte	0x74
 5435 14a6 00       		.sleb128 0
 5436 14a7 00       		.byte	0
 5437 14a8 14       		.uleb128 0x14
 5438 14a9 B4000000 		.4byte	.LVL344
 5439 14ad B21B0000 		.4byte	0x1bb2
 5440 14b1 14       		.uleb128 0x14
 5441 14b2 BC000000 		.4byte	.LVL345
 5442 14b6 601B0000 		.4byte	0x1b60
 5443 14ba 16       		.uleb128 0x16
 5444 14bb C4000000 		.4byte	.LVL346
 5445 14bf 77060000 		.4byte	0x677
 5446 14c3 CE140000 		.4byte	0x14ce
 5447 14c7 17       		.uleb128 0x17
 5448 14c8 01       		.uleb128 0x1
 5449 14c9 50       		.byte	0x50
 5450 14ca 02       		.uleb128 0x2
 5451 14cb 74       		.byte	0x74
 5452 14cc 00       		.sleb128 0
 5453 14cd 00       		.byte	0
 5454 14ce 14       		.uleb128 0x14
 5455 14cf C8000000 		.4byte	.LVL347
 5456 14d3 B21B0000 		.4byte	0x1bb2
 5457 14d7 16       		.uleb128 0x16
 5458 14d8 D0000000 		.4byte	.LVL348
 5459 14dc 77060000 		.4byte	0x677
 5460 14e0 EB140000 		.4byte	0x14eb
 5461 14e4 17       		.uleb128 0x17
 5462 14e5 01       		.uleb128 0x1
 5463 14e6 50       		.byte	0x50
 5464 14e7 02       		.uleb128 0x2
 5465 14e8 74       		.byte	0x74
 5466 14e9 00       		.sleb128 0
 5467 14ea 00       		.byte	0
 5468 14eb 14       		.uleb128 0x14
 5469 14ec D4000000 		.4byte	.LVL349
 5470 14f0 B21B0000 		.4byte	0x1bb2
 5471 14f4 18       		.uleb128 0x18
 5472 14f5 DA000000 		.4byte	.LVL350
 5473 14f9 A1040000 		.4byte	0x4a1
 5474 14fd 17       		.uleb128 0x17
 5475 14fe 01       		.uleb128 0x1
 5476 14ff 50       		.byte	0x50
 5477 1500 02       		.uleb128 0x2
 5478 1501 74       		.byte	0x74
 5479 1502 00       		.sleb128 0
 5480 1503 00       		.byte	0
 5481 1504 00       		.byte	0
 5482 1505 1F       		.uleb128 0x1f
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccApaELb.s 			page 156


 5483 1506 2A060000 		.4byte	.LASF143
 5484 150a 01       		.byte	0x1
 5485 150b D706     		.2byte	0x6d7
 5486 150d 98010000 		.4byte	0x198
 5487 1511 00000000 		.4byte	.LFB46
 5488 1515 72000000 		.4byte	.LFE46-.LFB46
 5489 1519 01       		.uleb128 0x1
 5490 151a 9C       		.byte	0x9c
 5491 151b F8150000 		.4byte	0x15f8
 5492 151f 12       		.uleb128 0x12
 5493 1520 11070000 		.4byte	.LASF106
 5494 1524 01       		.byte	0x1
 5495 1525 D706     		.2byte	0x6d7
 5496 1527 CC020000 		.4byte	0x2cc
 5497 152b 48120000 		.4byte	.LLST86
 5498 152f 12       		.uleb128 0x12
 5499 1530 84090000 		.4byte	.LASF103
 5500 1534 01       		.byte	0x1
 5501 1535 D706     		.2byte	0x6d7
 5502 1537 72060000 		.4byte	0x672
 5503 153b F1120000 		.4byte	.LLST87
 5504 153f 12       		.uleb128 0x12
 5505 1540 9C000000 		.4byte	.LASF132
 5506 1544 01       		.byte	0x1
 5507 1545 D706     		.2byte	0x6d7
 5508 1547 CA0D0000 		.4byte	0xdca
 5509 154b 1C130000 		.4byte	.LLST88
 5510 154f 13       		.uleb128 0x13
 5511 1550 C9040000 		.4byte	.LASF96
 5512 1554 01       		.byte	0x1
 5513 1555 D906     		.2byte	0x6d9
 5514 1557 98010000 		.4byte	0x198
 5515 155b 3B130000 		.4byte	.LLST89
 5516 155f 13       		.uleb128 0x13
 5517 1560 33090000 		.4byte	.LASF133
 5518 1564 01       		.byte	0x1
 5519 1565 DA06     		.2byte	0x6da
 5520 1567 A3010000 		.4byte	0x1a3
 5521 156b 59130000 		.4byte	.LLST90
 5522 156f 13       		.uleb128 0x13
 5523 1570 8D090000 		.4byte	.LASF94
 5524 1574 01       		.byte	0x1
 5525 1575 DB06     		.2byte	0x6db
 5526 1577 7A050000 		.4byte	0x57a
 5527 157b 8D130000 		.4byte	.LLST91
 5528 157f 1A       		.uleb128 0x1a
 5529 1580 10000000 		.4byte	.LBB15
 5530 1584 56000000 		.4byte	.LBE15-.LBB15
 5531 1588 DE150000 		.4byte	0x15de
 5532 158c 13       		.uleb128 0x13
 5533 158d 72090000 		.4byte	.LASF79
 5534 1591 01       		.byte	0x1
 5535 1592 F206     		.2byte	0x6f2
 5536 1594 73080000 		.4byte	0x873
 5537 1598 36140000 		.4byte	.LLST92
 5538 159c 15       		.uleb128 0x15
 5539 159d 48000000 		.4byte	.Ldebug_ranges0+0x48
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccApaELb.s 			page 157


 5540 15a1 13       		.uleb128 0x13
 5541 15a2 34080000 		.4byte	.LASF82
 5542 15a6 01       		.byte	0x1
 5543 15a7 F706     		.2byte	0x6f7
 5544 15a9 26060000 		.4byte	0x626
 5545 15ad 49140000 		.4byte	.LLST93
 5546 15b1 16       		.uleb128 0x16
 5547 15b2 24000000 		.4byte	.LVL361
 5548 15b6 2B060000 		.4byte	0x62b
 5549 15ba CC150000 		.4byte	0x15cc
 5550 15be 17       		.uleb128 0x17
 5551 15bf 01       		.uleb128 0x1
 5552 15c0 50       		.byte	0x50
 5553 15c1 02       		.uleb128 0x2
 5554 15c2 74       		.byte	0x74
 5555 15c3 00       		.sleb128 0
 5556 15c4 17       		.uleb128 0x17
 5557 15c5 01       		.uleb128 0x1
 5558 15c6 51       		.byte	0x51
 5559 15c7 03       		.uleb128 0x3
 5560 15c8 7D       		.byte	0x7d
 5561 15c9 00       		.sleb128 0
 5562 15ca 06       		.byte	0x6
 5563 15cb 00       		.byte	0
 5564 15cc 18       		.uleb128 0x18
 5565 15cd 3A000000 		.4byte	.LVL362
 5566 15d1 481B0000 		.4byte	0x1b48
 5567 15d5 17       		.uleb128 0x17
 5568 15d6 01       		.uleb128 0x1
 5569 15d7 50       		.byte	0x50
 5570 15d8 02       		.uleb128 0x2
 5571 15d9 74       		.byte	0x74
 5572 15da 10       		.sleb128 16
 5573 15db 00       		.byte	0
 5574 15dc 00       		.byte	0
 5575 15dd 00       		.byte	0
 5576 15de 14       		.uleb128 0x14
 5577 15df 0E000000 		.4byte	.LVL356
 5578 15e3 CA1B0000 		.4byte	0x1bca
 5579 15e7 18       		.uleb128 0x18
 5580 15e8 6C000000 		.4byte	.LVL374
 5581 15ec D51B0000 		.4byte	0x1bd5
 5582 15f0 17       		.uleb128 0x17
 5583 15f1 01       		.uleb128 0x1
 5584 15f2 50       		.byte	0x50
 5585 15f3 02       		.uleb128 0x2
 5586 15f4 75       		.byte	0x75
 5587 15f5 00       		.sleb128 0
 5588 15f6 00       		.byte	0
 5589 15f7 00       		.byte	0
 5590 15f8 1F       		.uleb128 0x1f
 5591 15f9 FE000000 		.4byte	.LASF144
 5592 15fd 01       		.byte	0x1
 5593 15fe 3207     		.2byte	0x732
 5594 1600 98010000 		.4byte	0x198
 5595 1604 00000000 		.4byte	.LFB47
 5596 1608 2E000000 		.4byte	.LFE47-.LFB47
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccApaELb.s 			page 158


 5597 160c 01       		.uleb128 0x1
 5598 160d 9C       		.byte	0x9c
 5599 160e A6160000 		.4byte	0x16a6
 5600 1612 12       		.uleb128 0x12
 5601 1613 11070000 		.4byte	.LASF106
 5602 1617 01       		.byte	0x1
 5603 1618 3207     		.2byte	0x732
 5604 161a CC020000 		.4byte	0x2cc
 5605 161e 67140000 		.4byte	.LLST94
 5606 1622 12       		.uleb128 0x12
 5607 1623 84090000 		.4byte	.LASF103
 5608 1627 01       		.byte	0x1
 5609 1628 3207     		.2byte	0x732
 5610 162a 72060000 		.4byte	0x672
 5611 162e AC140000 		.4byte	.LLST95
 5612 1632 13       		.uleb128 0x13
 5613 1633 C9040000 		.4byte	.LASF96
 5614 1637 01       		.byte	0x1
 5615 1638 3407     		.2byte	0x734
 5616 163a 98010000 		.4byte	0x198
 5617 163e D8140000 		.4byte	.LLST96
 5618 1642 13       		.uleb128 0x13
 5619 1643 33090000 		.4byte	.LASF133
 5620 1647 01       		.byte	0x1
 5621 1648 3507     		.2byte	0x735
 5622 164a A3010000 		.4byte	0x1a3
 5623 164e 02150000 		.4byte	.LLST97
 5624 1652 13       		.uleb128 0x13
 5625 1653 FB020000 		.4byte	.LASF142
 5626 1657 01       		.byte	0x1
 5627 1658 3607     		.2byte	0x736
 5628 165a 0C030000 		.4byte	0x30c
 5629 165e 36150000 		.4byte	.LLST98
 5630 1662 13       		.uleb128 0x13
 5631 1663 8D090000 		.4byte	.LASF94
 5632 1667 01       		.byte	0x1
 5633 1668 3707     		.2byte	0x737
 5634 166a 7A050000 		.4byte	0x57a
 5635 166e 49150000 		.4byte	.LLST99
 5636 1672 14       		.uleb128 0x14
 5637 1673 0A000000 		.4byte	.LVL381
 5638 1677 CA1B0000 		.4byte	0x1bca
 5639 167b 16       		.uleb128 0x16
 5640 167c 1C000000 		.4byte	.LVL385
 5641 1680 2B060000 		.4byte	0x62b
 5642 1684 95160000 		.4byte	0x1695
 5643 1688 17       		.uleb128 0x17
 5644 1689 01       		.uleb128 0x1
 5645 168a 50       		.byte	0x50
 5646 168b 02       		.uleb128 0x2
 5647 168c 74       		.byte	0x74
 5648 168d 00       		.sleb128 0
 5649 168e 17       		.uleb128 0x17
 5650 168f 01       		.uleb128 0x1
 5651 1690 51       		.byte	0x51
 5652 1691 02       		.uleb128 0x2
 5653 1692 76       		.byte	0x76
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccApaELb.s 			page 159


 5654 1693 00       		.sleb128 0
 5655 1694 00       		.byte	0
 5656 1695 18       		.uleb128 0x18
 5657 1696 2A000000 		.4byte	.LVL390
 5658 169a D51B0000 		.4byte	0x1bd5
 5659 169e 17       		.uleb128 0x17
 5660 169f 01       		.uleb128 0x1
 5661 16a0 50       		.byte	0x50
 5662 16a1 02       		.uleb128 0x2
 5663 16a2 75       		.byte	0x75
 5664 16a3 00       		.sleb128 0
 5665 16a4 00       		.byte	0
 5666 16a5 00       		.byte	0
 5667 16a6 1F       		.uleb128 0x1f
 5668 16a7 51000000 		.4byte	.LASF145
 5669 16ab 01       		.byte	0x1
 5670 16ac 6807     		.2byte	0x768
 5671 16ae A3010000 		.4byte	0x1a3
 5672 16b2 00000000 		.4byte	.LFB48
 5673 16b6 12000000 		.4byte	.LFE48-.LFB48
 5674 16ba 01       		.uleb128 0x1
 5675 16bb 9C       		.byte	0x9c
 5676 16bc F3160000 		.4byte	0x16f3
 5677 16c0 12       		.uleb128 0x12
 5678 16c1 11070000 		.4byte	.LASF106
 5679 16c5 01       		.byte	0x1
 5680 16c6 6807     		.2byte	0x768
 5681 16c8 F3160000 		.4byte	0x16f3
 5682 16cc 8E150000 		.4byte	.LLST100
 5683 16d0 13       		.uleb128 0x13
 5684 16d1 F1050000 		.4byte	.LASF146
 5685 16d5 01       		.byte	0x1
 5686 16d6 6A07     		.2byte	0x76a
 5687 16d8 A3010000 		.4byte	0x1a3
 5688 16dc BA150000 		.4byte	.LLST101
 5689 16e0 14       		.uleb128 0x14
 5690 16e1 08000000 		.4byte	.LVL395
 5691 16e5 1D1B0000 		.4byte	0x1b1d
 5692 16e9 14       		.uleb128 0x14
 5693 16ea 0E000000 		.4byte	.LVL397
 5694 16ee 281B0000 		.4byte	0x1b28
 5695 16f2 00       		.byte	0
 5696 16f3 07       		.uleb128 0x7
 5697 16f4 CC020000 		.4byte	0x2cc
 5698 16f8 1F       		.uleb128 0x1f
 5699 16f9 240C0000 		.4byte	.LASF147
 5700 16fd 01       		.byte	0x1
 5701 16fe 7807     		.2byte	0x778
 5702 1700 A3010000 		.4byte	0x1a3
 5703 1704 00000000 		.4byte	.LFB49
 5704 1708 16000000 		.4byte	.LFE49-.LFB49
 5705 170c 01       		.uleb128 0x1
 5706 170d 9C       		.byte	0x9c
 5707 170e 55170000 		.4byte	0x1755
 5708 1712 12       		.uleb128 0x12
 5709 1713 11070000 		.4byte	.LASF106
 5710 1717 01       		.byte	0x1
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccApaELb.s 			page 160


 5711 1718 7807     		.2byte	0x778
 5712 171a F3160000 		.4byte	0x16f3
 5713 171e D8150000 		.4byte	.LLST102
 5714 1722 13       		.uleb128 0x13
 5715 1723 F1050000 		.4byte	.LASF146
 5716 1727 01       		.byte	0x1
 5717 1728 7A07     		.2byte	0x77a
 5718 172a A3010000 		.4byte	0x1a3
 5719 172e 04160000 		.4byte	.LLST103
 5720 1732 13       		.uleb128 0x13
 5721 1733 8D090000 		.4byte	.LASF94
 5722 1737 01       		.byte	0x1
 5723 1738 7B07     		.2byte	0x77b
 5724 173a 74050000 		.4byte	0x574
 5725 173e 22160000 		.4byte	.LLST104
 5726 1742 14       		.uleb128 0x14
 5727 1743 08000000 		.4byte	.LVL401
 5728 1747 1D1B0000 		.4byte	0x1b1d
 5729 174b 14       		.uleb128 0x14
 5730 174c 12000000 		.4byte	.LVL404
 5731 1750 281B0000 		.4byte	0x1b28
 5732 1754 00       		.byte	0
 5733 1755 1F       		.uleb128 0x1f
 5734 1756 24070000 		.4byte	.LASF148
 5735 175a 01       		.byte	0x1
 5736 175b 8A07     		.2byte	0x78a
 5737 175d A3010000 		.4byte	0x1a3
 5738 1761 00000000 		.4byte	.LFB50
 5739 1765 04000000 		.4byte	.LFE50-.LFB50
 5740 1769 01       		.uleb128 0x1
 5741 176a 9C       		.byte	0x9c
 5742 176b 8E170000 		.4byte	0x178e
 5743 176f 12       		.uleb128 0x12
 5744 1770 11070000 		.4byte	.LASF106
 5745 1774 01       		.byte	0x1
 5746 1775 8A07     		.2byte	0x78a
 5747 1777 F3160000 		.4byte	0x16f3
 5748 177b 4E160000 		.4byte	.LLST105
 5749 177f 20       		.uleb128 0x20
 5750 1780 F1050000 		.4byte	.LASF146
 5751 1784 01       		.byte	0x1
 5752 1785 8C07     		.2byte	0x78c
 5753 1787 A3010000 		.4byte	0x1a3
 5754 178b 01       		.uleb128 0x1
 5755 178c 50       		.byte	0x50
 5756 178d 00       		.byte	0
 5757 178e 1F       		.uleb128 0x1f
 5758 178f B6000000 		.4byte	.LASF149
 5759 1793 01       		.byte	0x1
 5760 1794 E708     		.2byte	0x8e7
 5761 1796 98010000 		.4byte	0x198
 5762 179a 00000000 		.4byte	.LFB57
 5763 179e 0E000000 		.4byte	.LFE57-.LFB57
 5764 17a2 01       		.uleb128 0x1
 5765 17a3 9C       		.byte	0x9c
 5766 17a4 C7170000 		.4byte	0x17c7
 5767 17a8 12       		.uleb128 0x12
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccApaELb.s 			page 161


 5768 17a9 11070000 		.4byte	.LASF106
 5769 17ad 01       		.byte	0x1
 5770 17ae E708     		.2byte	0x8e7
 5771 17b0 F3160000 		.4byte	0x16f3
 5772 17b4 6F160000 		.4byte	.LLST106
 5773 17b8 20       		.uleb128 0x20
 5774 17b9 C9040000 		.4byte	.LASF96
 5775 17bd 01       		.byte	0x1
 5776 17be E908     		.2byte	0x8e9
 5777 17c0 98010000 		.4byte	0x198
 5778 17c4 01       		.uleb128 0x1
 5779 17c5 50       		.byte	0x50
 5780 17c6 00       		.byte	0
 5781 17c7 1F       		.uleb128 0x1f
 5782 17c8 81080000 		.4byte	.LASF150
 5783 17cc 01       		.byte	0x1
 5784 17cd 0E09     		.2byte	0x90e
 5785 17cf 98010000 		.4byte	0x198
 5786 17d3 00000000 		.4byte	.LFB59
 5787 17d7 10000000 		.4byte	.LFE59-.LFB59
 5788 17db 01       		.uleb128 0x1
 5789 17dc 9C       		.byte	0x9c
 5790 17dd 00180000 		.4byte	0x1800
 5791 17e1 12       		.uleb128 0x12
 5792 17e2 11070000 		.4byte	.LASF106
 5793 17e6 01       		.byte	0x1
 5794 17e7 0E09     		.2byte	0x90e
 5795 17e9 F3160000 		.4byte	0x16f3
 5796 17ed A9160000 		.4byte	.LLST107
 5797 17f1 20       		.uleb128 0x20
 5798 17f2 C9040000 		.4byte	.LASF96
 5799 17f6 01       		.byte	0x1
 5800 17f7 1009     		.2byte	0x910
 5801 17f9 98010000 		.4byte	0x198
 5802 17fd 01       		.uleb128 0x1
 5803 17fe 50       		.byte	0x50
 5804 17ff 00       		.byte	0
 5805 1800 23       		.uleb128 0x23
 5806 1801 3B050000 		.4byte	.LASF153
 5807 1805 01       		.byte	0x1
 5808 1806 350A     		.2byte	0xa35
 5809 1808 00000000 		.4byte	.LFB60
 5810 180c 28000000 		.4byte	.LFE60-.LFB60
 5811 1810 01       		.uleb128 0x1
 5812 1811 9C       		.byte	0x9c
 5813 1812 42180000 		.4byte	0x1842
 5814 1816 1E       		.uleb128 0x1e
 5815 1817 11070000 		.4byte	.LASF106
 5816 181b 01       		.byte	0x1
 5817 181c 350A     		.2byte	0xa35
 5818 181e CC020000 		.4byte	0x2cc
 5819 1822 01       		.uleb128 0x1
 5820 1823 50       		.byte	0x50
 5821 1824 1E       		.uleb128 0x1e
 5822 1825 FC090000 		.4byte	.LASF88
 5823 1829 01       		.byte	0x1
 5824 182a 350A     		.2byte	0xa35
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccApaELb.s 			page 162


 5825 182c AE000000 		.4byte	0xae
 5826 1830 01       		.uleb128 0x1
 5827 1831 51       		.byte	0x51
 5828 1832 24       		.uleb128 0x24
 5829 1833 757800   		.ascii	"ux\000"
 5830 1836 01       		.byte	0x1
 5831 1837 370A     		.2byte	0xa37
 5832 1839 A3010000 		.4byte	0x1a3
 5833 183d E3160000 		.4byte	.LLST108
 5834 1841 00       		.byte	0
 5835 1842 1F       		.uleb128 0x1f
 5836 1843 3B0C0000 		.4byte	.LASF151
 5837 1847 01       		.byte	0x1
 5838 1848 520A     		.2byte	0xa52
 5839 184a AE000000 		.4byte	0xae
 5840 184e 00000000 		.4byte	.LFB61
 5841 1852 24000000 		.4byte	.LFE61-.LFB61
 5842 1856 01       		.uleb128 0x1
 5843 1857 9C       		.byte	0x9c
 5844 1858 8C180000 		.4byte	0x188c
 5845 185c 12       		.uleb128 0x12
 5846 185d 11070000 		.4byte	.LASF106
 5847 1861 01       		.byte	0x1
 5848 1862 520A     		.2byte	0xa52
 5849 1864 CC020000 		.4byte	0x2cc
 5850 1868 0D170000 		.4byte	.LLST109
 5851 186c 24       		.uleb128 0x24
 5852 186d 757800   		.ascii	"ux\000"
 5853 1870 01       		.byte	0x1
 5854 1871 540A     		.2byte	0xa54
 5855 1873 A3010000 		.4byte	0x1a3
 5856 1877 47170000 		.4byte	.LLST110
 5857 187b 13       		.uleb128 0x13
 5858 187c 88060000 		.4byte	.LASF152
 5859 1880 01       		.byte	0x1
 5860 1881 550A     		.2byte	0xa55
 5861 1883 AE000000 		.4byte	0xae
 5862 1887 71170000 		.4byte	.LLST111
 5863 188b 00       		.byte	0
 5864 188c 23       		.uleb128 0x23
 5865 188d 9B0A0000 		.4byte	.LASF154
 5866 1891 01       		.byte	0x1
 5867 1892 6E0A     		.2byte	0xa6e
 5868 1894 00000000 		.4byte	.LFB62
 5869 1898 28000000 		.4byte	.LFE62-.LFB62
 5870 189c 01       		.uleb128 0x1
 5871 189d 9C       		.byte	0x9c
 5872 189e C0180000 		.4byte	0x18c0
 5873 18a2 1E       		.uleb128 0x1e
 5874 18a3 11070000 		.4byte	.LASF106
 5875 18a7 01       		.byte	0x1
 5876 18a8 6E0A     		.2byte	0xa6e
 5877 18aa CC020000 		.4byte	0x2cc
 5878 18ae 01       		.uleb128 0x1
 5879 18af 50       		.byte	0x50
 5880 18b0 24       		.uleb128 0x24
 5881 18b1 757800   		.ascii	"ux\000"
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccApaELb.s 			page 163


 5882 18b4 01       		.byte	0x1
 5883 18b5 700A     		.2byte	0xa70
 5884 18b7 A3010000 		.4byte	0x1a3
 5885 18bb A7170000 		.4byte	.LLST112
 5886 18bf 00       		.byte	0
 5887 18c0 23       		.uleb128 0x23
 5888 18c1 AB060000 		.4byte	.LASF155
 5889 18c5 01       		.byte	0x1
 5890 18c6 9607     		.2byte	0x796
 5891 18c8 00000000 		.4byte	.LFB51
 5892 18cc 10000000 		.4byte	.LFE51-.LFB51
 5893 18d0 01       		.uleb128 0x1
 5894 18d1 9C       		.byte	0x9c
 5895 18d2 1B190000 		.4byte	0x191b
 5896 18d6 12       		.uleb128 0x12
 5897 18d7 11070000 		.4byte	.LASF106
 5898 18db 01       		.byte	0x1
 5899 18dc 9607     		.2byte	0x796
 5900 18de CC020000 		.4byte	0x2cc
 5901 18e2 D1170000 		.4byte	.LLST113
 5902 18e6 13       		.uleb128 0x13
 5903 18e7 8D090000 		.4byte	.LASF94
 5904 18eb 01       		.byte	0x1
 5905 18ec 9807     		.2byte	0x798
 5906 18ee 7A050000 		.4byte	0x57a
 5907 18f2 FD170000 		.4byte	.LLST114
 5908 18f6 16       		.uleb128 0x16
 5909 18f7 08000000 		.4byte	.LVL438
 5910 18fb 8C180000 		.4byte	0x188c
 5911 18ff 0A190000 		.4byte	0x190a
 5912 1903 17       		.uleb128 0x17
 5913 1904 01       		.uleb128 0x1
 5914 1905 50       		.byte	0x50
 5915 1906 02       		.uleb128 0x2
 5916 1907 74       		.byte	0x74
 5917 1908 00       		.sleb128 0
 5918 1909 00       		.byte	0
 5919 190a 18       		.uleb128 0x18
 5920 190b 0E000000 		.4byte	.LVL439
 5921 190f 041C0000 		.4byte	0x1c04
 5922 1913 17       		.uleb128 0x17
 5923 1914 01       		.uleb128 0x1
 5924 1915 50       		.byte	0x50
 5925 1916 02       		.uleb128 0x2
 5926 1917 74       		.byte	0x74
 5927 1918 00       		.sleb128 0
 5928 1919 00       		.byte	0
 5929 191a 00       		.byte	0
 5930 191b 1F       		.uleb128 0x1f
 5931 191c 37020000 		.4byte	.LASF156
 5932 1920 01       		.byte	0x1
 5933 1921 B20A     		.2byte	0xab2
 5934 1923 D7020000 		.4byte	0x2d7
 5935 1927 00000000 		.4byte	.LFB63
 5936 192b 0C000000 		.4byte	.LFE63-.LFB63
 5937 192f 01       		.uleb128 0x1
 5938 1930 9C       		.byte	0x9c
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccApaELb.s 			page 164


 5939 1931 6F190000 		.4byte	0x196f
 5940 1935 12       		.uleb128 0x12
 5941 1936 EF030000 		.4byte	.LASF157
 5942 193a 01       		.byte	0x1
 5943 193b B20A     		.2byte	0xab2
 5944 193d 73080000 		.4byte	0x873
 5945 1941 29180000 		.4byte	.LLST115
 5946 1945 20       		.uleb128 0x20
 5947 1946 8D090000 		.4byte	.LASF94
 5948 194a 01       		.byte	0x1
 5949 194b B40A     		.2byte	0xab4
 5950 194d D7020000 		.4byte	0x2d7
 5951 1951 01       		.uleb128 0x1
 5952 1952 50       		.byte	0x50
 5953 1953 18       		.uleb128 0x18
 5954 1954 0A000000 		.4byte	.LVL442
 5955 1958 7D080000 		.4byte	0x87d
 5956 195c 17       		.uleb128 0x17
 5957 195d 01       		.uleb128 0x1
 5958 195e 50       		.byte	0x50
 5959 195f 03       		.uleb128 0x3
 5960 1960 F3       		.byte	0xf3
 5961 1961 01       		.uleb128 0x1
 5962 1962 50       		.byte	0x50
 5963 1963 17       		.uleb128 0x17
 5964 1964 01       		.uleb128 0x1
 5965 1965 51       		.byte	0x51
 5966 1966 01       		.uleb128 0x1
 5967 1967 34       		.byte	0x34
 5968 1968 17       		.uleb128 0x17
 5969 1969 01       		.uleb128 0x1
 5970 196a 52       		.byte	0x52
 5971 196b 01       		.uleb128 0x1
 5972 196c 30       		.byte	0x30
 5973 196d 00       		.byte	0
 5974 196e 00       		.byte	0
 5975 196f 1F       		.uleb128 0x1f
 5976 1970 BC070000 		.4byte	.LASF158
 5977 1974 01       		.byte	0x1
 5978 1975 C00A     		.2byte	0xac0
 5979 1977 98010000 		.4byte	0x198
 5980 197b 00000000 		.4byte	.LFB64
 5981 197f 2A000000 		.4byte	.LFE64-.LFB64
 5982 1983 01       		.uleb128 0x1
 5983 1984 9C       		.byte	0x9c
 5984 1985 CC190000 		.4byte	0x19cc
 5985 1989 12       		.uleb128 0x12
 5986 198a 21090000 		.4byte	.LASF159
 5987 198e 01       		.byte	0x1
 5988 198f C00A     		.2byte	0xac0
 5989 1991 E2020000 		.4byte	0x2e2
 5990 1995 4A180000 		.4byte	.LLST116
 5991 1999 12       		.uleb128 0x12
 5992 199a 6D070000 		.4byte	.LASF160
 5993 199e 01       		.byte	0x1
 5994 199f C00A     		.2byte	0xac0
 5995 19a1 D7020000 		.4byte	0x2d7
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccApaELb.s 			page 165


 5996 19a5 A8180000 		.4byte	.LLST117
 5997 19a9 13       		.uleb128 0x13
 5998 19aa C9040000 		.4byte	.LASF96
 5999 19ae 01       		.byte	0x1
 6000 19af C20A     		.2byte	0xac2
 6001 19b1 98010000 		.4byte	0x198
 6002 19b5 D4180000 		.4byte	.LLST118
 6003 19b9 14       		.uleb128 0x14
 6004 19ba 0A000000 		.4byte	.LVL444
 6005 19be 1D1B0000 		.4byte	0x1b1d
 6006 19c2 14       		.uleb128 0x14
 6007 19c3 26000000 		.4byte	.LVL451
 6008 19c7 281B0000 		.4byte	0x1b28
 6009 19cb 00       		.byte	0
 6010 19cc 1F       		.uleb128 0x1f
 6011 19cd 13050000 		.4byte	.LASF161
 6012 19d1 01       		.byte	0x1
 6013 19d2 E10A     		.2byte	0xae1
 6014 19d4 98010000 		.4byte	0x198
 6015 19d8 00000000 		.4byte	.LFB65
 6016 19dc 28000000 		.4byte	.LFE65-.LFB65
 6017 19e0 01       		.uleb128 0x1
 6018 19e1 9C       		.byte	0x9c
 6019 19e2 391A0000 		.4byte	0x1a39
 6020 19e6 12       		.uleb128 0x12
 6021 19e7 21090000 		.4byte	.LASF159
 6022 19eb 01       		.byte	0x1
 6023 19ec E10A     		.2byte	0xae1
 6024 19ee E2020000 		.4byte	0x2e2
 6025 19f2 FE180000 		.4byte	.LLST119
 6026 19f6 12       		.uleb128 0x12
 6027 19f7 6D070000 		.4byte	.LASF160
 6028 19fb 01       		.byte	0x1
 6029 19fc E10A     		.2byte	0xae1
 6030 19fe D7020000 		.4byte	0x2d7
 6031 1a02 56190000 		.4byte	.LLST120
 6032 1a06 13       		.uleb128 0x13
 6033 1a07 C9040000 		.4byte	.LASF96
 6034 1a0b 01       		.byte	0x1
 6035 1a0c E30A     		.2byte	0xae3
 6036 1a0e 98010000 		.4byte	0x198
 6037 1a12 90190000 		.4byte	.LLST121
 6038 1a16 13       		.uleb128 0x13
 6039 1a17 A1030000 		.4byte	.LASF162
 6040 1a1b 01       		.byte	0x1
 6041 1a1c E40A     		.2byte	0xae4
 6042 1a1e 7A050000 		.4byte	0x57a
 6043 1a22 AF190000 		.4byte	.LLST122
 6044 1a26 14       		.uleb128 0x14
 6045 1a27 14000000 		.4byte	.LVL456
 6046 1a2b 1D1B0000 		.4byte	0x1b1d
 6047 1a2f 14       		.uleb128 0x14
 6048 1a30 1C000000 		.4byte	.LVL457
 6049 1a34 281B0000 		.4byte	0x1b28
 6050 1a38 00       		.byte	0
 6051 1a39 1F       		.uleb128 0x1f
 6052 1a3a C5030000 		.4byte	.LASF163
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccApaELb.s 			page 166


 6053 1a3e 01       		.byte	0x1
 6054 1a3f 050B     		.2byte	0xb05
 6055 1a41 E2020000 		.4byte	0x2e2
 6056 1a45 00000000 		.4byte	.LFB66
 6057 1a49 16000000 		.4byte	.LFE66-.LFB66
 6058 1a4d 01       		.uleb128 0x1
 6059 1a4e 9C       		.byte	0x9c
 6060 1a4f A11A0000 		.4byte	0x1aa1
 6061 1a53 12       		.uleb128 0x12
 6062 1a54 6D070000 		.4byte	.LASF160
 6063 1a58 01       		.byte	0x1
 6064 1a59 050B     		.2byte	0xb05
 6065 1a5b D7020000 		.4byte	0x2d7
 6066 1a5f 071A0000 		.4byte	.LLST123
 6067 1a63 12       		.uleb128 0x12
 6068 1a64 C8020000 		.4byte	.LASF120
 6069 1a68 01       		.byte	0x1
 6070 1a69 050B     		.2byte	0xb05
 6071 1a6b A11A0000 		.4byte	0x1aa1
 6072 1a6f 281A0000 		.4byte	.LLST124
 6073 1a73 20       		.uleb128 0x20
 6074 1a74 C9040000 		.4byte	.LASF96
 6075 1a78 01       		.byte	0x1
 6076 1a79 070B     		.2byte	0xb07
 6077 1a7b E2020000 		.4byte	0x2e2
 6078 1a7f 02       		.uleb128 0x2
 6079 1a80 91       		.byte	0x91
 6080 1a81 74       		.sleb128 -12
 6081 1a82 18       		.uleb128 0x18
 6082 1a83 10000000 		.4byte	.LVL465
 6083 1a87 B00E0000 		.4byte	0xeb0
 6084 1a8b 17       		.uleb128 0x17
 6085 1a8c 01       		.uleb128 0x1
 6086 1a8d 50       		.byte	0x50
 6087 1a8e 03       		.uleb128 0x3
 6088 1a8f F3       		.byte	0xf3
 6089 1a90 01       		.uleb128 0x1
 6090 1a91 50       		.byte	0x50
 6091 1a92 17       		.uleb128 0x17
 6092 1a93 01       		.uleb128 0x1
 6093 1a94 51       		.byte	0x51
 6094 1a95 02       		.uleb128 0x2
 6095 1a96 91       		.byte	0x91
 6096 1a97 74       		.sleb128 -12
 6097 1a98 17       		.uleb128 0x17
 6098 1a99 01       		.uleb128 0x1
 6099 1a9a 52       		.byte	0x52
 6100 1a9b 03       		.uleb128 0x3
 6101 1a9c F3       		.byte	0xf3
 6102 1a9d 01       		.uleb128 0x1
 6103 1a9e 51       		.byte	0x51
 6104 1a9f 00       		.byte	0
 6105 1aa0 00       		.byte	0
 6106 1aa1 07       		.uleb128 0x7
 6107 1aa2 AE010000 		.4byte	0x1ae
 6108 1aa6 1F       		.uleb128 0x1f
 6109 1aa7 47060000 		.4byte	.LASF164
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccApaELb.s 			page 167


 6110 1aab 01       		.byte	0x1
 6111 1aac 120B     		.2byte	0xb12
 6112 1aae E2020000 		.4byte	0x2e2
 6113 1ab2 00000000 		.4byte	.LFB67
 6114 1ab6 16000000 		.4byte	.LFE67-.LFB67
 6115 1aba 01       		.uleb128 0x1
 6116 1abb 9C       		.byte	0x9c
 6117 1abc FC1A0000 		.4byte	0x1afc
 6118 1ac0 12       		.uleb128 0x12
 6119 1ac1 6D070000 		.4byte	.LASF160
 6120 1ac5 01       		.byte	0x1
 6121 1ac6 120B     		.2byte	0xb12
 6122 1ac8 D7020000 		.4byte	0x2d7
 6123 1acc 541A0000 		.4byte	.LLST125
 6124 1ad0 20       		.uleb128 0x20
 6125 1ad1 C9040000 		.4byte	.LASF96
 6126 1ad5 01       		.byte	0x1
 6127 1ad6 140B     		.2byte	0xb14
 6128 1ad8 E2020000 		.4byte	0x2e2
 6129 1adc 02       		.uleb128 0x2
 6130 1add 91       		.byte	0x91
 6131 1ade 74       		.sleb128 -12
 6132 1adf 18       		.uleb128 0x18
 6133 1ae0 10000000 		.4byte	.LVL467
 6134 1ae4 05150000 		.4byte	0x1505
 6135 1ae8 17       		.uleb128 0x17
 6136 1ae9 01       		.uleb128 0x1
 6137 1aea 50       		.byte	0x50
 6138 1aeb 03       		.uleb128 0x3
 6139 1aec F3       		.byte	0xf3
 6140 1aed 01       		.uleb128 0x1
 6141 1aee 50       		.byte	0x50
 6142 1aef 17       		.uleb128 0x17
 6143 1af0 01       		.uleb128 0x1
 6144 1af1 51       		.byte	0x51
 6145 1af2 02       		.uleb128 0x2
 6146 1af3 91       		.byte	0x91
 6147 1af4 74       		.sleb128 -12
 6148 1af5 17       		.uleb128 0x17
 6149 1af6 01       		.uleb128 0x1
 6150 1af7 52       		.byte	0x52
 6151 1af8 01       		.uleb128 0x1
 6152 1af9 30       		.byte	0x30
 6153 1afa 00       		.byte	0
 6154 1afb 00       		.byte	0
 6155 1afc 25       		.uleb128 0x25
 6156 1afd FE030000 		.4byte	0x3fe
 6157 1b01 0C1B0000 		.4byte	0x1b0c
 6158 1b05 26       		.uleb128 0x26
 6159 1b06 9E000000 		.4byte	0x9e
 6160 1b0a 09       		.byte	0x9
 6161 1b0b 00       		.byte	0
 6162 1b0c 27       		.uleb128 0x27
 6163 1b0d 250A0000 		.4byte	.LASF188
 6164 1b11 01       		.byte	0x1
 6165 1b12 9B       		.byte	0x9b
 6166 1b13 FC1A0000 		.4byte	0x1afc
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccApaELb.s 			page 168


 6167 1b17 05       		.uleb128 0x5
 6168 1b18 03       		.byte	0x3
 6169 1b19 00000000 		.4byte	xQueueRegistry
 6170 1b1d 28       		.uleb128 0x28
 6171 1b1e 41040000 		.4byte	.LASF165
 6172 1b22 41040000 		.4byte	.LASF165
 6173 1b26 05       		.byte	0x5
 6174 1b27 5B       		.byte	0x5b
 6175 1b28 28       		.uleb128 0x28
 6176 1b29 BE090000 		.4byte	.LASF166
 6177 1b2d BE090000 		.4byte	.LASF166
 6178 1b31 05       		.byte	0x5
 6179 1b32 5C       		.byte	0x5c
 6180 1b33 29       		.uleb128 0x29
 6181 1b34 E30B0000 		.4byte	.LASF167
 6182 1b38 E30B0000 		.4byte	.LASF167
 6183 1b3c 07       		.byte	0x7
 6184 1b3d DF08     		.2byte	0x8df
 6185 1b3f 2A       		.uleb128 0x2a
 6186 1b40 2E030000 		.4byte	.LASF189
 6187 1b44 2E030000 		.4byte	.LASF189
 6188 1b48 29       		.uleb128 0x29
 6189 1b49 59090000 		.4byte	.LASF168
 6190 1b4d 59090000 		.4byte	.LASF168
 6191 1b51 07       		.byte	0x7
 6192 1b52 A608     		.2byte	0x8a6
 6193 1b54 29       		.uleb128 0x29
 6194 1b55 CD080000 		.4byte	.LASF169
 6195 1b59 CD080000 		.4byte	.LASF169
 6196 1b5d 07       		.byte	0x7
 6197 1b5e CD08     		.2byte	0x8cd
 6198 1b60 28       		.uleb128 0x28
 6199 1b61 E50A0000 		.4byte	.LASF170
 6200 1b65 E50A0000 		.4byte	.LASF170
 6201 1b69 05       		.byte	0x5
 6202 1b6a 51       		.byte	0x51
 6203 1b6b 29       		.uleb128 0x29
 6204 1b6c AF0B0000 		.4byte	.LASF171
 6205 1b70 AF0B0000 		.4byte	.LASF171
 6206 1b74 06       		.byte	0x6
 6207 1b75 5901     		.2byte	0x159
 6208 1b77 28       		.uleb128 0x28
 6209 1b78 23040000 		.4byte	.LASF172
 6210 1b7c 23040000 		.4byte	.LASF172
 6211 1b80 09       		.byte	0x9
 6212 1b81 82       		.byte	0x82
 6213 1b82 29       		.uleb128 0x29
 6214 1b83 000B0000 		.4byte	.LASF173
 6215 1b87 000B0000 		.4byte	.LASF173
 6216 1b8b 07       		.byte	0x7
 6217 1b8c 1A09     		.2byte	0x91a
 6218 1b8e 29       		.uleb128 0x29
 6219 1b8f F00A0000 		.4byte	.LASF174
 6220 1b93 F00A0000 		.4byte	.LASF174
 6221 1b97 07       		.byte	0x7
 6222 1b98 FA04     		.2byte	0x4fa
 6223 1b9a 29       		.uleb128 0x29
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccApaELb.s 			page 169


 6224 1b9b 3B0A0000 		.4byte	.LASF175
 6225 1b9f 3B0A0000 		.4byte	.LASF175
 6226 1ba3 07       		.byte	0x7
 6227 1ba4 C708     		.2byte	0x8c7
 6228 1ba6 29       		.uleb128 0x29
 6229 1ba7 54040000 		.4byte	.LASF176
 6230 1bab 54040000 		.4byte	.LASF176
 6231 1baf 07       		.byte	0x7
 6232 1bb0 7E08     		.2byte	0x87e
 6233 1bb2 29       		.uleb128 0x29
 6234 1bb3 72080000 		.4byte	.LASF177
 6235 1bb7 72080000 		.4byte	.LASF177
 6236 1bbb 07       		.byte	0x7
 6237 1bbc 3005     		.2byte	0x530
 6238 1bbe 29       		.uleb128 0x29
 6239 1bbf 91060000 		.4byte	.LASF178
 6240 1bc3 91060000 		.4byte	.LASF178
 6241 1bc7 07       		.byte	0x7
 6242 1bc8 BC08     		.2byte	0x8bc
 6243 1bca 28       		.uleb128 0x28
 6244 1bcb 0A0C0000 		.4byte	.LASF179
 6245 1bcf 0A0C0000 		.4byte	.LASF179
 6246 1bd3 05       		.byte	0x5
 6247 1bd4 5D       		.byte	0x5d
 6248 1bd5 28       		.uleb128 0x28
 6249 1bd6 61050000 		.4byte	.LASF180
 6250 1bda 61050000 		.4byte	.LASF180
 6251 1bde 05       		.byte	0x5
 6252 1bdf 5E       		.byte	0x5e
 6253 1be0 29       		.uleb128 0x29
 6254 1be1 DE090000 		.4byte	.LASF181
 6255 1be5 DE090000 		.4byte	.LASF181
 6256 1be9 07       		.byte	0x7
 6257 1bea 1409     		.2byte	0x914
 6258 1bec 29       		.uleb128 0x29
 6259 1bed A4020000 		.4byte	.LASF182
 6260 1bf1 A4020000 		.4byte	.LASF182
 6261 1bf5 07       		.byte	0x7
 6262 1bf6 E908     		.2byte	0x8e9
 6263 1bf8 29       		.uleb128 0x29
 6264 1bf9 500A0000 		.4byte	.LASF183
 6265 1bfd 500A0000 		.4byte	.LASF183
 6266 1c01 07       		.byte	0x7
 6267 1c02 D908     		.2byte	0x8d9
 6268 1c04 28       		.uleb128 0x28
 6269 1c05 20060000 		.4byte	.LASF184
 6270 1c09 20060000 		.4byte	.LASF184
 6271 1c0d 09       		.byte	0x9
 6272 1c0e 83       		.byte	0x83
 6273 1c0f 00       		.byte	0
 6274              		.section	.debug_abbrev,"",%progbits
 6275              	.Ldebug_abbrev0:
 6276 0000 01       		.uleb128 0x1
 6277 0001 11       		.uleb128 0x11
 6278 0002 01       		.byte	0x1
 6279 0003 25       		.uleb128 0x25
 6280 0004 0E       		.uleb128 0xe
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccApaELb.s 			page 170


 6281 0005 13       		.uleb128 0x13
 6282 0006 0B       		.uleb128 0xb
 6283 0007 03       		.uleb128 0x3
 6284 0008 0E       		.uleb128 0xe
 6285 0009 1B       		.uleb128 0x1b
 6286 000a 0E       		.uleb128 0xe
 6287 000b 55       		.uleb128 0x55
 6288 000c 17       		.uleb128 0x17
 6289 000d 11       		.uleb128 0x11
 6290 000e 01       		.uleb128 0x1
 6291 000f 10       		.uleb128 0x10
 6292 0010 17       		.uleb128 0x17
 6293 0011 00       		.byte	0
 6294 0012 00       		.byte	0
 6295 0013 02       		.uleb128 0x2
 6296 0014 16       		.uleb128 0x16
 6297 0015 00       		.byte	0
 6298 0016 03       		.uleb128 0x3
 6299 0017 0E       		.uleb128 0xe
 6300 0018 3A       		.uleb128 0x3a
 6301 0019 0B       		.uleb128 0xb
 6302 001a 3B       		.uleb128 0x3b
 6303 001b 0B       		.uleb128 0xb
 6304 001c 49       		.uleb128 0x49
 6305 001d 13       		.uleb128 0x13
 6306 001e 00       		.byte	0
 6307 001f 00       		.byte	0
 6308 0020 03       		.uleb128 0x3
 6309 0021 24       		.uleb128 0x24
 6310 0022 00       		.byte	0
 6311 0023 0B       		.uleb128 0xb
 6312 0024 0B       		.uleb128 0xb
 6313 0025 3E       		.uleb128 0x3e
 6314 0026 0B       		.uleb128 0xb
 6315 0027 03       		.uleb128 0x3
 6316 0028 0E       		.uleb128 0xe
 6317 0029 00       		.byte	0
 6318 002a 00       		.byte	0
 6319 002b 04       		.uleb128 0x4
 6320 002c 24       		.uleb128 0x24
 6321 002d 00       		.byte	0
 6322 002e 0B       		.uleb128 0xb
 6323 002f 0B       		.uleb128 0xb
 6324 0030 3E       		.uleb128 0x3e
 6325 0031 0B       		.uleb128 0xb
 6326 0032 03       		.uleb128 0x3
 6327 0033 08       		.uleb128 0x8
 6328 0034 00       		.byte	0
 6329 0035 00       		.byte	0
 6330 0036 05       		.uleb128 0x5
 6331 0037 0F       		.uleb128 0xf
 6332 0038 00       		.byte	0
 6333 0039 0B       		.uleb128 0xb
 6334 003a 0B       		.uleb128 0xb
 6335 003b 00       		.byte	0
 6336 003c 00       		.byte	0
 6337 003d 06       		.uleb128 0x6
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccApaELb.s 			page 171


 6338 003e 0F       		.uleb128 0xf
 6339 003f 00       		.byte	0
 6340 0040 0B       		.uleb128 0xb
 6341 0041 0B       		.uleb128 0xb
 6342 0042 49       		.uleb128 0x49
 6343 0043 13       		.uleb128 0x13
 6344 0044 00       		.byte	0
 6345 0045 00       		.byte	0
 6346 0046 07       		.uleb128 0x7
 6347 0047 26       		.uleb128 0x26
 6348 0048 00       		.byte	0
 6349 0049 49       		.uleb128 0x49
 6350 004a 13       		.uleb128 0x13
 6351 004b 00       		.byte	0
 6352 004c 00       		.byte	0
 6353 004d 08       		.uleb128 0x8
 6354 004e 26       		.uleb128 0x26
 6355 004f 00       		.byte	0
 6356 0050 00       		.byte	0
 6357 0051 00       		.byte	0
 6358 0052 09       		.uleb128 0x9
 6359 0053 04       		.uleb128 0x4
 6360 0054 01       		.byte	0x1
 6361 0055 0B       		.uleb128 0xb
 6362 0056 0B       		.uleb128 0xb
 6363 0057 49       		.uleb128 0x49
 6364 0058 13       		.uleb128 0x13
 6365 0059 3A       		.uleb128 0x3a
 6366 005a 0B       		.uleb128 0xb
 6367 005b 3B       		.uleb128 0x3b
 6368 005c 0B       		.uleb128 0xb
 6369 005d 01       		.uleb128 0x1
 6370 005e 13       		.uleb128 0x13
 6371 005f 00       		.byte	0
 6372 0060 00       		.byte	0
 6373 0061 0A       		.uleb128 0xa
 6374 0062 28       		.uleb128 0x28
 6375 0063 00       		.byte	0
 6376 0064 03       		.uleb128 0x3
 6377 0065 0E       		.uleb128 0xe
 6378 0066 1C       		.uleb128 0x1c
 6379 0067 0B       		.uleb128 0xb
 6380 0068 00       		.byte	0
 6381 0069 00       		.byte	0
 6382 006a 0B       		.uleb128 0xb
 6383 006b 13       		.uleb128 0x13
 6384 006c 01       		.byte	0x1
 6385 006d 03       		.uleb128 0x3
 6386 006e 0E       		.uleb128 0xe
 6387 006f 0B       		.uleb128 0xb
 6388 0070 0B       		.uleb128 0xb
 6389 0071 3A       		.uleb128 0x3a
 6390 0072 0B       		.uleb128 0xb
 6391 0073 3B       		.uleb128 0x3b
 6392 0074 0B       		.uleb128 0xb
 6393 0075 01       		.uleb128 0x1
 6394 0076 13       		.uleb128 0x13
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccApaELb.s 			page 172


 6395 0077 00       		.byte	0
 6396 0078 00       		.byte	0
 6397 0079 0C       		.uleb128 0xc
 6398 007a 0D       		.uleb128 0xd
 6399 007b 00       		.byte	0
 6400 007c 03       		.uleb128 0x3
 6401 007d 0E       		.uleb128 0xe
 6402 007e 3A       		.uleb128 0x3a
 6403 007f 0B       		.uleb128 0xb
 6404 0080 3B       		.uleb128 0x3b
 6405 0081 0B       		.uleb128 0xb
 6406 0082 49       		.uleb128 0x49
 6407 0083 13       		.uleb128 0x13
 6408 0084 38       		.uleb128 0x38
 6409 0085 0B       		.uleb128 0xb
 6410 0086 00       		.byte	0
 6411 0087 00       		.byte	0
 6412 0088 0D       		.uleb128 0xd
 6413 0089 35       		.uleb128 0x35
 6414 008a 00       		.byte	0
 6415 008b 49       		.uleb128 0x49
 6416 008c 13       		.uleb128 0x13
 6417 008d 00       		.byte	0
 6418 008e 00       		.byte	0
 6419 008f 0E       		.uleb128 0xe
 6420 0090 17       		.uleb128 0x17
 6421 0091 01       		.byte	0x1
 6422 0092 0B       		.uleb128 0xb
 6423 0093 0B       		.uleb128 0xb
 6424 0094 3A       		.uleb128 0x3a
 6425 0095 0B       		.uleb128 0xb
 6426 0096 3B       		.uleb128 0x3b
 6427 0097 0B       		.uleb128 0xb
 6428 0098 01       		.uleb128 0x1
 6429 0099 13       		.uleb128 0x13
 6430 009a 00       		.byte	0
 6431 009b 00       		.byte	0
 6432 009c 0F       		.uleb128 0xf
 6433 009d 0D       		.uleb128 0xd
 6434 009e 00       		.byte	0
 6435 009f 03       		.uleb128 0x3
 6436 00a0 0E       		.uleb128 0xe
 6437 00a1 3A       		.uleb128 0x3a
 6438 00a2 0B       		.uleb128 0xb
 6439 00a3 3B       		.uleb128 0x3b
 6440 00a4 0B       		.uleb128 0xb
 6441 00a5 49       		.uleb128 0x49
 6442 00a6 13       		.uleb128 0x13
 6443 00a7 00       		.byte	0
 6444 00a8 00       		.byte	0
 6445 00a9 10       		.uleb128 0x10
 6446 00aa 0D       		.uleb128 0xd
 6447 00ab 00       		.byte	0
 6448 00ac 03       		.uleb128 0x3
 6449 00ad 08       		.uleb128 0x8
 6450 00ae 3A       		.uleb128 0x3a
 6451 00af 0B       		.uleb128 0xb
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccApaELb.s 			page 173


 6452 00b0 3B       		.uleb128 0x3b
 6453 00b1 0B       		.uleb128 0xb
 6454 00b2 49       		.uleb128 0x49
 6455 00b3 13       		.uleb128 0x13
 6456 00b4 38       		.uleb128 0x38
 6457 00b5 0B       		.uleb128 0xb
 6458 00b6 00       		.byte	0
 6459 00b7 00       		.byte	0
 6460 00b8 11       		.uleb128 0x11
 6461 00b9 2E       		.uleb128 0x2e
 6462 00ba 01       		.byte	0x1
 6463 00bb 03       		.uleb128 0x3
 6464 00bc 0E       		.uleb128 0xe
 6465 00bd 3A       		.uleb128 0x3a
 6466 00be 0B       		.uleb128 0xb
 6467 00bf 3B       		.uleb128 0x3b
 6468 00c0 05       		.uleb128 0x5
 6469 00c1 27       		.uleb128 0x27
 6470 00c2 19       		.uleb128 0x19
 6471 00c3 49       		.uleb128 0x49
 6472 00c4 13       		.uleb128 0x13
 6473 00c5 11       		.uleb128 0x11
 6474 00c6 01       		.uleb128 0x1
 6475 00c7 12       		.uleb128 0x12
 6476 00c8 06       		.uleb128 0x6
 6477 00c9 40       		.uleb128 0x40
 6478 00ca 18       		.uleb128 0x18
 6479 00cb 9742     		.uleb128 0x2117
 6480 00cd 19       		.uleb128 0x19
 6481 00ce 01       		.uleb128 0x1
 6482 00cf 13       		.uleb128 0x13
 6483 00d0 00       		.byte	0
 6484 00d1 00       		.byte	0
 6485 00d2 12       		.uleb128 0x12
 6486 00d3 05       		.uleb128 0x5
 6487 00d4 00       		.byte	0
 6488 00d5 03       		.uleb128 0x3
 6489 00d6 0E       		.uleb128 0xe
 6490 00d7 3A       		.uleb128 0x3a
 6491 00d8 0B       		.uleb128 0xb
 6492 00d9 3B       		.uleb128 0x3b
 6493 00da 05       		.uleb128 0x5
 6494 00db 49       		.uleb128 0x49
 6495 00dc 13       		.uleb128 0x13
 6496 00dd 02       		.uleb128 0x2
 6497 00de 17       		.uleb128 0x17
 6498 00df 00       		.byte	0
 6499 00e0 00       		.byte	0
 6500 00e1 13       		.uleb128 0x13
 6501 00e2 34       		.uleb128 0x34
 6502 00e3 00       		.byte	0
 6503 00e4 03       		.uleb128 0x3
 6504 00e5 0E       		.uleb128 0xe
 6505 00e6 3A       		.uleb128 0x3a
 6506 00e7 0B       		.uleb128 0xb
 6507 00e8 3B       		.uleb128 0x3b
 6508 00e9 05       		.uleb128 0x5
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccApaELb.s 			page 174


 6509 00ea 49       		.uleb128 0x49
 6510 00eb 13       		.uleb128 0x13
 6511 00ec 02       		.uleb128 0x2
 6512 00ed 17       		.uleb128 0x17
 6513 00ee 00       		.byte	0
 6514 00ef 00       		.byte	0
 6515 00f0 14       		.uleb128 0x14
 6516 00f1 898201   		.uleb128 0x4109
 6517 00f4 00       		.byte	0
 6518 00f5 11       		.uleb128 0x11
 6519 00f6 01       		.uleb128 0x1
 6520 00f7 31       		.uleb128 0x31
 6521 00f8 13       		.uleb128 0x13
 6522 00f9 00       		.byte	0
 6523 00fa 00       		.byte	0
 6524 00fb 15       		.uleb128 0x15
 6525 00fc 0B       		.uleb128 0xb
 6526 00fd 01       		.byte	0x1
 6527 00fe 55       		.uleb128 0x55
 6528 00ff 17       		.uleb128 0x17
 6529 0100 00       		.byte	0
 6530 0101 00       		.byte	0
 6531 0102 16       		.uleb128 0x16
 6532 0103 898201   		.uleb128 0x4109
 6533 0106 01       		.byte	0x1
 6534 0107 11       		.uleb128 0x11
 6535 0108 01       		.uleb128 0x1
 6536 0109 31       		.uleb128 0x31
 6537 010a 13       		.uleb128 0x13
 6538 010b 01       		.uleb128 0x1
 6539 010c 13       		.uleb128 0x13
 6540 010d 00       		.byte	0
 6541 010e 00       		.byte	0
 6542 010f 17       		.uleb128 0x17
 6543 0110 8A8201   		.uleb128 0x410a
 6544 0113 00       		.byte	0
 6545 0114 02       		.uleb128 0x2
 6546 0115 18       		.uleb128 0x18
 6547 0116 9142     		.uleb128 0x2111
 6548 0118 18       		.uleb128 0x18
 6549 0119 00       		.byte	0
 6550 011a 00       		.byte	0
 6551 011b 18       		.uleb128 0x18
 6552 011c 898201   		.uleb128 0x4109
 6553 011f 01       		.byte	0x1
 6554 0120 11       		.uleb128 0x11
 6555 0121 01       		.uleb128 0x1
 6556 0122 31       		.uleb128 0x31
 6557 0123 13       		.uleb128 0x13
 6558 0124 00       		.byte	0
 6559 0125 00       		.byte	0
 6560 0126 19       		.uleb128 0x19
 6561 0127 2E       		.uleb128 0x2e
 6562 0128 01       		.byte	0x1
 6563 0129 03       		.uleb128 0x3
 6564 012a 0E       		.uleb128 0xe
 6565 012b 3A       		.uleb128 0x3a
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccApaELb.s 			page 175


 6566 012c 0B       		.uleb128 0xb
 6567 012d 3B       		.uleb128 0x3b
 6568 012e 05       		.uleb128 0x5
 6569 012f 27       		.uleb128 0x27
 6570 0130 19       		.uleb128 0x19
 6571 0131 11       		.uleb128 0x11
 6572 0132 01       		.uleb128 0x1
 6573 0133 12       		.uleb128 0x12
 6574 0134 06       		.uleb128 0x6
 6575 0135 40       		.uleb128 0x40
 6576 0136 18       		.uleb128 0x18
 6577 0137 9742     		.uleb128 0x2117
 6578 0139 19       		.uleb128 0x19
 6579 013a 01       		.uleb128 0x1
 6580 013b 13       		.uleb128 0x13
 6581 013c 00       		.byte	0
 6582 013d 00       		.byte	0
 6583 013e 1A       		.uleb128 0x1a
 6584 013f 0B       		.uleb128 0xb
 6585 0140 01       		.byte	0x1
 6586 0141 11       		.uleb128 0x11
 6587 0142 01       		.uleb128 0x1
 6588 0143 12       		.uleb128 0x12
 6589 0144 06       		.uleb128 0x6
 6590 0145 01       		.uleb128 0x1
 6591 0146 13       		.uleb128 0x13
 6592 0147 00       		.byte	0
 6593 0148 00       		.byte	0
 6594 0149 1B       		.uleb128 0x1b
 6595 014a 2E       		.uleb128 0x2e
 6596 014b 01       		.byte	0x1
 6597 014c 3F       		.uleb128 0x3f
 6598 014d 19       		.uleb128 0x19
 6599 014e 03       		.uleb128 0x3
 6600 014f 0E       		.uleb128 0xe
 6601 0150 3A       		.uleb128 0x3a
 6602 0151 0B       		.uleb128 0xb
 6603 0152 3B       		.uleb128 0x3b
 6604 0153 0B       		.uleb128 0xb
 6605 0154 27       		.uleb128 0x27
 6606 0155 19       		.uleb128 0x19
 6607 0156 49       		.uleb128 0x49
 6608 0157 13       		.uleb128 0x13
 6609 0158 11       		.uleb128 0x11
 6610 0159 01       		.uleb128 0x1
 6611 015a 12       		.uleb128 0x12
 6612 015b 06       		.uleb128 0x6
 6613 015c 40       		.uleb128 0x40
 6614 015d 18       		.uleb128 0x18
 6615 015e 9742     		.uleb128 0x2117
 6616 0160 19       		.uleb128 0x19
 6617 0161 01       		.uleb128 0x1
 6618 0162 13       		.uleb128 0x13
 6619 0163 00       		.byte	0
 6620 0164 00       		.byte	0
 6621 0165 1C       		.uleb128 0x1c
 6622 0166 05       		.uleb128 0x5
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccApaELb.s 			page 176


 6623 0167 00       		.byte	0
 6624 0168 03       		.uleb128 0x3
 6625 0169 0E       		.uleb128 0xe
 6626 016a 3A       		.uleb128 0x3a
 6627 016b 0B       		.uleb128 0xb
 6628 016c 3B       		.uleb128 0x3b
 6629 016d 0B       		.uleb128 0xb
 6630 016e 49       		.uleb128 0x49
 6631 016f 13       		.uleb128 0x13
 6632 0170 02       		.uleb128 0x2
 6633 0171 17       		.uleb128 0x17
 6634 0172 00       		.byte	0
 6635 0173 00       		.byte	0
 6636 0174 1D       		.uleb128 0x1d
 6637 0175 34       		.uleb128 0x34
 6638 0176 00       		.byte	0
 6639 0177 03       		.uleb128 0x3
 6640 0178 0E       		.uleb128 0xe
 6641 0179 3A       		.uleb128 0x3a
 6642 017a 0B       		.uleb128 0xb
 6643 017b 3B       		.uleb128 0x3b
 6644 017c 0B       		.uleb128 0xb
 6645 017d 49       		.uleb128 0x49
 6646 017e 13       		.uleb128 0x13
 6647 017f 02       		.uleb128 0x2
 6648 0180 17       		.uleb128 0x17
 6649 0181 00       		.byte	0
 6650 0182 00       		.byte	0
 6651 0183 1E       		.uleb128 0x1e
 6652 0184 05       		.uleb128 0x5
 6653 0185 00       		.byte	0
 6654 0186 03       		.uleb128 0x3
 6655 0187 0E       		.uleb128 0xe
 6656 0188 3A       		.uleb128 0x3a
 6657 0189 0B       		.uleb128 0xb
 6658 018a 3B       		.uleb128 0x3b
 6659 018b 05       		.uleb128 0x5
 6660 018c 49       		.uleb128 0x49
 6661 018d 13       		.uleb128 0x13
 6662 018e 02       		.uleb128 0x2
 6663 018f 18       		.uleb128 0x18
 6664 0190 00       		.byte	0
 6665 0191 00       		.byte	0
 6666 0192 1F       		.uleb128 0x1f
 6667 0193 2E       		.uleb128 0x2e
 6668 0194 01       		.byte	0x1
 6669 0195 3F       		.uleb128 0x3f
 6670 0196 19       		.uleb128 0x19
 6671 0197 03       		.uleb128 0x3
 6672 0198 0E       		.uleb128 0xe
 6673 0199 3A       		.uleb128 0x3a
 6674 019a 0B       		.uleb128 0xb
 6675 019b 3B       		.uleb128 0x3b
 6676 019c 05       		.uleb128 0x5
 6677 019d 27       		.uleb128 0x27
 6678 019e 19       		.uleb128 0x19
 6679 019f 49       		.uleb128 0x49
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccApaELb.s 			page 177


 6680 01a0 13       		.uleb128 0x13
 6681 01a1 11       		.uleb128 0x11
 6682 01a2 01       		.uleb128 0x1
 6683 01a3 12       		.uleb128 0x12
 6684 01a4 06       		.uleb128 0x6
 6685 01a5 40       		.uleb128 0x40
 6686 01a6 18       		.uleb128 0x18
 6687 01a7 9742     		.uleb128 0x2117
 6688 01a9 19       		.uleb128 0x19
 6689 01aa 01       		.uleb128 0x1
 6690 01ab 13       		.uleb128 0x13
 6691 01ac 00       		.byte	0
 6692 01ad 00       		.byte	0
 6693 01ae 20       		.uleb128 0x20
 6694 01af 34       		.uleb128 0x34
 6695 01b0 00       		.byte	0
 6696 01b1 03       		.uleb128 0x3
 6697 01b2 0E       		.uleb128 0xe
 6698 01b3 3A       		.uleb128 0x3a
 6699 01b4 0B       		.uleb128 0xb
 6700 01b5 3B       		.uleb128 0x3b
 6701 01b6 05       		.uleb128 0x5
 6702 01b7 49       		.uleb128 0x49
 6703 01b8 13       		.uleb128 0x13
 6704 01b9 02       		.uleb128 0x2
 6705 01ba 18       		.uleb128 0x18
 6706 01bb 00       		.byte	0
 6707 01bc 00       		.byte	0
 6708 01bd 21       		.uleb128 0x21
 6709 01be 34       		.uleb128 0x34
 6710 01bf 00       		.byte	0
 6711 01c0 03       		.uleb128 0x3
 6712 01c1 0E       		.uleb128 0xe
 6713 01c2 3A       		.uleb128 0x3a
 6714 01c3 0B       		.uleb128 0xb
 6715 01c4 3B       		.uleb128 0x3b
 6716 01c5 05       		.uleb128 0x5
 6717 01c6 49       		.uleb128 0x49
 6718 01c7 13       		.uleb128 0x13
 6719 01c8 1C       		.uleb128 0x1c
 6720 01c9 0B       		.uleb128 0xb
 6721 01ca 00       		.byte	0
 6722 01cb 00       		.byte	0
 6723 01cc 22       		.uleb128 0x22
 6724 01cd 0B       		.uleb128 0xb
 6725 01ce 01       		.byte	0x1
 6726 01cf 55       		.uleb128 0x55
 6727 01d0 17       		.uleb128 0x17
 6728 01d1 01       		.uleb128 0x1
 6729 01d2 13       		.uleb128 0x13
 6730 01d3 00       		.byte	0
 6731 01d4 00       		.byte	0
 6732 01d5 23       		.uleb128 0x23
 6733 01d6 2E       		.uleb128 0x2e
 6734 01d7 01       		.byte	0x1
 6735 01d8 3F       		.uleb128 0x3f
 6736 01d9 19       		.uleb128 0x19
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccApaELb.s 			page 178


 6737 01da 03       		.uleb128 0x3
 6738 01db 0E       		.uleb128 0xe
 6739 01dc 3A       		.uleb128 0x3a
 6740 01dd 0B       		.uleb128 0xb
 6741 01de 3B       		.uleb128 0x3b
 6742 01df 05       		.uleb128 0x5
 6743 01e0 27       		.uleb128 0x27
 6744 01e1 19       		.uleb128 0x19
 6745 01e2 11       		.uleb128 0x11
 6746 01e3 01       		.uleb128 0x1
 6747 01e4 12       		.uleb128 0x12
 6748 01e5 06       		.uleb128 0x6
 6749 01e6 40       		.uleb128 0x40
 6750 01e7 18       		.uleb128 0x18
 6751 01e8 9742     		.uleb128 0x2117
 6752 01ea 19       		.uleb128 0x19
 6753 01eb 01       		.uleb128 0x1
 6754 01ec 13       		.uleb128 0x13
 6755 01ed 00       		.byte	0
 6756 01ee 00       		.byte	0
 6757 01ef 24       		.uleb128 0x24
 6758 01f0 34       		.uleb128 0x34
 6759 01f1 00       		.byte	0
 6760 01f2 03       		.uleb128 0x3
 6761 01f3 08       		.uleb128 0x8
 6762 01f4 3A       		.uleb128 0x3a
 6763 01f5 0B       		.uleb128 0xb
 6764 01f6 3B       		.uleb128 0x3b
 6765 01f7 05       		.uleb128 0x5
 6766 01f8 49       		.uleb128 0x49
 6767 01f9 13       		.uleb128 0x13
 6768 01fa 02       		.uleb128 0x2
 6769 01fb 17       		.uleb128 0x17
 6770 01fc 00       		.byte	0
 6771 01fd 00       		.byte	0
 6772 01fe 25       		.uleb128 0x25
 6773 01ff 01       		.uleb128 0x1
 6774 0200 01       		.byte	0x1
 6775 0201 49       		.uleb128 0x49
 6776 0202 13       		.uleb128 0x13
 6777 0203 01       		.uleb128 0x1
 6778 0204 13       		.uleb128 0x13
 6779 0205 00       		.byte	0
 6780 0206 00       		.byte	0
 6781 0207 26       		.uleb128 0x26
 6782 0208 21       		.uleb128 0x21
 6783 0209 00       		.byte	0
 6784 020a 49       		.uleb128 0x49
 6785 020b 13       		.uleb128 0x13
 6786 020c 2F       		.uleb128 0x2f
 6787 020d 0B       		.uleb128 0xb
 6788 020e 00       		.byte	0
 6789 020f 00       		.byte	0
 6790 0210 27       		.uleb128 0x27
 6791 0211 34       		.uleb128 0x34
 6792 0212 00       		.byte	0
 6793 0213 03       		.uleb128 0x3
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccApaELb.s 			page 179


 6794 0214 0E       		.uleb128 0xe
 6795 0215 3A       		.uleb128 0x3a
 6796 0216 0B       		.uleb128 0xb
 6797 0217 3B       		.uleb128 0x3b
 6798 0218 0B       		.uleb128 0xb
 6799 0219 49       		.uleb128 0x49
 6800 021a 13       		.uleb128 0x13
 6801 021b 3F       		.uleb128 0x3f
 6802 021c 19       		.uleb128 0x19
 6803 021d 02       		.uleb128 0x2
 6804 021e 18       		.uleb128 0x18
 6805 021f 00       		.byte	0
 6806 0220 00       		.byte	0
 6807 0221 28       		.uleb128 0x28
 6808 0222 2E       		.uleb128 0x2e
 6809 0223 00       		.byte	0
 6810 0224 3F       		.uleb128 0x3f
 6811 0225 19       		.uleb128 0x19
 6812 0226 3C       		.uleb128 0x3c
 6813 0227 19       		.uleb128 0x19
 6814 0228 6E       		.uleb128 0x6e
 6815 0229 0E       		.uleb128 0xe
 6816 022a 03       		.uleb128 0x3
 6817 022b 0E       		.uleb128 0xe
 6818 022c 3A       		.uleb128 0x3a
 6819 022d 0B       		.uleb128 0xb
 6820 022e 3B       		.uleb128 0x3b
 6821 022f 0B       		.uleb128 0xb
 6822 0230 00       		.byte	0
 6823 0231 00       		.byte	0
 6824 0232 29       		.uleb128 0x29
 6825 0233 2E       		.uleb128 0x2e
 6826 0234 00       		.byte	0
 6827 0235 3F       		.uleb128 0x3f
 6828 0236 19       		.uleb128 0x19
 6829 0237 3C       		.uleb128 0x3c
 6830 0238 19       		.uleb128 0x19
 6831 0239 6E       		.uleb128 0x6e
 6832 023a 0E       		.uleb128 0xe
 6833 023b 03       		.uleb128 0x3
 6834 023c 0E       		.uleb128 0xe
 6835 023d 3A       		.uleb128 0x3a
 6836 023e 0B       		.uleb128 0xb
 6837 023f 3B       		.uleb128 0x3b
 6838 0240 05       		.uleb128 0x5
 6839 0241 00       		.byte	0
 6840 0242 00       		.byte	0
 6841 0243 2A       		.uleb128 0x2a
 6842 0244 2E       		.uleb128 0x2e
 6843 0245 00       		.byte	0
 6844 0246 3F       		.uleb128 0x3f
 6845 0247 19       		.uleb128 0x19
 6846 0248 3C       		.uleb128 0x3c
 6847 0249 19       		.uleb128 0x19
 6848 024a 6E       		.uleb128 0x6e
 6849 024b 0E       		.uleb128 0xe
 6850 024c 03       		.uleb128 0x3
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccApaELb.s 			page 180


 6851 024d 0E       		.uleb128 0xe
 6852 024e 00       		.byte	0
 6853 024f 00       		.byte	0
 6854 0250 00       		.byte	0
 6855              		.section	.debug_loc,"",%progbits
 6856              	.Ldebug_loc0:
 6857              	.LLST0:
 6858 0000 00000000 		.4byte	.LVL0
 6859 0004 0A000000 		.4byte	.LVL1
 6860 0008 0100     		.2byte	0x1
 6861 000a 50       		.byte	0x50
 6862 000b 0A000000 		.4byte	.LVL1
 6863 000f 10000000 		.4byte	.LVL3
 6864 0013 0400     		.2byte	0x4
 6865 0015 F3       		.byte	0xf3
 6866 0016 01       		.uleb128 0x1
 6867 0017 50       		.byte	0x50
 6868 0018 9F       		.byte	0x9f
 6869 0019 10000000 		.4byte	.LVL3
 6870 001d 12000000 		.4byte	.LVL4
 6871 0021 0100     		.2byte	0x1
 6872 0023 50       		.byte	0x50
 6873 0024 12000000 		.4byte	.LVL4
 6874 0028 14000000 		.4byte	.LFE52
 6875 002c 0400     		.2byte	0x4
 6876 002e F3       		.byte	0xf3
 6877 002f 01       		.uleb128 0x1
 6878 0030 50       		.byte	0x50
 6879 0031 9F       		.byte	0x9f
 6880 0032 00000000 		.4byte	0
 6881 0036 00000000 		.4byte	0
 6882              	.LLST1:
 6883 003a 0E000000 		.4byte	.LVL2
 6884 003e 10000000 		.4byte	.LVL3
 6885 0042 0100     		.2byte	0x1
 6886 0044 50       		.byte	0x50
 6887 0045 12000000 		.4byte	.LVL4
 6888 0049 14000000 		.4byte	.LFE52
 6889 004d 0100     		.2byte	0x1
 6890 004f 50       		.byte	0x50
 6891 0050 00000000 		.4byte	0
 6892 0054 00000000 		.4byte	0
 6893              	.LLST2:
 6894 0058 00000000 		.4byte	.LVL5
 6895 005c 07000000 		.4byte	.LVL6-1
 6896 0060 0100     		.2byte	0x1
 6897 0062 50       		.byte	0x50
 6898 0063 07000000 		.4byte	.LVL6-1
 6899 0067 12000000 		.4byte	.LVL7
 6900 006b 0100     		.2byte	0x1
 6901 006d 54       		.byte	0x54
 6902 006e 12000000 		.4byte	.LVL7
 6903 0072 14000000 		.4byte	.LVL8
 6904 0076 0400     		.2byte	0x4
 6905 0078 F3       		.byte	0xf3
 6906 0079 01       		.uleb128 0x1
 6907 007a 50       		.byte	0x50
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccApaELb.s 			page 181


 6908 007b 9F       		.byte	0x9f
 6909 007c 14000000 		.4byte	.LVL8
 6910 0080 16000000 		.4byte	.LVL9
 6911 0084 0100     		.2byte	0x1
 6912 0086 54       		.byte	0x54
 6913 0087 16000000 		.4byte	.LVL9
 6914 008b 1E000000 		.4byte	.LFE58
 6915 008f 0400     		.2byte	0x4
 6916 0091 F3       		.byte	0xf3
 6917 0092 01       		.uleb128 0x1
 6918 0093 50       		.byte	0x50
 6919 0094 9F       		.byte	0x9f
 6920 0095 00000000 		.4byte	0
 6921 0099 00000000 		.4byte	0
 6922              	.LLST3:
 6923 009d 16000000 		.4byte	.LVL9
 6924 00a1 1C000000 		.4byte	.LVL11
 6925 00a5 0100     		.2byte	0x1
 6926 00a7 54       		.byte	0x54
 6927 00a8 1C000000 		.4byte	.LVL11
 6928 00ac 1E000000 		.4byte	.LFE58
 6929 00b0 0100     		.2byte	0x1
 6930 00b2 50       		.byte	0x50
 6931 00b3 00000000 		.4byte	0
 6932 00b7 00000000 		.4byte	0
 6933              	.LLST4:
 6934 00bb 00000000 		.4byte	.LVL12
 6935 00bf 07000000 		.4byte	.LVL13-1
 6936 00c3 0100     		.2byte	0x1
 6937 00c5 50       		.byte	0x50
 6938 00c6 07000000 		.4byte	.LVL13-1
 6939 00ca 10000000 		.4byte	.LVL14
 6940 00ce 0100     		.2byte	0x1
 6941 00d0 54       		.byte	0x54
 6942 00d1 10000000 		.4byte	.LVL14
 6943 00d5 12000000 		.4byte	.LVL15
 6944 00d9 0400     		.2byte	0x4
 6945 00db F3       		.byte	0xf3
 6946 00dc 01       		.uleb128 0x1
 6947 00dd 50       		.byte	0x50
 6948 00de 9F       		.byte	0x9f
 6949 00df 12000000 		.4byte	.LVL15
 6950 00e3 14000000 		.4byte	.LVL16
 6951 00e7 0100     		.2byte	0x1
 6952 00e9 54       		.byte	0x54
 6953 00ea 14000000 		.4byte	.LVL16
 6954 00ee 1C000000 		.4byte	.LFE56
 6955 00f2 0400     		.2byte	0x4
 6956 00f4 F3       		.byte	0xf3
 6957 00f5 01       		.uleb128 0x1
 6958 00f6 50       		.byte	0x50
 6959 00f7 9F       		.byte	0x9f
 6960 00f8 00000000 		.4byte	0
 6961 00fc 00000000 		.4byte	0
 6962              	.LLST5:
 6963 0100 14000000 		.4byte	.LVL16
 6964 0104 1A000000 		.4byte	.LVL18
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccApaELb.s 			page 182


 6965 0108 0100     		.2byte	0x1
 6966 010a 54       		.byte	0x54
 6967 010b 1A000000 		.4byte	.LVL18
 6968 010f 1C000000 		.4byte	.LFE56
 6969 0113 0100     		.2byte	0x1
 6970 0115 50       		.byte	0x50
 6971 0116 00000000 		.4byte	0
 6972 011a 00000000 		.4byte	0
 6973              	.LLST6:
 6974 011e 00000000 		.4byte	.LVL19
 6975 0122 16000000 		.4byte	.LVL23
 6976 0126 0100     		.2byte	0x1
 6977 0128 50       		.byte	0x50
 6978 0129 16000000 		.4byte	.LVL23
 6979 012d 20000000 		.4byte	.LVL25
 6980 0131 0100     		.2byte	0x1
 6981 0133 54       		.byte	0x54
 6982 0134 20000000 		.4byte	.LVL25
 6983 0138 26000000 		.4byte	.LVL26
 6984 013c 0100     		.2byte	0x1
 6985 013e 50       		.byte	0x50
 6986 013f 26000000 		.4byte	.LVL26
 6987 0143 42000000 		.4byte	.LVL28
 6988 0147 0100     		.2byte	0x1
 6989 0149 54       		.byte	0x54
 6990 014a 42000000 		.4byte	.LVL28
 6991 014e 44000000 		.4byte	.LVL29
 6992 0152 0100     		.2byte	0x1
 6993 0154 50       		.byte	0x50
 6994 0155 44000000 		.4byte	.LVL29
 6995 0159 6E000000 		.4byte	.LVL32
 6996 015d 0100     		.2byte	0x1
 6997 015f 54       		.byte	0x54
 6998 0160 6E000000 		.4byte	.LVL32
 6999 0164 70000000 		.4byte	.LVL33
 7000 0168 0100     		.2byte	0x1
 7001 016a 50       		.byte	0x50
 7002 016b 70000000 		.4byte	.LVL33
 7003 016f 80000000 		.4byte	.LVL37
 7004 0173 0100     		.2byte	0x1
 7005 0175 54       		.byte	0x54
 7006 0176 80000000 		.4byte	.LVL37
 7007 017a 82000000 		.4byte	.LFE53
 7008 017e 0400     		.2byte	0x4
 7009 0180 F3       		.byte	0xf3
 7010 0181 01       		.uleb128 0x1
 7011 0182 50       		.byte	0x50
 7012 0183 9F       		.byte	0x9f
 7013 0184 00000000 		.4byte	0
 7014 0188 00000000 		.4byte	0
 7015              	.LLST7:
 7016 018c 00000000 		.4byte	.LVL19
 7017 0190 19000000 		.4byte	.LVL24-1
 7018 0194 0100     		.2byte	0x1
 7019 0196 51       		.byte	0x51
 7020 0197 19000000 		.4byte	.LVL24-1
 7021 019b 20000000 		.4byte	.LVL25
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccApaELb.s 			page 183


 7022 019f 0400     		.2byte	0x4
 7023 01a1 F3       		.byte	0xf3
 7024 01a2 01       		.uleb128 0x1
 7025 01a3 51       		.byte	0x51
 7026 01a4 9F       		.byte	0x9f
 7027 01a5 20000000 		.4byte	.LVL25
 7028 01a9 29000000 		.4byte	.LVL27-1
 7029 01ad 0100     		.2byte	0x1
 7030 01af 51       		.byte	0x51
 7031 01b0 29000000 		.4byte	.LVL27-1
 7032 01b4 42000000 		.4byte	.LVL28
 7033 01b8 0400     		.2byte	0x4
 7034 01ba F3       		.byte	0xf3
 7035 01bb 01       		.uleb128 0x1
 7036 01bc 51       		.byte	0x51
 7037 01bd 9F       		.byte	0x9f
 7038 01be 42000000 		.4byte	.LVL28
 7039 01c2 47000000 		.4byte	.LVL30-1
 7040 01c6 0100     		.2byte	0x1
 7041 01c8 51       		.byte	0x51
 7042 01c9 47000000 		.4byte	.LVL30-1
 7043 01cd 6E000000 		.4byte	.LVL32
 7044 01d1 0400     		.2byte	0x4
 7045 01d3 F3       		.byte	0xf3
 7046 01d4 01       		.uleb128 0x1
 7047 01d5 51       		.byte	0x51
 7048 01d6 9F       		.byte	0x9f
 7049 01d7 6E000000 		.4byte	.LVL32
 7050 01db 72000000 		.4byte	.LVL34
 7051 01df 0100     		.2byte	0x1
 7052 01e1 51       		.byte	0x51
 7053 01e2 72000000 		.4byte	.LVL34
 7054 01e6 82000000 		.4byte	.LFE53
 7055 01ea 0400     		.2byte	0x4
 7056 01ec F3       		.byte	0xf3
 7057 01ed 01       		.uleb128 0x1
 7058 01ee 51       		.byte	0x51
 7059 01ef 9F       		.byte	0x9f
 7060 01f0 00000000 		.4byte	0
 7061 01f4 00000000 		.4byte	0
 7062              	.LLST8:
 7063 01f8 00000000 		.4byte	.LVL19
 7064 01fc 0A000000 		.4byte	.LVL22
 7065 0200 0100     		.2byte	0x1
 7066 0202 52       		.byte	0x52
 7067 0203 0A000000 		.4byte	.LVL22
 7068 0207 80000000 		.4byte	.LVL39
 7069 020b 0100     		.2byte	0x1
 7070 020d 56       		.byte	0x56
 7071 020e 80000000 		.4byte	.LVL39
 7072 0212 82000000 		.4byte	.LFE53
 7073 0216 0400     		.2byte	0x4
 7074 0218 F3       		.byte	0xf3
 7075 0219 01       		.uleb128 0x1
 7076 021a 52       		.byte	0x52
 7077 021b 9F       		.byte	0x9f
 7078 021c 00000000 		.4byte	0
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccApaELb.s 			page 184


 7079 0220 00000000 		.4byte	0
 7080              	.LLST9:
 7081 0224 06000000 		.4byte	.LVL20
 7082 0228 1A000000 		.4byte	.LVL24
 7083 022c 0200     		.2byte	0x2
 7084 022e 30       		.byte	0x30
 7085 022f 9F       		.byte	0x9f
 7086 0230 1A000000 		.4byte	.LVL24
 7087 0234 20000000 		.4byte	.LVL25
 7088 0238 0100     		.2byte	0x1
 7089 023a 50       		.byte	0x50
 7090 023b 20000000 		.4byte	.LVL25
 7091 023f 7C000000 		.4byte	.LVL35
 7092 0243 0200     		.2byte	0x2
 7093 0245 30       		.byte	0x30
 7094 0246 9F       		.byte	0x9f
 7095 0247 7C000000 		.4byte	.LVL35
 7096 024b 82000000 		.4byte	.LFE53
 7097 024f 0100     		.2byte	0x1
 7098 0251 50       		.byte	0x50
 7099 0252 00000000 		.4byte	0
 7100 0256 00000000 		.4byte	0
 7101              	.LLST10:
 7102 025a 08000000 		.4byte	.LVL21
 7103 025e 7E000000 		.4byte	.LVL36
 7104 0262 0100     		.2byte	0x1
 7105 0264 55       		.byte	0x55
 7106 0265 7E000000 		.4byte	.LVL36
 7107 0269 80000000 		.4byte	.LVL38
 7108 026d 0300     		.2byte	0x3
 7109 026f 75       		.byte	0x75
 7110 0270 7F       		.sleb128 -1
 7111 0271 9F       		.byte	0x9f
 7112 0272 80000000 		.4byte	.LVL38
 7113 0276 82000000 		.4byte	.LFE53
 7114 027a 0900     		.2byte	0x9
 7115 027c F3       		.byte	0xf3
 7116 027d 01       		.uleb128 0x1
 7117 027e 50       		.byte	0x50
 7118 027f 23       		.byte	0x23
 7119 0280 38       		.uleb128 0x38
 7120 0281 06       		.byte	0x6
 7121 0282 31       		.byte	0x31
 7122 0283 1C       		.byte	0x1c
 7123 0284 9F       		.byte	0x9f
 7124 0285 00000000 		.4byte	0
 7125 0289 00000000 		.4byte	0
 7126              	.LLST11:
 7127 028d 00000000 		.4byte	.LVL40
 7128 0291 1C000000 		.4byte	.LVL44
 7129 0295 0100     		.2byte	0x1
 7130 0297 50       		.byte	0x50
 7131 0298 1C000000 		.4byte	.LVL44
 7132 029c 1F000000 		.4byte	.LVL45-1
 7133 02a0 0200     		.2byte	0x2
 7134 02a2 71       		.byte	0x71
 7135 02a3 00       		.sleb128 0
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccApaELb.s 			page 185


 7136 02a4 1F000000 		.4byte	.LVL45-1
 7137 02a8 44000000 		.4byte	.LVL52
 7138 02ac 0200     		.2byte	0x2
 7139 02ae 91       		.byte	0x91
 7140 02af 6C       		.sleb128 -20
 7141 02b0 44000000 		.4byte	.LVL52
 7142 02b4 48000000 		.4byte	.LVL53
 7143 02b8 0100     		.2byte	0x1
 7144 02ba 50       		.byte	0x50
 7145 02bb 48000000 		.4byte	.LVL53
 7146 02bf 50000000 		.4byte	.LFE68
 7147 02c3 0200     		.2byte	0x2
 7148 02c5 91       		.byte	0x91
 7149 02c6 6C       		.sleb128 -20
 7150 02c7 00000000 		.4byte	0
 7151 02cb 00000000 		.4byte	0
 7152              	.LLST12:
 7153 02cf 00000000 		.4byte	.LVL40
 7154 02d3 1A000000 		.4byte	.LVL43
 7155 02d7 0100     		.2byte	0x1
 7156 02d9 51       		.byte	0x51
 7157 02da 1A000000 		.4byte	.LVL43
 7158 02de 1F000000 		.4byte	.LVL45-1
 7159 02e2 0100     		.2byte	0x1
 7160 02e4 52       		.byte	0x52
 7161 02e5 1F000000 		.4byte	.LVL45-1
 7162 02e9 44000000 		.4byte	.LVL52
 7163 02ed 0400     		.2byte	0x4
 7164 02ef F3       		.byte	0xf3
 7165 02f0 01       		.uleb128 0x1
 7166 02f1 51       		.byte	0x51
 7167 02f2 9F       		.byte	0x9f
 7168 02f3 44000000 		.4byte	.LVL52
 7169 02f7 48000000 		.4byte	.LVL53
 7170 02fb 0100     		.2byte	0x1
 7171 02fd 51       		.byte	0x51
 7172 02fe 48000000 		.4byte	.LVL53
 7173 0302 50000000 		.4byte	.LFE68
 7174 0306 0400     		.2byte	0x4
 7175 0308 F3       		.byte	0xf3
 7176 0309 01       		.uleb128 0x1
 7177 030a 51       		.byte	0x51
 7178 030b 9F       		.byte	0x9f
 7179 030c 00000000 		.4byte	0
 7180 0310 00000000 		.4byte	0
 7181              	.LLST13:
 7182 0314 08000000 		.4byte	.LVL41
 7183 0318 4E000000 		.4byte	.LVL55
 7184 031c 0100     		.2byte	0x1
 7185 031e 54       		.byte	0x54
 7186 031f 00000000 		.4byte	0
 7187 0323 00000000 		.4byte	0
 7188              	.LLST14:
 7189 0327 08000000 		.4byte	.LVL41
 7190 032b 22000000 		.4byte	.LVL46
 7191 032f 0200     		.2byte	0x2
 7192 0331 30       		.byte	0x30
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccApaELb.s 			page 186


 7193 0332 9F       		.byte	0x9f
 7194 0333 22000000 		.4byte	.LVL46
 7195 0337 2E000000 		.4byte	.LVL47
 7196 033b 0100     		.2byte	0x1
 7197 033d 50       		.byte	0x50
 7198 033e 2E000000 		.4byte	.LVL47
 7199 0342 3A000000 		.4byte	.LVL49
 7200 0346 0100     		.2byte	0x1
 7201 0348 56       		.byte	0x56
 7202 0349 3A000000 		.4byte	.LVL49
 7203 034d 44000000 		.4byte	.LVL52
 7204 0351 0100     		.2byte	0x1
 7205 0353 50       		.byte	0x50
 7206 0354 44000000 		.4byte	.LVL52
 7207 0358 48000000 		.4byte	.LVL53
 7208 035c 0200     		.2byte	0x2
 7209 035e 30       		.byte	0x30
 7210 035f 9F       		.byte	0x9f
 7211 0360 48000000 		.4byte	.LVL53
 7212 0364 4E000000 		.4byte	.LVL56
 7213 0368 0100     		.2byte	0x1
 7214 036a 56       		.byte	0x56
 7215 036b 4E000000 		.4byte	.LVL56
 7216 036f 50000000 		.4byte	.LFE68
 7217 0373 0100     		.2byte	0x1
 7218 0375 50       		.byte	0x50
 7219 0376 00000000 		.4byte	0
 7220 037a 00000000 		.4byte	0
 7221              	.LLST15:
 7222 037e 16000000 		.4byte	.LVL42
 7223 0382 3C000000 		.4byte	.LVL50
 7224 0386 0100     		.2byte	0x1
 7225 0388 55       		.byte	0x55
 7226 0389 3C000000 		.4byte	.LVL50
 7227 038d 3E000000 		.4byte	.LVL51
 7228 0391 0300     		.2byte	0x3
 7229 0393 75       		.byte	0x75
 7230 0394 7F       		.sleb128 -1
 7231 0395 9F       		.byte	0x9f
 7232 0396 48000000 		.4byte	.LVL53
 7233 039a 4A000000 		.4byte	.LVL54
 7234 039e 0100     		.2byte	0x1
 7235 03a0 55       		.byte	0x55
 7236 03a1 00000000 		.4byte	0
 7237 03a5 00000000 		.4byte	0
 7238              	.LLST16:
 7239 03a9 00000000 		.4byte	.LVL57
 7240 03ad 1E000000 		.4byte	.LVL59
 7241 03b1 0100     		.2byte	0x1
 7242 03b3 50       		.byte	0x50
 7243 03b4 1E000000 		.4byte	.LVL59
 7244 03b8 24000000 		.4byte	.LFE54
 7245 03bc 0400     		.2byte	0x4
 7246 03be F3       		.byte	0xf3
 7247 03bf 01       		.uleb128 0x1
 7248 03c0 50       		.byte	0x50
 7249 03c1 9F       		.byte	0x9f
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccApaELb.s 			page 187


 7250 03c2 00000000 		.4byte	0
 7251 03c6 00000000 		.4byte	0
 7252              	.LLST17:
 7253 03ca 00000000 		.4byte	.LVL57
 7254 03ce 12000000 		.4byte	.LVL58
 7255 03d2 0100     		.2byte	0x1
 7256 03d4 51       		.byte	0x51
 7257 03d5 12000000 		.4byte	.LVL58
 7258 03d9 22000000 		.4byte	.LVL61
 7259 03dd 0100     		.2byte	0x1
 7260 03df 54       		.byte	0x54
 7261 03e0 22000000 		.4byte	.LVL61
 7262 03e4 24000000 		.4byte	.LFE54
 7263 03e8 0400     		.2byte	0x4
 7264 03ea F3       		.byte	0xf3
 7265 03eb 01       		.uleb128 0x1
 7266 03ec 51       		.byte	0x51
 7267 03ed 9F       		.byte	0x9f
 7268 03ee 00000000 		.4byte	0
 7269 03f2 00000000 		.4byte	0
 7270              	.LLST18:
 7271 03f6 00000000 		.4byte	.LVL62
 7272 03fa 07000000 		.4byte	.LVL63-1
 7273 03fe 0100     		.2byte	0x1
 7274 0400 50       		.byte	0x50
 7275 0401 07000000 		.4byte	.LVL63-1
 7276 0405 84000000 		.4byte	.LVL81
 7277 0409 0100     		.2byte	0x1
 7278 040b 55       		.byte	0x55
 7279 040c 84000000 		.4byte	.LVL81
 7280 0410 86000000 		.4byte	.LFE55
 7281 0414 0400     		.2byte	0x4
 7282 0416 F3       		.byte	0xf3
 7283 0417 01       		.uleb128 0x1
 7284 0418 50       		.byte	0x50
 7285 0419 9F       		.byte	0x9f
 7286 041a 00000000 		.4byte	0
 7287 041e 00000000 		.4byte	0
 7288              	.LLST19:
 7289 0422 0E000000 		.4byte	.LVL64
 7290 0426 40000000 		.4byte	.LVL69
 7291 042a 0100     		.2byte	0x1
 7292 042c 54       		.byte	0x54
 7293 042d 42000000 		.4byte	.LVL70
 7294 0431 58000000 		.4byte	.LVL73
 7295 0435 0100     		.2byte	0x1
 7296 0437 54       		.byte	0x54
 7297 0438 00000000 		.4byte	0
 7298 043c 00000000 		.4byte	0
 7299              	.LLST20:
 7300 0440 5A000000 		.4byte	.LVL74
 7301 0444 74000000 		.4byte	.LVL77
 7302 0448 0100     		.2byte	0x1
 7303 044a 54       		.byte	0x54
 7304 044b 76000000 		.4byte	.LVL78
 7305 044f 84000000 		.4byte	.LVL80
 7306 0453 0100     		.2byte	0x1
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccApaELb.s 			page 188


 7307 0455 54       		.byte	0x54
 7308 0456 00000000 		.4byte	0
 7309 045a 00000000 		.4byte	0
 7310              	.LLST21:
 7311 045e 00000000 		.4byte	.LVL82
 7312 0462 09000000 		.4byte	.LVL84-1
 7313 0466 0100     		.2byte	0x1
 7314 0468 50       		.byte	0x50
 7315 0469 09000000 		.4byte	.LVL84-1
 7316 046d 62000000 		.4byte	.LVL90
 7317 0471 0100     		.2byte	0x1
 7318 0473 54       		.byte	0x54
 7319 0474 62000000 		.4byte	.LVL90
 7320 0478 64000000 		.4byte	.LFE32
 7321 047c 0400     		.2byte	0x4
 7322 047e F3       		.byte	0xf3
 7323 047f 01       		.uleb128 0x1
 7324 0480 50       		.byte	0x50
 7325 0481 9F       		.byte	0x9f
 7326 0482 00000000 		.4byte	0
 7327 0486 00000000 		.4byte	0
 7328              	.LLST22:
 7329 048a 00000000 		.4byte	.LVL82
 7330 048e 09000000 		.4byte	.LVL84-1
 7331 0492 0100     		.2byte	0x1
 7332 0494 51       		.byte	0x51
 7333 0495 09000000 		.4byte	.LVL84-1
 7334 0499 62000000 		.4byte	.LVL91
 7335 049d 0100     		.2byte	0x1
 7336 049f 55       		.byte	0x55
 7337 04a0 62000000 		.4byte	.LVL91
 7338 04a4 64000000 		.4byte	.LFE32
 7339 04a8 0400     		.2byte	0x4
 7340 04aa F3       		.byte	0xf3
 7341 04ab 01       		.uleb128 0x1
 7342 04ac 51       		.byte	0x51
 7343 04ad 9F       		.byte	0x9f
 7344 04ae 00000000 		.4byte	0
 7345 04b2 00000000 		.4byte	0
 7346              	.LLST23:
 7347 04b6 06000000 		.4byte	.LVL83
 7348 04ba 09000000 		.4byte	.LVL84-1
 7349 04be 0100     		.2byte	0x1
 7350 04c0 50       		.byte	0x50
 7351 04c1 09000000 		.4byte	.LVL84-1
 7352 04c5 62000000 		.4byte	.LVL90
 7353 04c9 0100     		.2byte	0x1
 7354 04cb 54       		.byte	0x54
 7355 04cc 62000000 		.4byte	.LVL90
 7356 04d0 64000000 		.4byte	.LFE32
 7357 04d4 0400     		.2byte	0x4
 7358 04d6 F3       		.byte	0xf3
 7359 04d7 01       		.uleb128 0x1
 7360 04d8 50       		.byte	0x50
 7361 04d9 9F       		.byte	0x9f
 7362 04da 00000000 		.4byte	0
 7363 04de 00000000 		.4byte	0
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccApaELb.s 			page 189


 7364              	.LLST24:
 7365 04e2 00000000 		.4byte	.LVL92
 7366 04e6 16000000 		.4byte	.LVL94
 7367 04ea 0100     		.2byte	0x1
 7368 04ec 50       		.byte	0x50
 7369 04ed 16000000 		.4byte	.LVL94
 7370 04f1 19000000 		.4byte	.LVL95-1
 7371 04f5 0200     		.2byte	0x2
 7372 04f7 74       		.byte	0x74
 7373 04f8 3C       		.sleb128 60
 7374 04f9 19000000 		.4byte	.LVL95-1
 7375 04fd 20000000 		.4byte	.LFE34
 7376 0501 0400     		.2byte	0x4
 7377 0503 F3       		.byte	0xf3
 7378 0504 01       		.uleb128 0x1
 7379 0505 50       		.byte	0x50
 7380 0506 9F       		.byte	0x9f
 7381 0507 00000000 		.4byte	0
 7382 050b 00000000 		.4byte	0
 7383              	.LLST25:
 7384 050f 00000000 		.4byte	.LVL92
 7385 0513 14000000 		.4byte	.LVL93
 7386 0517 0100     		.2byte	0x1
 7387 0519 51       		.byte	0x51
 7388 051a 14000000 		.4byte	.LVL93
 7389 051e 19000000 		.4byte	.LVL95-1
 7390 0522 0300     		.2byte	0x3
 7391 0524 74       		.byte	0x74
 7392 0525 C000     		.sleb128 64
 7393 0527 19000000 		.4byte	.LVL95-1
 7394 052b 20000000 		.4byte	.LFE34
 7395 052f 0400     		.2byte	0x4
 7396 0531 F3       		.byte	0xf3
 7397 0532 01       		.uleb128 0x1
 7398 0533 51       		.byte	0x51
 7399 0534 9F       		.byte	0x9f
 7400 0535 00000000 		.4byte	0
 7401 0539 00000000 		.4byte	0
 7402              	.LLST26:
 7403 053d 00000000 		.4byte	.LVL92
 7404 0541 19000000 		.4byte	.LVL95-1
 7405 0545 0100     		.2byte	0x1
 7406 0547 52       		.byte	0x52
 7407 0548 19000000 		.4byte	.LVL95-1
 7408 054c 20000000 		.4byte	.LFE34
 7409 0550 0400     		.2byte	0x4
 7410 0552 F3       		.byte	0xf3
 7411 0553 01       		.uleb128 0x1
 7412 0554 52       		.byte	0x52
 7413 0555 9F       		.byte	0x9f
 7414 0556 00000000 		.4byte	0
 7415 055a 00000000 		.4byte	0
 7416              	.LLST27:
 7417 055e 00000000 		.4byte	.LVL92
 7418 0562 19000000 		.4byte	.LVL95-1
 7419 0566 0100     		.2byte	0x1
 7420 0568 53       		.byte	0x53
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccApaELb.s 			page 190


 7421 0569 19000000 		.4byte	.LVL95-1
 7422 056d 20000000 		.4byte	.LFE34
 7423 0571 0400     		.2byte	0x4
 7424 0573 F3       		.byte	0xf3
 7425 0574 01       		.uleb128 0x1
 7426 0575 53       		.byte	0x53
 7427 0576 9F       		.byte	0x9f
 7428 0577 00000000 		.4byte	0
 7429 057b 00000000 		.4byte	0
 7430              	.LLST28:
 7431 057f 00000000 		.4byte	.LVL96
 7432 0583 10000000 		.4byte	.LVL97
 7433 0587 0100     		.2byte	0x1
 7434 0589 50       		.byte	0x50
 7435 058a 10000000 		.4byte	.LVL97
 7436 058e 12000000 		.4byte	.LVL98
 7437 0592 0100     		.2byte	0x1
 7438 0594 55       		.byte	0x55
 7439 0595 12000000 		.4byte	.LVL98
 7440 0599 14000000 		.4byte	.LVL99
 7441 059d 0100     		.2byte	0x1
 7442 059f 50       		.byte	0x50
 7443 05a0 14000000 		.4byte	.LVL99
 7444 05a4 32000000 		.4byte	.LVL106
 7445 05a8 0100     		.2byte	0x1
 7446 05aa 55       		.byte	0x55
 7447 05ab 32000000 		.4byte	.LVL106
 7448 05af 34000000 		.4byte	.LFE33
 7449 05b3 0400     		.2byte	0x4
 7450 05b5 F3       		.byte	0xf3
 7451 05b6 01       		.uleb128 0x1
 7452 05b7 50       		.byte	0x50
 7453 05b8 9F       		.byte	0x9f
 7454 05b9 00000000 		.4byte	0
 7455 05bd 00000000 		.4byte	0
 7456              	.LLST29:
 7457 05c1 00000000 		.4byte	.LVL96
 7458 05c5 19000000 		.4byte	.LVL101-1
 7459 05c9 0100     		.2byte	0x1
 7460 05cb 51       		.byte	0x51
 7461 05cc 19000000 		.4byte	.LVL101-1
 7462 05d0 32000000 		.4byte	.LVL107
 7463 05d4 0100     		.2byte	0x1
 7464 05d6 57       		.byte	0x57
 7465 05d7 32000000 		.4byte	.LVL107
 7466 05db 34000000 		.4byte	.LFE33
 7467 05df 0400     		.2byte	0x4
 7468 05e1 F3       		.byte	0xf3
 7469 05e2 01       		.uleb128 0x1
 7470 05e3 51       		.byte	0x51
 7471 05e4 9F       		.byte	0x9f
 7472 05e5 00000000 		.4byte	0
 7473 05e9 00000000 		.4byte	0
 7474              	.LLST30:
 7475 05ed 00000000 		.4byte	.LVL96
 7476 05f1 19000000 		.4byte	.LVL101-1
 7477 05f5 0100     		.2byte	0x1
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccApaELb.s 			page 191


 7478 05f7 52       		.byte	0x52
 7479 05f8 19000000 		.4byte	.LVL101-1
 7480 05fc 34000000 		.4byte	.LFE33
 7481 0600 0400     		.2byte	0x4
 7482 0602 F3       		.byte	0xf3
 7483 0603 01       		.uleb128 0x1
 7484 0604 52       		.byte	0x52
 7485 0605 9F       		.byte	0x9f
 7486 0606 00000000 		.4byte	0
 7487 060a 00000000 		.4byte	0
 7488              	.LLST31:
 7489 060e 1C000000 		.4byte	.LVL102
 7490 0612 2A000000 		.4byte	.LVL103
 7491 0616 0100     		.2byte	0x1
 7492 0618 50       		.byte	0x50
 7493 0619 2A000000 		.4byte	.LVL103
 7494 061d 32000000 		.4byte	.LVL105
 7495 0621 0100     		.2byte	0x1
 7496 0623 54       		.byte	0x54
 7497 0624 32000000 		.4byte	.LVL105
 7498 0628 34000000 		.4byte	.LFE33
 7499 062c 0100     		.2byte	0x1
 7500 062e 50       		.byte	0x50
 7501 062f 00000000 		.4byte	0
 7502 0633 00000000 		.4byte	0
 7503              	.LLST32:
 7504 0637 10000000 		.4byte	.LVL97
 7505 063b 12000000 		.4byte	.LVL98
 7506 063f 0100     		.2byte	0x1
 7507 0641 50       		.byte	0x50
 7508 0642 14000000 		.4byte	.LVL99
 7509 0646 16000000 		.4byte	.LVL100
 7510 064a 0100     		.2byte	0x1
 7511 064c 50       		.byte	0x50
 7512 064d 16000000 		.4byte	.LVL100
 7513 0651 19000000 		.4byte	.LVL101-1
 7514 0655 0400     		.2byte	0x4
 7515 0657 70       		.byte	0x70
 7516 0658 B47F     		.sleb128 -76
 7517 065a 9F       		.byte	0x9f
 7518 065b 00000000 		.4byte	0
 7519 065f 00000000 		.4byte	0
 7520              	.LLST33:
 7521 0663 00000000 		.4byte	.LVL108
 7522 0667 0B000000 		.4byte	.LVL110-1
 7523 066b 0100     		.2byte	0x1
 7524 066d 50       		.byte	0x50
 7525 066e 0B000000 		.4byte	.LVL110-1
 7526 0672 14000000 		.4byte	.LFE39
 7527 0676 0400     		.2byte	0x4
 7528 0678 F3       		.byte	0xf3
 7529 0679 01       		.uleb128 0x1
 7530 067a 50       		.byte	0x50
 7531 067b 9F       		.byte	0x9f
 7532 067c 00000000 		.4byte	0
 7533 0680 00000000 		.4byte	0
 7534              	.LLST34:
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccApaELb.s 			page 192


 7535 0684 00000000 		.4byte	.LVL108
 7536 0688 08000000 		.4byte	.LVL109
 7537 068c 0100     		.2byte	0x1
 7538 068e 51       		.byte	0x51
 7539 068f 08000000 		.4byte	.LVL109
 7540 0693 12000000 		.4byte	.LVL111
 7541 0697 0100     		.2byte	0x1
 7542 0699 54       		.byte	0x54
 7543 069a 12000000 		.4byte	.LVL111
 7544 069e 14000000 		.4byte	.LFE39
 7545 06a2 0400     		.2byte	0x4
 7546 06a4 F3       		.byte	0xf3
 7547 06a5 01       		.uleb128 0x1
 7548 06a6 51       		.byte	0x51
 7549 06a7 9F       		.byte	0x9f
 7550 06a8 00000000 		.4byte	0
 7551 06ac 00000000 		.4byte	0
 7552              	.LLST35:
 7553 06b0 00000000 		.4byte	.LVL112
 7554 06b4 0E000000 		.4byte	.LVL114
 7555 06b8 0100     		.2byte	0x1
 7556 06ba 50       		.byte	0x50
 7557 06bb 0E000000 		.4byte	.LVL114
 7558 06bf 00010000 		.4byte	.LVL145
 7559 06c3 0100     		.2byte	0x1
 7560 06c5 54       		.byte	0x54
 7561 06c6 00010000 		.4byte	.LVL145
 7562 06ca 02010000 		.4byte	.LFE40
 7563 06ce 0400     		.2byte	0x4
 7564 06d0 F3       		.byte	0xf3
 7565 06d1 01       		.uleb128 0x1
 7566 06d2 50       		.byte	0x50
 7567 06d3 9F       		.byte	0x9f
 7568 06d4 00000000 		.4byte	0
 7569 06d8 00000000 		.4byte	0
 7570              	.LLST36:
 7571 06dc 00000000 		.4byte	.LVL112
 7572 06e0 0E000000 		.4byte	.LVL114
 7573 06e4 0100     		.2byte	0x1
 7574 06e6 51       		.byte	0x51
 7575 06e7 0E000000 		.4byte	.LVL114
 7576 06eb 00010000 		.4byte	.LVL146
 7577 06ef 0100     		.2byte	0x1
 7578 06f1 55       		.byte	0x55
 7579 06f2 00010000 		.4byte	.LVL146
 7580 06f6 02010000 		.4byte	.LFE40
 7581 06fa 0400     		.2byte	0x4
 7582 06fc F3       		.byte	0xf3
 7583 06fd 01       		.uleb128 0x1
 7584 06fe 51       		.byte	0x51
 7585 06ff 9F       		.byte	0x9f
 7586 0700 00000000 		.4byte	0
 7587 0704 00000000 		.4byte	0
 7588              	.LLST37:
 7589 0708 00000000 		.4byte	.LVL112
 7590 070c 0E000000 		.4byte	.LVL114
 7591 0710 0100     		.2byte	0x1
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccApaELb.s 			page 193


 7592 0712 52       		.byte	0x52
 7593 0713 0E000000 		.4byte	.LVL114
 7594 0717 B4000000 		.4byte	.LVL134
 7595 071b 0200     		.2byte	0x2
 7596 071d 91       		.byte	0x91
 7597 071e 5C       		.sleb128 -36
 7598 071f B4000000 		.4byte	.LVL134
 7599 0723 B9000000 		.4byte	.LVL135-1
 7600 0727 0200     		.2byte	0x2
 7601 0729 71       		.byte	0x71
 7602 072a 00       		.sleb128 0
 7603 072b B9000000 		.4byte	.LVL135-1
 7604 072f 02010000 		.4byte	.LFE40
 7605 0733 0200     		.2byte	0x2
 7606 0735 91       		.byte	0x91
 7607 0736 5C       		.sleb128 -36
 7608 0737 00000000 		.4byte	0
 7609 073b 00000000 		.4byte	0
 7610              	.LLST38:
 7611 073f 00000000 		.4byte	.LVL112
 7612 0743 0E000000 		.4byte	.LVL114
 7613 0747 0100     		.2byte	0x1
 7614 0749 53       		.byte	0x53
 7615 074a 0E000000 		.4byte	.LVL114
 7616 074e 00010000 		.4byte	.LVL148
 7617 0752 0100     		.2byte	0x1
 7618 0754 57       		.byte	0x57
 7619 0755 00010000 		.4byte	.LVL148
 7620 0759 02010000 		.4byte	.LFE40
 7621 075d 0400     		.2byte	0x4
 7622 075f F3       		.byte	0xf3
 7623 0760 01       		.uleb128 0x1
 7624 0761 53       		.byte	0x53
 7625 0762 9F       		.byte	0x9f
 7626 0763 00000000 		.4byte	0
 7627 0767 00000000 		.4byte	0
 7628              	.LLST39:
 7629 076b 0C000000 		.4byte	.LVL113
 7630 076f 0E000000 		.4byte	.LVL114
 7631 0773 0200     		.2byte	0x2
 7632 0775 30       		.byte	0x30
 7633 0776 9F       		.byte	0x9f
 7634 0777 0E000000 		.4byte	.LVL114
 7635 077b 80000000 		.4byte	.LVL128
 7636 077f 0100     		.2byte	0x1
 7637 0781 56       		.byte	0x56
 7638 0782 80000000 		.4byte	.LVL128
 7639 0786 82000000 		.4byte	.LVL129
 7640 078a 0200     		.2byte	0x2
 7641 078c 31       		.byte	0x31
 7642 078d 9F       		.byte	0x9f
 7643 078e 82000000 		.4byte	.LVL129
 7644 0792 00010000 		.4byte	.LVL147
 7645 0796 0100     		.2byte	0x1
 7646 0798 56       		.byte	0x56
 7647 0799 00000000 		.4byte	0
 7648 079d 00000000 		.4byte	0
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccApaELb.s 			page 194


 7649              	.LLST40:
 7650 07a1 28000000 		.4byte	.LVL116
 7651 07a5 32000000 		.4byte	.LVL117
 7652 07a9 0100     		.2byte	0x1
 7653 07ab 50       		.byte	0x50
 7654 07ac 40000000 		.4byte	.LVL120
 7655 07b0 48000000 		.4byte	.LVL121
 7656 07b4 0100     		.2byte	0x1
 7657 07b6 50       		.byte	0x50
 7658 07b7 58000000 		.4byte	.LVL124
 7659 07bb 5F000000 		.4byte	.LVL125-1
 7660 07bf 0100     		.2byte	0x1
 7661 07c1 50       		.byte	0x50
 7662 07c2 00000000 		.4byte	0
 7663 07c6 00000000 		.4byte	0
 7664              	.LLST41:
 7665 07ca 0C000000 		.4byte	.LVL113
 7666 07ce 0E000000 		.4byte	.LVL114
 7667 07d2 0100     		.2byte	0x1
 7668 07d4 50       		.byte	0x50
 7669 07d5 0E000000 		.4byte	.LVL114
 7670 07d9 00010000 		.4byte	.LVL145
 7671 07dd 0100     		.2byte	0x1
 7672 07df 54       		.byte	0x54
 7673 07e0 00010000 		.4byte	.LVL145
 7674 07e4 02010000 		.4byte	.LFE40
 7675 07e8 0400     		.2byte	0x4
 7676 07ea F3       		.byte	0xf3
 7677 07eb 01       		.uleb128 0x1
 7678 07ec 50       		.byte	0x50
 7679 07ed 9F       		.byte	0x9f
 7680 07ee 00000000 		.4byte	0
 7681 07f2 00000000 		.4byte	0
 7682              	.LLST42:
 7683 07f6 00000000 		.4byte	.LVL149
 7684 07fa 15000000 		.4byte	.LVL150-1
 7685 07fe 0100     		.2byte	0x1
 7686 0800 50       		.byte	0x50
 7687 0801 15000000 		.4byte	.LVL150-1
 7688 0805 18000000 		.4byte	.LFE35
 7689 0809 0400     		.2byte	0x4
 7690 080b F3       		.byte	0xf3
 7691 080c 01       		.uleb128 0x1
 7692 080d 50       		.byte	0x50
 7693 080e 9F       		.byte	0x9f
 7694 080f 00000000 		.4byte	0
 7695 0813 00000000 		.4byte	0
 7696              	.LLST43:
 7697 0817 00000000 		.4byte	.LVL151
 7698 081b 08000000 		.4byte	.LVL153
 7699 081f 0100     		.2byte	0x1
 7700 0821 50       		.byte	0x50
 7701 0822 08000000 		.4byte	.LVL153
 7702 0826 16000000 		.4byte	.LFE36
 7703 082a 0400     		.2byte	0x4
 7704 082c F3       		.byte	0xf3
 7705 082d 01       		.uleb128 0x1
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccApaELb.s 			page 195


 7706 082e 50       		.byte	0x50
 7707 082f 9F       		.byte	0x9f
 7708 0830 00000000 		.4byte	0
 7709 0834 00000000 		.4byte	0
 7710              	.LLST44:
 7711 0838 0E000000 		.4byte	.LVL155
 7712 083c 11000000 		.4byte	.LVL156-1
 7713 0840 0100     		.2byte	0x1
 7714 0842 50       		.byte	0x50
 7715 0843 11000000 		.4byte	.LVL156-1
 7716 0847 14000000 		.4byte	.LVL157
 7717 084b 0100     		.2byte	0x1
 7718 084d 54       		.byte	0x54
 7719 084e 14000000 		.4byte	.LVL157
 7720 0852 16000000 		.4byte	.LFE36
 7721 0856 0100     		.2byte	0x1
 7722 0858 50       		.byte	0x50
 7723 0859 00000000 		.4byte	0
 7724 085d 00000000 		.4byte	0
 7725              	.LLST45:
 7726 0861 00000000 		.4byte	.LVL158
 7727 0865 09000000 		.4byte	.LVL160-1
 7728 0869 0100     		.2byte	0x1
 7729 086b 50       		.byte	0x50
 7730 086c 09000000 		.4byte	.LVL160-1
 7731 0870 2C000000 		.4byte	.LVL163
 7732 0874 0100     		.2byte	0x1
 7733 0876 54       		.byte	0x54
 7734 0877 2C000000 		.4byte	.LVL163
 7735 087b 2E000000 		.4byte	.LFE37
 7736 087f 0400     		.2byte	0x4
 7737 0881 F3       		.byte	0xf3
 7738 0882 01       		.uleb128 0x1
 7739 0883 50       		.byte	0x50
 7740 0884 9F       		.byte	0x9f
 7741 0885 00000000 		.4byte	0
 7742 0889 00000000 		.4byte	0
 7743              	.LLST46:
 7744 088d 04000000 		.4byte	.LVL159
 7745 0891 09000000 		.4byte	.LVL160-1
 7746 0895 0100     		.2byte	0x1
 7747 0897 50       		.byte	0x50
 7748 0898 09000000 		.4byte	.LVL160-1
 7749 089c 2C000000 		.4byte	.LVL163
 7750 08a0 0100     		.2byte	0x1
 7751 08a2 54       		.byte	0x54
 7752 08a3 2C000000 		.4byte	.LVL163
 7753 08a7 2E000000 		.4byte	.LFE37
 7754 08ab 0400     		.2byte	0x4
 7755 08ad F3       		.byte	0xf3
 7756 08ae 01       		.uleb128 0x1
 7757 08af 50       		.byte	0x50
 7758 08b0 9F       		.byte	0x9f
 7759 08b1 00000000 		.4byte	0
 7760 08b5 00000000 		.4byte	0
 7761              	.LLST47:
 7762 08b9 00000000 		.4byte	.LVL164
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccApaELb.s 			page 196


 7763 08bd 0F000000 		.4byte	.LVL166-1
 7764 08c1 0100     		.2byte	0x1
 7765 08c3 50       		.byte	0x50
 7766 08c4 0F000000 		.4byte	.LVL166-1
 7767 08c8 9A000000 		.4byte	.LVL193
 7768 08cc 0100     		.2byte	0x1
 7769 08ce 56       		.byte	0x56
 7770 08cf 9A000000 		.4byte	.LVL193
 7771 08d3 9C000000 		.4byte	.LFE41
 7772 08d7 0400     		.2byte	0x4
 7773 08d9 F3       		.byte	0xf3
 7774 08da 01       		.uleb128 0x1
 7775 08db 50       		.byte	0x50
 7776 08dc 9F       		.byte	0x9f
 7777 08dd 00000000 		.4byte	0
 7778 08e1 00000000 		.4byte	0
 7779              	.LLST48:
 7780 08e5 00000000 		.4byte	.LVL164
 7781 08e9 0F000000 		.4byte	.LVL166-1
 7782 08ed 0100     		.2byte	0x1
 7783 08ef 51       		.byte	0x51
 7784 08f0 0F000000 		.4byte	.LVL166-1
 7785 08f4 9C000000 		.4byte	.LFE41
 7786 08f8 0200     		.2byte	0x2
 7787 08fa 91       		.byte	0x91
 7788 08fb 64       		.sleb128 -28
 7789 08fc 00000000 		.4byte	0
 7790 0900 00000000 		.4byte	0
 7791              	.LLST49:
 7792 0904 00000000 		.4byte	.LVL164
 7793 0908 0F000000 		.4byte	.LVL166-1
 7794 090c 0100     		.2byte	0x1
 7795 090e 52       		.byte	0x52
 7796 090f 0F000000 		.4byte	.LVL166-1
 7797 0913 9A000000 		.4byte	.LVL194
 7798 0917 0100     		.2byte	0x1
 7799 0919 57       		.byte	0x57
 7800 091a 9A000000 		.4byte	.LVL194
 7801 091e 9C000000 		.4byte	.LFE41
 7802 0922 0400     		.2byte	0x4
 7803 0924 F3       		.byte	0xf3
 7804 0925 01       		.uleb128 0x1
 7805 0926 52       		.byte	0x52
 7806 0927 9F       		.byte	0x9f
 7807 0928 00000000 		.4byte	0
 7808 092c 00000000 		.4byte	0
 7809              	.LLST50:
 7810 0930 00000000 		.4byte	.LVL164
 7811 0934 0F000000 		.4byte	.LVL166-1
 7812 0938 0100     		.2byte	0x1
 7813 093a 53       		.byte	0x53
 7814 093b 0F000000 		.4byte	.LVL166-1
 7815 093f 4E000000 		.4byte	.LVL172
 7816 0943 0100     		.2byte	0x1
 7817 0945 54       		.byte	0x54
 7818 0946 4E000000 		.4byte	.LVL172
 7819 094a 50000000 		.4byte	.LVL173
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccApaELb.s 			page 197


 7820 094e 0400     		.2byte	0x4
 7821 0950 F3       		.byte	0xf3
 7822 0951 01       		.uleb128 0x1
 7823 0952 53       		.byte	0x53
 7824 0953 9F       		.byte	0x9f
 7825 0954 50000000 		.4byte	.LVL173
 7826 0958 6C000000 		.4byte	.LVL175
 7827 095c 0100     		.2byte	0x1
 7828 095e 54       		.byte	0x54
 7829 095f 6C000000 		.4byte	.LVL175
 7830 0963 6E000000 		.4byte	.LVL176
 7831 0967 0400     		.2byte	0x4
 7832 0969 F3       		.byte	0xf3
 7833 096a 01       		.uleb128 0x1
 7834 096b 53       		.byte	0x53
 7835 096c 9F       		.byte	0x9f
 7836 096d 6E000000 		.4byte	.LVL176
 7837 0971 78000000 		.4byte	.LVL177
 7838 0975 0100     		.2byte	0x1
 7839 0977 54       		.byte	0x54
 7840 0978 78000000 		.4byte	.LVL177
 7841 097c 7A000000 		.4byte	.LVL178
 7842 0980 0400     		.2byte	0x4
 7843 0982 F3       		.byte	0xf3
 7844 0983 01       		.uleb128 0x1
 7845 0984 53       		.byte	0x53
 7846 0985 9F       		.byte	0x9f
 7847 0986 7A000000 		.4byte	.LVL178
 7848 098a 7C000000 		.4byte	.LVL179
 7849 098e 0100     		.2byte	0x1
 7850 0990 54       		.byte	0x54
 7851 0991 7C000000 		.4byte	.LVL179
 7852 0995 7E000000 		.4byte	.LVL180
 7853 0999 0400     		.2byte	0x4
 7854 099b F3       		.byte	0xf3
 7855 099c 01       		.uleb128 0x1
 7856 099d 53       		.byte	0x53
 7857 099e 9F       		.byte	0x9f
 7858 099f 7E000000 		.4byte	.LVL180
 7859 09a3 80000000 		.4byte	.LVL181
 7860 09a7 0100     		.2byte	0x1
 7861 09a9 54       		.byte	0x54
 7862 09aa 80000000 		.4byte	.LVL181
 7863 09ae 82000000 		.4byte	.LVL182
 7864 09b2 0400     		.2byte	0x4
 7865 09b4 F3       		.byte	0xf3
 7866 09b5 01       		.uleb128 0x1
 7867 09b6 53       		.byte	0x53
 7868 09b7 9F       		.byte	0x9f
 7869 09b8 82000000 		.4byte	.LVL182
 7870 09bc 84000000 		.4byte	.LVL183
 7871 09c0 0100     		.2byte	0x1
 7872 09c2 54       		.byte	0x54
 7873 09c3 84000000 		.4byte	.LVL183
 7874 09c7 86000000 		.4byte	.LVL184
 7875 09cb 0400     		.2byte	0x4
 7876 09cd F3       		.byte	0xf3
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccApaELb.s 			page 198


 7877 09ce 01       		.uleb128 0x1
 7878 09cf 53       		.byte	0x53
 7879 09d0 9F       		.byte	0x9f
 7880 09d1 86000000 		.4byte	.LVL184
 7881 09d5 88000000 		.4byte	.LVL185
 7882 09d9 0100     		.2byte	0x1
 7883 09db 54       		.byte	0x54
 7884 09dc 88000000 		.4byte	.LVL185
 7885 09e0 8A000000 		.4byte	.LVL186
 7886 09e4 0400     		.2byte	0x4
 7887 09e6 F3       		.byte	0xf3
 7888 09e7 01       		.uleb128 0x1
 7889 09e8 53       		.byte	0x53
 7890 09e9 9F       		.byte	0x9f
 7891 09ea 8A000000 		.4byte	.LVL186
 7892 09ee 8C000000 		.4byte	.LVL187
 7893 09f2 0100     		.2byte	0x1
 7894 09f4 54       		.byte	0x54
 7895 09f5 8C000000 		.4byte	.LVL187
 7896 09f9 8E000000 		.4byte	.LVL188
 7897 09fd 0400     		.2byte	0x4
 7898 09ff F3       		.byte	0xf3
 7899 0a00 01       		.uleb128 0x1
 7900 0a01 53       		.byte	0x53
 7901 0a02 9F       		.byte	0x9f
 7902 0a03 8E000000 		.4byte	.LVL188
 7903 0a07 90000000 		.4byte	.LVL189
 7904 0a0b 0100     		.2byte	0x1
 7905 0a0d 54       		.byte	0x54
 7906 0a0e 90000000 		.4byte	.LVL189
 7907 0a12 9C000000 		.4byte	.LFE41
 7908 0a16 0400     		.2byte	0x4
 7909 0a18 F3       		.byte	0xf3
 7910 0a19 01       		.uleb128 0x1
 7911 0a1a 53       		.byte	0x53
 7912 0a1b 9F       		.byte	0x9f
 7913 0a1c 00000000 		.4byte	0
 7914 0a20 00000000 		.4byte	0
 7915              	.LLST51:
 7916 0a24 90000000 		.4byte	.LVL189
 7917 0a28 9A000000 		.4byte	.LVL192
 7918 0a2c 0100     		.2byte	0x1
 7919 0a2e 54       		.byte	0x54
 7920 0a2f 9A000000 		.4byte	.LVL192
 7921 0a33 9C000000 		.4byte	.LFE41
 7922 0a37 0100     		.2byte	0x1
 7923 0a39 50       		.byte	0x50
 7924 0a3a 00000000 		.4byte	0
 7925 0a3e 00000000 		.4byte	0
 7926              	.LLST52:
 7927 0a42 12000000 		.4byte	.LVL167
 7928 0a46 2A000000 		.4byte	.LVL169
 7929 0a4a 0100     		.2byte	0x1
 7930 0a4c 50       		.byte	0x50
 7931 0a4d 2A000000 		.4byte	.LVL169
 7932 0a51 7A000000 		.4byte	.LVL178
 7933 0a55 0200     		.2byte	0x2
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccApaELb.s 			page 199


 7934 0a57 7D       		.byte	0x7d
 7935 0a58 00       		.sleb128 0
 7936 0a59 7A000000 		.4byte	.LVL178
 7937 0a5d 7E000000 		.4byte	.LVL180
 7938 0a61 0100     		.2byte	0x1
 7939 0a63 50       		.byte	0x50
 7940 0a64 7E000000 		.4byte	.LVL180
 7941 0a68 9A000000 		.4byte	.LVL191
 7942 0a6c 0200     		.2byte	0x2
 7943 0a6e 7D       		.byte	0x7d
 7944 0a6f 00       		.sleb128 0
 7945 0a70 9A000000 		.4byte	.LVL191
 7946 0a74 9C000000 		.4byte	.LFE41
 7947 0a78 0200     		.2byte	0x2
 7948 0a7a 91       		.byte	0x91
 7949 0a7b 60       		.sleb128 -32
 7950 0a7c 00000000 		.4byte	0
 7951 0a80 00000000 		.4byte	0
 7952              	.LLST53:
 7953 0a84 0C000000 		.4byte	.LVL165
 7954 0a88 0F000000 		.4byte	.LVL166-1
 7955 0a8c 0100     		.2byte	0x1
 7956 0a8e 50       		.byte	0x50
 7957 0a8f 0F000000 		.4byte	.LVL166-1
 7958 0a93 9A000000 		.4byte	.LVL193
 7959 0a97 0100     		.2byte	0x1
 7960 0a99 56       		.byte	0x56
 7961 0a9a 9A000000 		.4byte	.LVL193
 7962 0a9e 9C000000 		.4byte	.LFE41
 7963 0aa2 0400     		.2byte	0x4
 7964 0aa4 F3       		.byte	0xf3
 7965 0aa5 01       		.uleb128 0x1
 7966 0aa6 50       		.byte	0x50
 7967 0aa7 9F       		.byte	0x9f
 7968 0aa8 00000000 		.4byte	0
 7969 0aac 00000000 		.4byte	0
 7970              	.LLST54:
 7971 0ab0 24000000 		.4byte	.LVL168
 7972 0ab4 7A000000 		.4byte	.LVL178
 7973 0ab8 0100     		.2byte	0x1
 7974 0aba 55       		.byte	0x55
 7975 0abb 7E000000 		.4byte	.LVL180
 7976 0abf 90000000 		.4byte	.LVL189
 7977 0ac3 0100     		.2byte	0x1
 7978 0ac5 55       		.byte	0x55
 7979 0ac6 00000000 		.4byte	0
 7980 0aca 00000000 		.4byte	0
 7981              	.LLST55:
 7982 0ace 00000000 		.4byte	.LVL195
 7983 0ad2 09000000 		.4byte	.LVL197-1
 7984 0ad6 0100     		.2byte	0x1
 7985 0ad8 50       		.byte	0x50
 7986 0ad9 09000000 		.4byte	.LVL197-1
 7987 0add 3E000000 		.4byte	.LVL206
 7988 0ae1 0100     		.2byte	0x1
 7989 0ae3 54       		.byte	0x54
 7990 0ae4 3E000000 		.4byte	.LVL206
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccApaELb.s 			page 200


 7991 0ae8 40000000 		.4byte	.LVL207
 7992 0aec 0400     		.2byte	0x4
 7993 0aee F3       		.byte	0xf3
 7994 0aef 01       		.uleb128 0x1
 7995 0af0 50       		.byte	0x50
 7996 0af1 9F       		.byte	0x9f
 7997 0af2 40000000 		.4byte	.LVL207
 7998 0af6 5C000000 		.4byte	.LVL210
 7999 0afa 0100     		.2byte	0x1
 8000 0afc 54       		.byte	0x54
 8001 0afd 5C000000 		.4byte	.LVL210
 8002 0b01 5E000000 		.4byte	.LVL211
 8003 0b05 0400     		.2byte	0x4
 8004 0b07 F3       		.byte	0xf3
 8005 0b08 01       		.uleb128 0x1
 8006 0b09 50       		.byte	0x50
 8007 0b0a 9F       		.byte	0x9f
 8008 0b0b 5E000000 		.4byte	.LVL211
 8009 0b0f 68000000 		.4byte	.LVL215
 8010 0b13 0100     		.2byte	0x1
 8011 0b15 54       		.byte	0x54
 8012 0b16 68000000 		.4byte	.LVL215
 8013 0b1a 6A000000 		.4byte	.LVL216
 8014 0b1e 0400     		.2byte	0x4
 8015 0b20 F3       		.byte	0xf3
 8016 0b21 01       		.uleb128 0x1
 8017 0b22 50       		.byte	0x50
 8018 0b23 9F       		.byte	0x9f
 8019 0b24 6A000000 		.4byte	.LVL216
 8020 0b28 6C000000 		.4byte	.LVL217
 8021 0b2c 0100     		.2byte	0x1
 8022 0b2e 54       		.byte	0x54
 8023 0b2f 6C000000 		.4byte	.LVL217
 8024 0b33 6E000000 		.4byte	.LVL218
 8025 0b37 0400     		.2byte	0x4
 8026 0b39 F3       		.byte	0xf3
 8027 0b3a 01       		.uleb128 0x1
 8028 0b3b 50       		.byte	0x50
 8029 0b3c 9F       		.byte	0x9f
 8030 0b3d 6E000000 		.4byte	.LVL218
 8031 0b41 70000000 		.4byte	.LVL219
 8032 0b45 0100     		.2byte	0x1
 8033 0b47 54       		.byte	0x54
 8034 0b48 70000000 		.4byte	.LVL219
 8035 0b4c 72000000 		.4byte	.LVL220
 8036 0b50 0400     		.2byte	0x4
 8037 0b52 F3       		.byte	0xf3
 8038 0b53 01       		.uleb128 0x1
 8039 0b54 50       		.byte	0x50
 8040 0b55 9F       		.byte	0x9f
 8041 0b56 72000000 		.4byte	.LVL220
 8042 0b5a 74000000 		.4byte	.LVL221
 8043 0b5e 0100     		.2byte	0x1
 8044 0b60 54       		.byte	0x54
 8045 0b61 74000000 		.4byte	.LVL221
 8046 0b65 76000000 		.4byte	.LVL222
 8047 0b69 0400     		.2byte	0x4
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccApaELb.s 			page 201


 8048 0b6b F3       		.byte	0xf3
 8049 0b6c 01       		.uleb128 0x1
 8050 0b6d 50       		.byte	0x50
 8051 0b6e 9F       		.byte	0x9f
 8052 0b6f 76000000 		.4byte	.LVL222
 8053 0b73 78000000 		.4byte	.LVL223
 8054 0b77 0100     		.2byte	0x1
 8055 0b79 54       		.byte	0x54
 8056 0b7a 78000000 		.4byte	.LVL223
 8057 0b7e 7A000000 		.4byte	.LVL224
 8058 0b82 0400     		.2byte	0x4
 8059 0b84 F3       		.byte	0xf3
 8060 0b85 01       		.uleb128 0x1
 8061 0b86 50       		.byte	0x50
 8062 0b87 9F       		.byte	0x9f
 8063 0b88 7A000000 		.4byte	.LVL224
 8064 0b8c 7C000000 		.4byte	.LVL225
 8065 0b90 0100     		.2byte	0x1
 8066 0b92 54       		.byte	0x54
 8067 0b93 7C000000 		.4byte	.LVL225
 8068 0b97 7E000000 		.4byte	.LVL226
 8069 0b9b 0400     		.2byte	0x4
 8070 0b9d F3       		.byte	0xf3
 8071 0b9e 01       		.uleb128 0x1
 8072 0b9f 50       		.byte	0x50
 8073 0ba0 9F       		.byte	0x9f
 8074 0ba1 7E000000 		.4byte	.LVL226
 8075 0ba5 80000000 		.4byte	.LVL227
 8076 0ba9 0100     		.2byte	0x1
 8077 0bab 54       		.byte	0x54
 8078 0bac 80000000 		.4byte	.LVL227
 8079 0bb0 8A000000 		.4byte	.LFE42
 8080 0bb4 0400     		.2byte	0x4
 8081 0bb6 F3       		.byte	0xf3
 8082 0bb7 01       		.uleb128 0x1
 8083 0bb8 50       		.byte	0x50
 8084 0bb9 9F       		.byte	0x9f
 8085 0bba 00000000 		.4byte	0
 8086 0bbe 00000000 		.4byte	0
 8087              	.LLST56:
 8088 0bc2 00000000 		.4byte	.LVL195
 8089 0bc6 09000000 		.4byte	.LVL197-1
 8090 0bca 0100     		.2byte	0x1
 8091 0bcc 51       		.byte	0x51
 8092 0bcd 09000000 		.4byte	.LVL197-1
 8093 0bd1 88000000 		.4byte	.LVL231
 8094 0bd5 0100     		.2byte	0x1
 8095 0bd7 56       		.byte	0x56
 8096 0bd8 88000000 		.4byte	.LVL231
 8097 0bdc 8A000000 		.4byte	.LFE42
 8098 0be0 0400     		.2byte	0x4
 8099 0be2 F3       		.byte	0xf3
 8100 0be3 01       		.uleb128 0x1
 8101 0be4 51       		.byte	0x51
 8102 0be5 9F       		.byte	0x9f
 8103 0be6 00000000 		.4byte	0
 8104 0bea 00000000 		.4byte	0
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccApaELb.s 			page 202


 8105              	.LLST57:
 8106 0bee 80000000 		.4byte	.LVL227
 8107 0bf2 88000000 		.4byte	.LVL229
 8108 0bf6 0100     		.2byte	0x1
 8109 0bf8 54       		.byte	0x54
 8110 0bf9 88000000 		.4byte	.LVL229
 8111 0bfd 8A000000 		.4byte	.LFE42
 8112 0c01 0100     		.2byte	0x1
 8113 0c03 50       		.byte	0x50
 8114 0c04 00000000 		.4byte	0
 8115 0c08 00000000 		.4byte	0
 8116              	.LLST58:
 8117 0c0c 0C000000 		.4byte	.LVL198
 8118 0c10 2C000000 		.4byte	.LVL204
 8119 0c14 0100     		.2byte	0x1
 8120 0c16 50       		.byte	0x50
 8121 0c17 2C000000 		.4byte	.LVL204
 8122 0c1b 40000000 		.4byte	.LVL207
 8123 0c1f 0100     		.2byte	0x1
 8124 0c21 55       		.byte	0x55
 8125 0c22 40000000 		.4byte	.LVL207
 8126 0c26 48000000 		.4byte	.LVL208
 8127 0c2a 0100     		.2byte	0x1
 8128 0c2c 50       		.byte	0x50
 8129 0c2d 48000000 		.4byte	.LVL208
 8130 0c31 5E000000 		.4byte	.LVL211
 8131 0c35 0100     		.2byte	0x1
 8132 0c37 55       		.byte	0x55
 8133 0c38 5E000000 		.4byte	.LVL211
 8134 0c3c 6E000000 		.4byte	.LVL218
 8135 0c40 0100     		.2byte	0x1
 8136 0c42 50       		.byte	0x50
 8137 0c43 6E000000 		.4byte	.LVL218
 8138 0c47 76000000 		.4byte	.LVL222
 8139 0c4b 0100     		.2byte	0x1
 8140 0c4d 55       		.byte	0x55
 8141 0c4e 76000000 		.4byte	.LVL222
 8142 0c52 7A000000 		.4byte	.LVL224
 8143 0c56 0100     		.2byte	0x1
 8144 0c58 50       		.byte	0x50
 8145 0c59 7A000000 		.4byte	.LVL224
 8146 0c5d 88000000 		.4byte	.LVL230
 8147 0c61 0100     		.2byte	0x1
 8148 0c63 55       		.byte	0x55
 8149 0c64 00000000 		.4byte	0
 8150 0c68 00000000 		.4byte	0
 8151              	.LLST59:
 8152 0c6c 06000000 		.4byte	.LVL196
 8153 0c70 09000000 		.4byte	.LVL197-1
 8154 0c74 0100     		.2byte	0x1
 8155 0c76 50       		.byte	0x50
 8156 0c77 09000000 		.4byte	.LVL197-1
 8157 0c7b 3E000000 		.4byte	.LVL206
 8158 0c7f 0100     		.2byte	0x1
 8159 0c81 54       		.byte	0x54
 8160 0c82 3E000000 		.4byte	.LVL206
 8161 0c86 40000000 		.4byte	.LVL207
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccApaELb.s 			page 203


 8162 0c8a 0400     		.2byte	0x4
 8163 0c8c F3       		.byte	0xf3
 8164 0c8d 01       		.uleb128 0x1
 8165 0c8e 50       		.byte	0x50
 8166 0c8f 9F       		.byte	0x9f
 8167 0c90 40000000 		.4byte	.LVL207
 8168 0c94 5C000000 		.4byte	.LVL210
 8169 0c98 0100     		.2byte	0x1
 8170 0c9a 54       		.byte	0x54
 8171 0c9b 5C000000 		.4byte	.LVL210
 8172 0c9f 5E000000 		.4byte	.LVL211
 8173 0ca3 0400     		.2byte	0x4
 8174 0ca5 F3       		.byte	0xf3
 8175 0ca6 01       		.uleb128 0x1
 8176 0ca7 50       		.byte	0x50
 8177 0ca8 9F       		.byte	0x9f
 8178 0ca9 5E000000 		.4byte	.LVL211
 8179 0cad 68000000 		.4byte	.LVL215
 8180 0cb1 0100     		.2byte	0x1
 8181 0cb3 54       		.byte	0x54
 8182 0cb4 68000000 		.4byte	.LVL215
 8183 0cb8 6A000000 		.4byte	.LVL216
 8184 0cbc 0400     		.2byte	0x4
 8185 0cbe F3       		.byte	0xf3
 8186 0cbf 01       		.uleb128 0x1
 8187 0cc0 50       		.byte	0x50
 8188 0cc1 9F       		.byte	0x9f
 8189 0cc2 6A000000 		.4byte	.LVL216
 8190 0cc6 6C000000 		.4byte	.LVL217
 8191 0cca 0100     		.2byte	0x1
 8192 0ccc 54       		.byte	0x54
 8193 0ccd 6C000000 		.4byte	.LVL217
 8194 0cd1 6E000000 		.4byte	.LVL218
 8195 0cd5 0400     		.2byte	0x4
 8196 0cd7 F3       		.byte	0xf3
 8197 0cd8 01       		.uleb128 0x1
 8198 0cd9 50       		.byte	0x50
 8199 0cda 9F       		.byte	0x9f
 8200 0cdb 6E000000 		.4byte	.LVL218
 8201 0cdf 70000000 		.4byte	.LVL219
 8202 0ce3 0100     		.2byte	0x1
 8203 0ce5 54       		.byte	0x54
 8204 0ce6 70000000 		.4byte	.LVL219
 8205 0cea 72000000 		.4byte	.LVL220
 8206 0cee 0400     		.2byte	0x4
 8207 0cf0 F3       		.byte	0xf3
 8208 0cf1 01       		.uleb128 0x1
 8209 0cf2 50       		.byte	0x50
 8210 0cf3 9F       		.byte	0x9f
 8211 0cf4 72000000 		.4byte	.LVL220
 8212 0cf8 74000000 		.4byte	.LVL221
 8213 0cfc 0100     		.2byte	0x1
 8214 0cfe 54       		.byte	0x54
 8215 0cff 74000000 		.4byte	.LVL221
 8216 0d03 76000000 		.4byte	.LVL222
 8217 0d07 0400     		.2byte	0x4
 8218 0d09 F3       		.byte	0xf3
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccApaELb.s 			page 204


 8219 0d0a 01       		.uleb128 0x1
 8220 0d0b 50       		.byte	0x50
 8221 0d0c 9F       		.byte	0x9f
 8222 0d0d 76000000 		.4byte	.LVL222
 8223 0d11 78000000 		.4byte	.LVL223
 8224 0d15 0100     		.2byte	0x1
 8225 0d17 54       		.byte	0x54
 8226 0d18 78000000 		.4byte	.LVL223
 8227 0d1c 7A000000 		.4byte	.LVL224
 8228 0d20 0400     		.2byte	0x4
 8229 0d22 F3       		.byte	0xf3
 8230 0d23 01       		.uleb128 0x1
 8231 0d24 50       		.byte	0x50
 8232 0d25 9F       		.byte	0x9f
 8233 0d26 7A000000 		.4byte	.LVL224
 8234 0d2a 7C000000 		.4byte	.LVL225
 8235 0d2e 0100     		.2byte	0x1
 8236 0d30 54       		.byte	0x54
 8237 0d31 7C000000 		.4byte	.LVL225
 8238 0d35 7E000000 		.4byte	.LVL226
 8239 0d39 0400     		.2byte	0x4
 8240 0d3b F3       		.byte	0xf3
 8241 0d3c 01       		.uleb128 0x1
 8242 0d3d 50       		.byte	0x50
 8243 0d3e 9F       		.byte	0x9f
 8244 0d3f 7E000000 		.4byte	.LVL226
 8245 0d43 80000000 		.4byte	.LVL227
 8246 0d47 0100     		.2byte	0x1
 8247 0d49 54       		.byte	0x54
 8248 0d4a 80000000 		.4byte	.LVL227
 8249 0d4e 8A000000 		.4byte	.LFE42
 8250 0d52 0400     		.2byte	0x4
 8251 0d54 F3       		.byte	0xf3
 8252 0d55 01       		.uleb128 0x1
 8253 0d56 50       		.byte	0x50
 8254 0d57 9F       		.byte	0x9f
 8255 0d58 00000000 		.4byte	0
 8256 0d5c 00000000 		.4byte	0
 8257              	.LLST60:
 8258 0d60 0E000000 		.4byte	.LVL199
 8259 0d64 1C000000 		.4byte	.LVL201
 8260 0d68 0100     		.2byte	0x1
 8261 0d6a 52       		.byte	0x52
 8262 0d6b 1C000000 		.4byte	.LVL201
 8263 0d6f 22000000 		.4byte	.LVL202
 8264 0d73 0300     		.2byte	0x3
 8265 0d75 72       		.byte	0x72
 8266 0d76 7F       		.sleb128 -1
 8267 0d77 9F       		.byte	0x9f
 8268 0d78 22000000 		.4byte	.LVL202
 8269 0d7c 2F000000 		.4byte	.LVL205-1
 8270 0d80 0600     		.2byte	0x6
 8271 0d82 74       		.byte	0x74
 8272 0d83 38       		.sleb128 56
 8273 0d84 06       		.byte	0x6
 8274 0d85 31       		.byte	0x31
 8275 0d86 1C       		.byte	0x1c
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccApaELb.s 			page 205


 8276 0d87 9F       		.byte	0x9f
 8277 0d88 40000000 		.4byte	.LVL207
 8278 0d8c 4D000000 		.4byte	.LVL209-1
 8279 0d90 0600     		.2byte	0x6
 8280 0d92 74       		.byte	0x74
 8281 0d93 38       		.sleb128 56
 8282 0d94 06       		.byte	0x6
 8283 0d95 31       		.byte	0x31
 8284 0d96 1C       		.byte	0x1c
 8285 0d97 9F       		.byte	0x9f
 8286 0d98 5E000000 		.4byte	.LVL211
 8287 0d9c 66000000 		.4byte	.LVL214
 8288 0da0 0600     		.2byte	0x6
 8289 0da2 74       		.byte	0x74
 8290 0da3 38       		.sleb128 56
 8291 0da4 06       		.byte	0x6
 8292 0da5 31       		.byte	0x31
 8293 0da6 1C       		.byte	0x1c
 8294 0da7 9F       		.byte	0x9f
 8295 0da8 6A000000 		.4byte	.LVL216
 8296 0dac 6E000000 		.4byte	.LVL218
 8297 0db0 0100     		.2byte	0x1
 8298 0db2 52       		.byte	0x52
 8299 0db3 76000000 		.4byte	.LVL222
 8300 0db7 78000000 		.4byte	.LVL223
 8301 0dbb 0600     		.2byte	0x6
 8302 0dbd 74       		.byte	0x74
 8303 0dbe 38       		.sleb128 56
 8304 0dbf 06       		.byte	0x6
 8305 0dc0 31       		.byte	0x31
 8306 0dc1 1C       		.byte	0x1c
 8307 0dc2 9F       		.byte	0x9f
 8308 0dc3 78000000 		.4byte	.LVL223
 8309 0dc7 7A000000 		.4byte	.LVL224
 8310 0dcb 0900     		.2byte	0x9
 8311 0dcd F3       		.byte	0xf3
 8312 0dce 01       		.uleb128 0x1
 8313 0dcf 50       		.byte	0x50
 8314 0dd0 23       		.byte	0x23
 8315 0dd1 38       		.uleb128 0x38
 8316 0dd2 06       		.byte	0x6
 8317 0dd3 31       		.byte	0x31
 8318 0dd4 1C       		.byte	0x1c
 8319 0dd5 9F       		.byte	0x9f
 8320 0dd6 00000000 		.4byte	0
 8321 0dda 00000000 		.4byte	0
 8322              	.LLST61:
 8323 0dde 1A000000 		.4byte	.LVL200
 8324 0de2 24000000 		.4byte	.LVL203
 8325 0de6 0100     		.2byte	0x1
 8326 0de8 53       		.byte	0x53
 8327 0de9 5E000000 		.4byte	.LVL211
 8328 0ded 60000000 		.4byte	.LVL212
 8329 0df1 0100     		.2byte	0x1
 8330 0df3 53       		.byte	0x53
 8331 0df4 60000000 		.4byte	.LVL212
 8332 0df8 62000000 		.4byte	.LVL213
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccApaELb.s 			page 206


 8333 0dfc 0300     		.2byte	0x3
 8334 0dfe 73       		.byte	0x73
 8335 0dff 7F       		.sleb128 -1
 8336 0e00 9F       		.byte	0x9f
 8337 0e01 00000000 		.4byte	0
 8338 0e05 00000000 		.4byte	0
 8339              	.LLST62:
 8340 0e09 00000000 		.4byte	.LVL232
 8341 0e0d 0C000000 		.4byte	.LVL234
 8342 0e11 0100     		.2byte	0x1
 8343 0e13 50       		.byte	0x50
 8344 0e14 0C000000 		.4byte	.LVL234
 8345 0e18 E2000000 		.4byte	.LVL263
 8346 0e1c 0100     		.2byte	0x1
 8347 0e1e 54       		.byte	0x54
 8348 0e1f E2000000 		.4byte	.LVL263
 8349 0e23 E4000000 		.4byte	.LFE43
 8350 0e27 0400     		.2byte	0x4
 8351 0e29 F3       		.byte	0xf3
 8352 0e2a 01       		.uleb128 0x1
 8353 0e2b 50       		.byte	0x50
 8354 0e2c 9F       		.byte	0x9f
 8355 0e2d 00000000 		.4byte	0
 8356 0e31 00000000 		.4byte	0
 8357              	.LLST63:
 8358 0e35 00000000 		.4byte	.LVL232
 8359 0e39 0C000000 		.4byte	.LVL234
 8360 0e3d 0100     		.2byte	0x1
 8361 0e3f 51       		.byte	0x51
 8362 0e40 0C000000 		.4byte	.LVL234
 8363 0e44 E2000000 		.4byte	.LVL264
 8364 0e48 0100     		.2byte	0x1
 8365 0e4a 55       		.byte	0x55
 8366 0e4b E2000000 		.4byte	.LVL264
 8367 0e4f E4000000 		.4byte	.LFE43
 8368 0e53 0400     		.2byte	0x4
 8369 0e55 F3       		.byte	0xf3
 8370 0e56 01       		.uleb128 0x1
 8371 0e57 51       		.byte	0x51
 8372 0e58 9F       		.byte	0x9f
 8373 0e59 00000000 		.4byte	0
 8374 0e5d 00000000 		.4byte	0
 8375              	.LLST64:
 8376 0e61 00000000 		.4byte	.LVL232
 8377 0e65 0C000000 		.4byte	.LVL234
 8378 0e69 0100     		.2byte	0x1
 8379 0e6b 52       		.byte	0x52
 8380 0e6c 0C000000 		.4byte	.LVL234
 8381 0e70 8C000000 		.4byte	.LVL250
 8382 0e74 0200     		.2byte	0x2
 8383 0e76 91       		.byte	0x91
 8384 0e77 5C       		.sleb128 -36
 8385 0e78 8C000000 		.4byte	.LVL250
 8386 0e7c 91000000 		.4byte	.LVL251-1
 8387 0e80 0200     		.2byte	0x2
 8388 0e82 71       		.byte	0x71
 8389 0e83 00       		.sleb128 0
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccApaELb.s 			page 207


 8390 0e84 91000000 		.4byte	.LVL251-1
 8391 0e88 E4000000 		.4byte	.LFE43
 8392 0e8c 0200     		.2byte	0x2
 8393 0e8e 91       		.byte	0x91
 8394 0e8f 5C       		.sleb128 -36
 8395 0e90 00000000 		.4byte	0
 8396 0e94 00000000 		.4byte	0
 8397              	.LLST65:
 8398 0e98 0A000000 		.4byte	.LVL233
 8399 0e9c 0C000000 		.4byte	.LVL234
 8400 0ea0 0200     		.2byte	0x2
 8401 0ea2 30       		.byte	0x30
 8402 0ea3 9F       		.byte	0x9f
 8403 0ea4 0C000000 		.4byte	.LVL234
 8404 0ea8 58000000 		.4byte	.LVL244
 8405 0eac 0100     		.2byte	0x1
 8406 0eae 57       		.byte	0x57
 8407 0eaf 58000000 		.4byte	.LVL244
 8408 0eb3 5A000000 		.4byte	.LVL245
 8409 0eb7 0200     		.2byte	0x2
 8410 0eb9 31       		.byte	0x31
 8411 0eba 9F       		.byte	0x9f
 8412 0ebb 5A000000 		.4byte	.LVL245
 8413 0ebf E2000000 		.4byte	.LVL265
 8414 0ec3 0100     		.2byte	0x1
 8415 0ec5 57       		.byte	0x57
 8416 0ec6 00000000 		.4byte	0
 8417 0eca 00000000 		.4byte	0
 8418              	.LLST66:
 8419 0ece 0A000000 		.4byte	.LVL233
 8420 0ed2 0C000000 		.4byte	.LVL234
 8421 0ed6 0100     		.2byte	0x1
 8422 0ed8 50       		.byte	0x50
 8423 0ed9 0C000000 		.4byte	.LVL234
 8424 0edd E2000000 		.4byte	.LVL263
 8425 0ee1 0100     		.2byte	0x1
 8426 0ee3 54       		.byte	0x54
 8427 0ee4 E2000000 		.4byte	.LVL263
 8428 0ee8 E4000000 		.4byte	.LFE43
 8429 0eec 0400     		.2byte	0x4
 8430 0eee F3       		.byte	0xf3
 8431 0eef 01       		.uleb128 0x1
 8432 0ef0 50       		.byte	0x50
 8433 0ef1 9F       		.byte	0x9f
 8434 0ef2 00000000 		.4byte	0
 8435 0ef6 00000000 		.4byte	0
 8436              	.LLST67:
 8437 0efa 12000000 		.4byte	.LVL236
 8438 0efe 20000000 		.4byte	.LVL238
 8439 0f02 0100     		.2byte	0x1
 8440 0f04 56       		.byte	0x56
 8441 0f05 20000000 		.4byte	.LVL238
 8442 0f09 40000000 		.4byte	.LVL242
 8443 0f0d 0300     		.2byte	0x3
 8444 0f0f 76       		.byte	0x76
 8445 0f10 01       		.sleb128 1
 8446 0f11 9F       		.byte	0x9f
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccApaELb.s 			page 208


 8447 0f12 40000000 		.4byte	.LVL242
 8448 0f16 E0000000 		.4byte	.LVL262
 8449 0f1a 0100     		.2byte	0x1
 8450 0f1c 56       		.byte	0x56
 8451 0f1d 00000000 		.4byte	0
 8452 0f21 00000000 		.4byte	0
 8453              	.LLST68:
 8454 0f25 00000000 		.4byte	.LVL266
 8455 0f29 0C000000 		.4byte	.LVL268
 8456 0f2d 0100     		.2byte	0x1
 8457 0f2f 50       		.byte	0x50
 8458 0f30 0C000000 		.4byte	.LVL268
 8459 0f34 1A010000 		.4byte	.LVL308
 8460 0f38 0100     		.2byte	0x1
 8461 0f3a 54       		.byte	0x54
 8462 0f3b 1A010000 		.4byte	.LVL308
 8463 0f3f 1C010000 		.4byte	.LFE44
 8464 0f43 0400     		.2byte	0x4
 8465 0f45 F3       		.byte	0xf3
 8466 0f46 01       		.uleb128 0x1
 8467 0f47 50       		.byte	0x50
 8468 0f48 9F       		.byte	0x9f
 8469 0f49 00000000 		.4byte	0
 8470 0f4d 00000000 		.4byte	0
 8471              	.LLST69:
 8472 0f51 00000000 		.4byte	.LVL266
 8473 0f55 0C000000 		.4byte	.LVL268
 8474 0f59 0100     		.2byte	0x1
 8475 0f5b 51       		.byte	0x51
 8476 0f5c 0C000000 		.4byte	.LVL268
 8477 0f60 90000000 		.4byte	.LVL286
 8478 0f64 0200     		.2byte	0x2
 8479 0f66 91       		.byte	0x91
 8480 0f67 64       		.sleb128 -28
 8481 0f68 90000000 		.4byte	.LVL286
 8482 0f6c 95000000 		.4byte	.LVL287-1
 8483 0f70 0200     		.2byte	0x2
 8484 0f72 71       		.byte	0x71
 8485 0f73 00       		.sleb128 0
 8486 0f74 95000000 		.4byte	.LVL287-1
 8487 0f78 1C010000 		.4byte	.LFE44
 8488 0f7c 0200     		.2byte	0x2
 8489 0f7e 91       		.byte	0x91
 8490 0f7f 64       		.sleb128 -28
 8491 0f80 00000000 		.4byte	0
 8492 0f84 00000000 		.4byte	0
 8493              	.LLST70:
 8494 0f88 08000000 		.4byte	.LVL267
 8495 0f8c 0C000000 		.4byte	.LVL268
 8496 0f90 0200     		.2byte	0x2
 8497 0f92 30       		.byte	0x30
 8498 0f93 9F       		.byte	0x9f
 8499 0f94 0C000000 		.4byte	.LVL268
 8500 0f98 5C000000 		.4byte	.LVL280
 8501 0f9c 0100     		.2byte	0x1
 8502 0f9e 55       		.byte	0x55
 8503 0f9f 5C000000 		.4byte	.LVL280
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccApaELb.s 			page 209


 8504 0fa3 5E000000 		.4byte	.LVL281
 8505 0fa7 0200     		.2byte	0x2
 8506 0fa9 31       		.byte	0x31
 8507 0faa 9F       		.byte	0x9f
 8508 0fab 5E000000 		.4byte	.LVL281
 8509 0faf 1A010000 		.4byte	.LVL309
 8510 0fb3 0100     		.2byte	0x1
 8511 0fb5 55       		.byte	0x55
 8512 0fb6 00000000 		.4byte	0
 8513 0fba 00000000 		.4byte	0
 8514              	.LLST71:
 8515 0fbe 08000000 		.4byte	.LVL267
 8516 0fc2 0C000000 		.4byte	.LVL268
 8517 0fc6 0100     		.2byte	0x1
 8518 0fc8 50       		.byte	0x50
 8519 0fc9 0C000000 		.4byte	.LVL268
 8520 0fcd 1A010000 		.4byte	.LVL308
 8521 0fd1 0100     		.2byte	0x1
 8522 0fd3 54       		.byte	0x54
 8523 0fd4 1A010000 		.4byte	.LVL308
 8524 0fd8 1C010000 		.4byte	.LFE44
 8525 0fdc 0400     		.2byte	0x4
 8526 0fde F3       		.byte	0xf3
 8527 0fdf 01       		.uleb128 0x1
 8528 0fe0 50       		.byte	0x50
 8529 0fe1 9F       		.byte	0x9f
 8530 0fe2 00000000 		.4byte	0
 8531 0fe6 00000000 		.4byte	0
 8532              	.LLST72:
 8533 0fea 08000000 		.4byte	.LVL267
 8534 0fee 0C000000 		.4byte	.LVL268
 8535 0ff2 0200     		.2byte	0x2
 8536 0ff4 30       		.byte	0x30
 8537 0ff5 9F       		.byte	0x9f
 8538 0ff6 0C000000 		.4byte	.LVL268
 8539 0ffa B6000000 		.4byte	.LVL291
 8540 0ffe 0100     		.2byte	0x1
 8541 1000 56       		.byte	0x56
 8542 1001 B6000000 		.4byte	.LVL291
 8543 1005 B9000000 		.4byte	.LVL292-1
 8544 1009 0100     		.2byte	0x1
 8545 100b 50       		.byte	0x50
 8546 100c B9000000 		.4byte	.LVL292-1
 8547 1010 1A010000 		.4byte	.LVL310
 8548 1014 0100     		.2byte	0x1
 8549 1016 56       		.byte	0x56
 8550 1017 00000000 		.4byte	0
 8551 101b 00000000 		.4byte	0
 8552              	.LLST73:
 8553 101f 12000000 		.4byte	.LVL270
 8554 1023 18000000 		.4byte	.LVL271
 8555 1027 0100     		.2byte	0x1
 8556 1029 53       		.byte	0x53
 8557 102a 18000000 		.4byte	.LVL271
 8558 102e 1C000000 		.4byte	.LVL272
 8559 1032 0300     		.2byte	0x3
 8560 1034 73       		.byte	0x73
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccApaELb.s 			page 210


 8561 1035 01       		.sleb128 1
 8562 1036 9F       		.byte	0x9f
 8563 1037 1C000000 		.4byte	.LVL272
 8564 103b 23000000 		.4byte	.LVL273-1
 8565 103f 0600     		.2byte	0x6
 8566 1041 74       		.byte	0x74
 8567 1042 38       		.sleb128 56
 8568 1043 06       		.byte	0x6
 8569 1044 23       		.byte	0x23
 8570 1045 01       		.uleb128 0x1
 8571 1046 9F       		.byte	0x9f
 8572 1047 44000000 		.4byte	.LVL277
 8573 104b 46000000 		.4byte	.LVL278
 8574 104f 0100     		.2byte	0x1
 8575 1051 53       		.byte	0x53
 8576 1052 00000000 		.4byte	0
 8577 1056 00000000 		.4byte	0
 8578              	.LLST74:
 8579 105a 08010000 		.4byte	.LVL304
 8580 105e 0A010000 		.4byte	.LVL305
 8581 1062 0100     		.2byte	0x1
 8582 1064 50       		.byte	0x50
 8583 1065 0A010000 		.4byte	.LVL305
 8584 1069 0D010000 		.4byte	.LVL306-1
 8585 106d 0100     		.2byte	0x1
 8586 106f 51       		.byte	0x51
 8587 1070 00000000 		.4byte	0
 8588 1074 00000000 		.4byte	0
 8589              	.LLST75:
 8590 1078 00000000 		.4byte	.LVL311
 8591 107c 0B000000 		.4byte	.LVL313-1
 8592 1080 0100     		.2byte	0x1
 8593 1082 50       		.byte	0x50
 8594 1083 0B000000 		.4byte	.LVL313-1
 8595 1087 2C000000 		.4byte	.LVL318
 8596 108b 0100     		.2byte	0x1
 8597 108d 54       		.byte	0x54
 8598 108e 2C000000 		.4byte	.LVL318
 8599 1092 2E000000 		.4byte	.LFE38
 8600 1096 0400     		.2byte	0x4
 8601 1098 F3       		.byte	0xf3
 8602 1099 01       		.uleb128 0x1
 8603 109a 50       		.byte	0x50
 8604 109b 9F       		.byte	0x9f
 8605 109c 00000000 		.4byte	0
 8606 10a0 00000000 		.4byte	0
 8607              	.LLST76:
 8608 10a4 00000000 		.4byte	.LVL311
 8609 10a8 0B000000 		.4byte	.LVL313-1
 8610 10ac 0100     		.2byte	0x1
 8611 10ae 51       		.byte	0x51
 8612 10af 0B000000 		.4byte	.LVL313-1
 8613 10b3 2C000000 		.4byte	.LVL319
 8614 10b7 0100     		.2byte	0x1
 8615 10b9 56       		.byte	0x56
 8616 10ba 2C000000 		.4byte	.LVL319
 8617 10be 2E000000 		.4byte	.LFE38
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccApaELb.s 			page 211


 8618 10c2 0400     		.2byte	0x4
 8619 10c4 F3       		.byte	0xf3
 8620 10c5 01       		.uleb128 0x1
 8621 10c6 51       		.byte	0x51
 8622 10c7 9F       		.byte	0x9f
 8623 10c8 00000000 		.4byte	0
 8624 10cc 00000000 		.4byte	0
 8625              	.LLST77:
 8626 10d0 16000000 		.4byte	.LVL314
 8627 10d4 1A000000 		.4byte	.LVL315
 8628 10d8 0200     		.2byte	0x2
 8629 10da 31       		.byte	0x31
 8630 10db 9F       		.byte	0x9f
 8631 10dc 22000000 		.4byte	.LVL316
 8632 10e0 2E000000 		.4byte	.LFE38
 8633 10e4 0100     		.2byte	0x1
 8634 10e6 50       		.byte	0x50
 8635 10e7 00000000 		.4byte	0
 8636 10eb 00000000 		.4byte	0
 8637              	.LLST78:
 8638 10ef 06000000 		.4byte	.LVL312
 8639 10f3 0B000000 		.4byte	.LVL313-1
 8640 10f7 0100     		.2byte	0x1
 8641 10f9 50       		.byte	0x50
 8642 10fa 0B000000 		.4byte	.LVL313-1
 8643 10fe 2C000000 		.4byte	.LVL318
 8644 1102 0100     		.2byte	0x1
 8645 1104 54       		.byte	0x54
 8646 1105 2C000000 		.4byte	.LVL318
 8647 1109 2E000000 		.4byte	.LFE38
 8648 110d 0400     		.2byte	0x4
 8649 110f F3       		.byte	0xf3
 8650 1110 01       		.uleb128 0x1
 8651 1111 50       		.byte	0x50
 8652 1112 9F       		.byte	0x9f
 8653 1113 00000000 		.4byte	0
 8654 1117 00000000 		.4byte	0
 8655              	.LLST79:
 8656 111b 00000000 		.4byte	.LVL320
 8657 111f 0C000000 		.4byte	.LVL322
 8658 1123 0100     		.2byte	0x1
 8659 1125 50       		.byte	0x50
 8660 1126 0C000000 		.4byte	.LVL322
 8661 112a E2000000 		.4byte	.LVL352
 8662 112e 0100     		.2byte	0x1
 8663 1130 54       		.byte	0x54
 8664 1131 E2000000 		.4byte	.LVL352
 8665 1135 E4000000 		.4byte	.LFE45
 8666 1139 0400     		.2byte	0x4
 8667 113b F3       		.byte	0xf3
 8668 113c 01       		.uleb128 0x1
 8669 113d 50       		.byte	0x50
 8670 113e 9F       		.byte	0x9f
 8671 113f 00000000 		.4byte	0
 8672 1143 00000000 		.4byte	0
 8673              	.LLST80:
 8674 1147 00000000 		.4byte	.LVL320
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccApaELb.s 			page 212


 8675 114b 0C000000 		.4byte	.LVL322
 8676 114f 0100     		.2byte	0x1
 8677 1151 51       		.byte	0x51
 8678 1152 0C000000 		.4byte	.LVL322
 8679 1156 E2000000 		.4byte	.LVL353
 8680 115a 0100     		.2byte	0x1
 8681 115c 55       		.byte	0x55
 8682 115d E2000000 		.4byte	.LVL353
 8683 1161 E4000000 		.4byte	.LFE45
 8684 1165 0400     		.2byte	0x4
 8685 1167 F3       		.byte	0xf3
 8686 1168 01       		.uleb128 0x1
 8687 1169 51       		.byte	0x51
 8688 116a 9F       		.byte	0x9f
 8689 116b 00000000 		.4byte	0
 8690 116f 00000000 		.4byte	0
 8691              	.LLST81:
 8692 1173 00000000 		.4byte	.LVL320
 8693 1177 0C000000 		.4byte	.LVL322
 8694 117b 0100     		.2byte	0x1
 8695 117d 52       		.byte	0x52
 8696 117e 0C000000 		.4byte	.LVL322
 8697 1182 8C000000 		.4byte	.LVL339
 8698 1186 0200     		.2byte	0x2
 8699 1188 91       		.byte	0x91
 8700 1189 64       		.sleb128 -28
 8701 118a 8C000000 		.4byte	.LVL339
 8702 118e 91000000 		.4byte	.LVL340-1
 8703 1192 0200     		.2byte	0x2
 8704 1194 71       		.byte	0x71
 8705 1195 00       		.sleb128 0
 8706 1196 91000000 		.4byte	.LVL340-1
 8707 119a E4000000 		.4byte	.LFE45
 8708 119e 0200     		.2byte	0x2
 8709 11a0 91       		.byte	0x91
 8710 11a1 64       		.sleb128 -28
 8711 11a2 00000000 		.4byte	0
 8712 11a6 00000000 		.4byte	0
 8713              	.LLST82:
 8714 11aa 0A000000 		.4byte	.LVL321
 8715 11ae 0C000000 		.4byte	.LVL322
 8716 11b2 0200     		.2byte	0x2
 8717 11b4 30       		.byte	0x30
 8718 11b5 9F       		.byte	0x9f
 8719 11b6 0C000000 		.4byte	.LVL322
 8720 11ba 18000000 		.4byte	.LVL325
 8721 11be 0100     		.2byte	0x1
 8722 11c0 56       		.byte	0x56
 8723 11c1 40000000 		.4byte	.LVL330
 8724 11c5 58000000 		.4byte	.LVL333
 8725 11c9 0100     		.2byte	0x1
 8726 11cb 56       		.byte	0x56
 8727 11cc 58000000 		.4byte	.LVL333
 8728 11d0 5A000000 		.4byte	.LVL334
 8729 11d4 0200     		.2byte	0x2
 8730 11d6 31       		.byte	0x31
 8731 11d7 9F       		.byte	0x9f
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccApaELb.s 			page 213


 8732 11d8 5A000000 		.4byte	.LVL334
 8733 11dc E0000000 		.4byte	.LVL351
 8734 11e0 0100     		.2byte	0x1
 8735 11e2 56       		.byte	0x56
 8736 11e3 00000000 		.4byte	0
 8737 11e7 00000000 		.4byte	0
 8738              	.LLST83:
 8739 11eb 18000000 		.4byte	.LVL325
 8740 11ef 40000000 		.4byte	.LVL330
 8741 11f3 0100     		.2byte	0x1
 8742 11f5 56       		.byte	0x56
 8743 11f6 00000000 		.4byte	0
 8744 11fa 00000000 		.4byte	0
 8745              	.LLST84:
 8746 11fe 0A000000 		.4byte	.LVL321
 8747 1202 0C000000 		.4byte	.LVL322
 8748 1206 0100     		.2byte	0x1
 8749 1208 50       		.byte	0x50
 8750 1209 0C000000 		.4byte	.LVL322
 8751 120d E2000000 		.4byte	.LVL352
 8752 1211 0100     		.2byte	0x1
 8753 1213 54       		.byte	0x54
 8754 1214 E2000000 		.4byte	.LVL352
 8755 1218 E4000000 		.4byte	.LFE45
 8756 121c 0400     		.2byte	0x4
 8757 121e F3       		.byte	0xf3
 8758 121f 01       		.uleb128 0x1
 8759 1220 50       		.byte	0x50
 8760 1221 9F       		.byte	0x9f
 8761 1222 00000000 		.4byte	0
 8762 1226 00000000 		.4byte	0
 8763              	.LLST85:
 8764 122a 12000000 		.4byte	.LVL324
 8765 122e 1F000000 		.4byte	.LVL326-1
 8766 1232 0100     		.2byte	0x1
 8767 1234 53       		.byte	0x53
 8768 1235 40000000 		.4byte	.LVL330
 8769 1239 42000000 		.4byte	.LVL331
 8770 123d 0100     		.2byte	0x1
 8771 123f 53       		.byte	0x53
 8772 1240 00000000 		.4byte	0
 8773 1244 00000000 		.4byte	0
 8774              	.LLST86:
 8775 1248 00000000 		.4byte	.LVL354
 8776 124c 0D000000 		.4byte	.LVL356-1
 8777 1250 0100     		.2byte	0x1
 8778 1252 50       		.byte	0x50
 8779 1253 0D000000 		.4byte	.LVL356-1
 8780 1257 4A000000 		.4byte	.LVL363
 8781 125b 0100     		.2byte	0x1
 8782 125d 54       		.byte	0x54
 8783 125e 4A000000 		.4byte	.LVL363
 8784 1262 4C000000 		.4byte	.LVL364
 8785 1266 0400     		.2byte	0x4
 8786 1268 F3       		.byte	0xf3
 8787 1269 01       		.uleb128 0x1
 8788 126a 50       		.byte	0x50
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccApaELb.s 			page 214


 8789 126b 9F       		.byte	0x9f
 8790 126c 4C000000 		.4byte	.LVL364
 8791 1270 56000000 		.4byte	.LVL365
 8792 1274 0100     		.2byte	0x1
 8793 1276 54       		.byte	0x54
 8794 1277 56000000 		.4byte	.LVL365
 8795 127b 58000000 		.4byte	.LVL366
 8796 127f 0400     		.2byte	0x4
 8797 1281 F3       		.byte	0xf3
 8798 1282 01       		.uleb128 0x1
 8799 1283 50       		.byte	0x50
 8800 1284 9F       		.byte	0x9f
 8801 1285 58000000 		.4byte	.LVL366
 8802 1289 5A000000 		.4byte	.LVL367
 8803 128d 0100     		.2byte	0x1
 8804 128f 54       		.byte	0x54
 8805 1290 5A000000 		.4byte	.LVL367
 8806 1294 5C000000 		.4byte	.LVL368
 8807 1298 0400     		.2byte	0x4
 8808 129a F3       		.byte	0xf3
 8809 129b 01       		.uleb128 0x1
 8810 129c 50       		.byte	0x50
 8811 129d 9F       		.byte	0x9f
 8812 129e 5C000000 		.4byte	.LVL368
 8813 12a2 5E000000 		.4byte	.LVL369
 8814 12a6 0100     		.2byte	0x1
 8815 12a8 54       		.byte	0x54
 8816 12a9 5E000000 		.4byte	.LVL369
 8817 12ad 60000000 		.4byte	.LVL370
 8818 12b1 0400     		.2byte	0x4
 8819 12b3 F3       		.byte	0xf3
 8820 12b4 01       		.uleb128 0x1
 8821 12b5 50       		.byte	0x50
 8822 12b6 9F       		.byte	0x9f
 8823 12b7 60000000 		.4byte	.LVL370
 8824 12bb 62000000 		.4byte	.LVL371
 8825 12bf 0100     		.2byte	0x1
 8826 12c1 54       		.byte	0x54
 8827 12c2 62000000 		.4byte	.LVL371
 8828 12c6 64000000 		.4byte	.LVL372
 8829 12ca 0400     		.2byte	0x4
 8830 12cc F3       		.byte	0xf3
 8831 12cd 01       		.uleb128 0x1
 8832 12ce 50       		.byte	0x50
 8833 12cf 9F       		.byte	0x9f
 8834 12d0 64000000 		.4byte	.LVL372
 8835 12d4 66000000 		.4byte	.LVL373
 8836 12d8 0100     		.2byte	0x1
 8837 12da 54       		.byte	0x54
 8838 12db 66000000 		.4byte	.LVL373
 8839 12df 72000000 		.4byte	.LFE46
 8840 12e3 0400     		.2byte	0x4
 8841 12e5 F3       		.byte	0xf3
 8842 12e6 01       		.uleb128 0x1
 8843 12e7 50       		.byte	0x50
 8844 12e8 9F       		.byte	0x9f
 8845 12e9 00000000 		.4byte	0
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccApaELb.s 			page 215


 8846 12ed 00000000 		.4byte	0
 8847              	.LLST87:
 8848 12f1 00000000 		.4byte	.LVL354
 8849 12f5 0D000000 		.4byte	.LVL356-1
 8850 12f9 0100     		.2byte	0x1
 8851 12fb 51       		.byte	0x51
 8852 12fc 0D000000 		.4byte	.LVL356-1
 8853 1300 70000000 		.4byte	.LVL375
 8854 1304 0200     		.2byte	0x2
 8855 1306 7D       		.byte	0x7d
 8856 1307 00       		.sleb128 0
 8857 1308 70000000 		.4byte	.LVL375
 8858 130c 72000000 		.4byte	.LFE46
 8859 1310 0200     		.2byte	0x2
 8860 1312 91       		.byte	0x91
 8861 1313 60       		.sleb128 -32
 8862 1314 00000000 		.4byte	0
 8863 1318 00000000 		.4byte	0
 8864              	.LLST88:
 8865 131c 00000000 		.4byte	.LVL354
 8866 1320 0D000000 		.4byte	.LVL356-1
 8867 1324 0100     		.2byte	0x1
 8868 1326 52       		.byte	0x52
 8869 1327 0D000000 		.4byte	.LVL356-1
 8870 132b 72000000 		.4byte	.LFE46
 8871 132f 0200     		.2byte	0x2
 8872 1331 91       		.byte	0x91
 8873 1332 64       		.sleb128 -28
 8874 1333 00000000 		.4byte	0
 8875 1337 00000000 		.4byte	0
 8876              	.LLST89:
 8877 133b 66000000 		.4byte	.LVL373
 8878 133f 70000000 		.4byte	.LVL376
 8879 1343 0100     		.2byte	0x1
 8880 1345 54       		.byte	0x54
 8881 1346 70000000 		.4byte	.LVL376
 8882 134a 72000000 		.4byte	.LFE46
 8883 134e 0100     		.2byte	0x1
 8884 1350 50       		.byte	0x50
 8885 1351 00000000 		.4byte	0
 8886 1355 00000000 		.4byte	0
 8887              	.LLST90:
 8888 1359 10000000 		.4byte	.LVL357
 8889 135d 20000000 		.4byte	.LVL360
 8890 1361 0100     		.2byte	0x1
 8891 1363 50       		.byte	0x50
 8892 1364 20000000 		.4byte	.LVL360
 8893 1368 58000000 		.4byte	.LVL366
 8894 136c 0100     		.2byte	0x1
 8895 136e 55       		.byte	0x55
 8896 136f 58000000 		.4byte	.LVL366
 8897 1373 5C000000 		.4byte	.LVL368
 8898 1377 0100     		.2byte	0x1
 8899 1379 50       		.byte	0x50
 8900 137a 5C000000 		.4byte	.LVL368
 8901 137e 70000000 		.4byte	.LVL377
 8902 1382 0100     		.2byte	0x1
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccApaELb.s 			page 216


 8903 1384 55       		.byte	0x55
 8904 1385 00000000 		.4byte	0
 8905 1389 00000000 		.4byte	0
 8906              	.LLST91:
 8907 138d 0A000000 		.4byte	.LVL355
 8908 1391 0D000000 		.4byte	.LVL356-1
 8909 1395 0100     		.2byte	0x1
 8910 1397 50       		.byte	0x50
 8911 1398 0D000000 		.4byte	.LVL356-1
 8912 139c 4A000000 		.4byte	.LVL363
 8913 13a0 0100     		.2byte	0x1
 8914 13a2 54       		.byte	0x54
 8915 13a3 4A000000 		.4byte	.LVL363
 8916 13a7 4C000000 		.4byte	.LVL364
 8917 13ab 0400     		.2byte	0x4
 8918 13ad F3       		.byte	0xf3
 8919 13ae 01       		.uleb128 0x1
 8920 13af 50       		.byte	0x50
 8921 13b0 9F       		.byte	0x9f
 8922 13b1 4C000000 		.4byte	.LVL364
 8923 13b5 56000000 		.4byte	.LVL365
 8924 13b9 0100     		.2byte	0x1
 8925 13bb 54       		.byte	0x54
 8926 13bc 56000000 		.4byte	.LVL365
 8927 13c0 58000000 		.4byte	.LVL366
 8928 13c4 0400     		.2byte	0x4
 8929 13c6 F3       		.byte	0xf3
 8930 13c7 01       		.uleb128 0x1
 8931 13c8 50       		.byte	0x50
 8932 13c9 9F       		.byte	0x9f
 8933 13ca 58000000 		.4byte	.LVL366
 8934 13ce 5A000000 		.4byte	.LVL367
 8935 13d2 0100     		.2byte	0x1
 8936 13d4 54       		.byte	0x54
 8937 13d5 5A000000 		.4byte	.LVL367
 8938 13d9 5C000000 		.4byte	.LVL368
 8939 13dd 0400     		.2byte	0x4
 8940 13df F3       		.byte	0xf3
 8941 13e0 01       		.uleb128 0x1
 8942 13e1 50       		.byte	0x50
 8943 13e2 9F       		.byte	0x9f
 8944 13e3 5C000000 		.4byte	.LVL368
 8945 13e7 5E000000 		.4byte	.LVL369
 8946 13eb 0100     		.2byte	0x1
 8947 13ed 54       		.byte	0x54
 8948 13ee 5E000000 		.4byte	.LVL369
 8949 13f2 60000000 		.4byte	.LVL370
 8950 13f6 0400     		.2byte	0x4
 8951 13f8 F3       		.byte	0xf3
 8952 13f9 01       		.uleb128 0x1
 8953 13fa 50       		.byte	0x50
 8954 13fb 9F       		.byte	0x9f
 8955 13fc 60000000 		.4byte	.LVL370
 8956 1400 62000000 		.4byte	.LVL371
 8957 1404 0100     		.2byte	0x1
 8958 1406 54       		.byte	0x54
 8959 1407 62000000 		.4byte	.LVL371
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccApaELb.s 			page 217


 8960 140b 64000000 		.4byte	.LVL372
 8961 140f 0400     		.2byte	0x4
 8962 1411 F3       		.byte	0xf3
 8963 1412 01       		.uleb128 0x1
 8964 1413 50       		.byte	0x50
 8965 1414 9F       		.byte	0x9f
 8966 1415 64000000 		.4byte	.LVL372
 8967 1419 66000000 		.4byte	.LVL373
 8968 141d 0100     		.2byte	0x1
 8969 141f 54       		.byte	0x54
 8970 1420 66000000 		.4byte	.LVL373
 8971 1424 72000000 		.4byte	.LFE46
 8972 1428 0400     		.2byte	0x4
 8973 142a F3       		.byte	0xf3
 8974 142b 01       		.uleb128 0x1
 8975 142c 50       		.byte	0x50
 8976 142d 9F       		.byte	0x9f
 8977 142e 00000000 		.4byte	0
 8978 1432 00000000 		.4byte	0
 8979              	.LLST92:
 8980 1436 12000000 		.4byte	.LVL358
 8981 143a 70000000 		.4byte	.LVL378
 8982 143e 0100     		.2byte	0x1
 8983 1440 57       		.byte	0x57
 8984 1441 00000000 		.4byte	0
 8985 1445 00000000 		.4byte	0
 8986              	.LLST93:
 8987 1449 1C000000 		.4byte	.LVL359
 8988 144d 58000000 		.4byte	.LVL366
 8989 1451 0100     		.2byte	0x1
 8990 1453 56       		.byte	0x56
 8991 1454 5C000000 		.4byte	.LVL368
 8992 1458 66000000 		.4byte	.LVL373
 8993 145c 0100     		.2byte	0x1
 8994 145e 56       		.byte	0x56
 8995 145f 00000000 		.4byte	0
 8996 1463 00000000 		.4byte	0
 8997              	.LLST94:
 8998 1467 00000000 		.4byte	.LVL379
 8999 146b 09000000 		.4byte	.LVL381-1
 9000 146f 0100     		.2byte	0x1
 9001 1471 50       		.byte	0x50
 9002 1472 09000000 		.4byte	.LVL381-1
 9003 1476 20000000 		.4byte	.LVL387
 9004 147a 0100     		.2byte	0x1
 9005 147c 54       		.byte	0x54
 9006 147d 20000000 		.4byte	.LVL387
 9007 1481 22000000 		.4byte	.LVL388
 9008 1485 0400     		.2byte	0x4
 9009 1487 F3       		.byte	0xf3
 9010 1488 01       		.uleb128 0x1
 9011 1489 50       		.byte	0x50
 9012 148a 9F       		.byte	0x9f
 9013 148b 22000000 		.4byte	.LVL388
 9014 148f 24000000 		.4byte	.LVL389
 9015 1493 0100     		.2byte	0x1
 9016 1495 54       		.byte	0x54
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccApaELb.s 			page 218


 9017 1496 24000000 		.4byte	.LVL389
 9018 149a 2E000000 		.4byte	.LFE47
 9019 149e 0400     		.2byte	0x4
 9020 14a0 F3       		.byte	0xf3
 9021 14a1 01       		.uleb128 0x1
 9022 14a2 50       		.byte	0x50
 9023 14a3 9F       		.byte	0x9f
 9024 14a4 00000000 		.4byte	0
 9025 14a8 00000000 		.4byte	0
 9026              	.LLST95:
 9027 14ac 00000000 		.4byte	.LVL379
 9028 14b0 09000000 		.4byte	.LVL381-1
 9029 14b4 0100     		.2byte	0x1
 9030 14b6 51       		.byte	0x51
 9031 14b7 09000000 		.4byte	.LVL381-1
 9032 14bb 2C000000 		.4byte	.LVL393
 9033 14bf 0100     		.2byte	0x1
 9034 14c1 56       		.byte	0x56
 9035 14c2 2C000000 		.4byte	.LVL393
 9036 14c6 2E000000 		.4byte	.LFE47
 9037 14ca 0400     		.2byte	0x4
 9038 14cc F3       		.byte	0xf3
 9039 14cd 01       		.uleb128 0x1
 9040 14ce 51       		.byte	0x51
 9041 14cf 9F       		.byte	0x9f
 9042 14d0 00000000 		.4byte	0
 9043 14d4 00000000 		.4byte	0
 9044              	.LLST96:
 9045 14d8 1E000000 		.4byte	.LVL386
 9046 14dc 22000000 		.4byte	.LVL388
 9047 14e0 0200     		.2byte	0x2
 9048 14e2 31       		.byte	0x31
 9049 14e3 9F       		.byte	0x9f
 9050 14e4 24000000 		.4byte	.LVL389
 9051 14e8 2C000000 		.4byte	.LVL391
 9052 14ec 0100     		.2byte	0x1
 9053 14ee 54       		.byte	0x54
 9054 14ef 2C000000 		.4byte	.LVL391
 9055 14f3 2E000000 		.4byte	.LFE47
 9056 14f7 0100     		.2byte	0x1
 9057 14f9 50       		.byte	0x50
 9058 14fa 00000000 		.4byte	0
 9059 14fe 00000000 		.4byte	0
 9060              	.LLST97:
 9061 1502 0C000000 		.4byte	.LVL382
 9062 1506 18000000 		.4byte	.LVL384
 9063 150a 0100     		.2byte	0x1
 9064 150c 50       		.byte	0x50
 9065 150d 18000000 		.4byte	.LVL384
 9066 1511 22000000 		.4byte	.LVL388
 9067 1515 0100     		.2byte	0x1
 9068 1517 55       		.byte	0x55
 9069 1518 22000000 		.4byte	.LVL388
 9070 151c 24000000 		.4byte	.LVL389
 9071 1520 0100     		.2byte	0x1
 9072 1522 50       		.byte	0x50
 9073 1523 24000000 		.4byte	.LVL389
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccApaELb.s 			page 219


 9074 1527 2C000000 		.4byte	.LVL392
 9075 152b 0100     		.2byte	0x1
 9076 152d 55       		.byte	0x55
 9077 152e 00000000 		.4byte	0
 9078 1532 00000000 		.4byte	0
 9079              	.LLST98:
 9080 1536 14000000 		.4byte	.LVL383
 9081 153a 22000000 		.4byte	.LVL388
 9082 153e 0100     		.2byte	0x1
 9083 1540 57       		.byte	0x57
 9084 1541 00000000 		.4byte	0
 9085 1545 00000000 		.4byte	0
 9086              	.LLST99:
 9087 1549 06000000 		.4byte	.LVL380
 9088 154d 09000000 		.4byte	.LVL381-1
 9089 1551 0100     		.2byte	0x1
 9090 1553 50       		.byte	0x50
 9091 1554 09000000 		.4byte	.LVL381-1
 9092 1558 20000000 		.4byte	.LVL387
 9093 155c 0100     		.2byte	0x1
 9094 155e 54       		.byte	0x54
 9095 155f 20000000 		.4byte	.LVL387
 9096 1563 22000000 		.4byte	.LVL388
 9097 1567 0400     		.2byte	0x4
 9098 1569 F3       		.byte	0xf3
 9099 156a 01       		.uleb128 0x1
 9100 156b 50       		.byte	0x50
 9101 156c 9F       		.byte	0x9f
 9102 156d 22000000 		.4byte	.LVL388
 9103 1571 24000000 		.4byte	.LVL389
 9104 1575 0100     		.2byte	0x1
 9105 1577 54       		.byte	0x54
 9106 1578 24000000 		.4byte	.LVL389
 9107 157c 2E000000 		.4byte	.LFE47
 9108 1580 0400     		.2byte	0x4
 9109 1582 F3       		.byte	0xf3
 9110 1583 01       		.uleb128 0x1
 9111 1584 50       		.byte	0x50
 9112 1585 9F       		.byte	0x9f
 9113 1586 00000000 		.4byte	0
 9114 158a 00000000 		.4byte	0
 9115              	.LLST100:
 9116 158e 00000000 		.4byte	.LVL394
 9117 1592 07000000 		.4byte	.LVL395-1
 9118 1596 0100     		.2byte	0x1
 9119 1598 50       		.byte	0x50
 9120 1599 07000000 		.4byte	.LVL395-1
 9121 159d 0A000000 		.4byte	.LVL396
 9122 15a1 0100     		.2byte	0x1
 9123 15a3 54       		.byte	0x54
 9124 15a4 0A000000 		.4byte	.LVL396
 9125 15a8 12000000 		.4byte	.LFE48
 9126 15ac 0400     		.2byte	0x4
 9127 15ae F3       		.byte	0xf3
 9128 15af 01       		.uleb128 0x1
 9129 15b0 50       		.byte	0x50
 9130 15b1 9F       		.byte	0x9f
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccApaELb.s 			page 220


 9131 15b2 00000000 		.4byte	0
 9132 15b6 00000000 		.4byte	0
 9133              	.LLST101:
 9134 15ba 0A000000 		.4byte	.LVL396
 9135 15be 10000000 		.4byte	.LVL398
 9136 15c2 0100     		.2byte	0x1
 9137 15c4 54       		.byte	0x54
 9138 15c5 10000000 		.4byte	.LVL398
 9139 15c9 12000000 		.4byte	.LFE48
 9140 15cd 0100     		.2byte	0x1
 9141 15cf 50       		.byte	0x50
 9142 15d0 00000000 		.4byte	0
 9143 15d4 00000000 		.4byte	0
 9144              	.LLST102:
 9145 15d8 00000000 		.4byte	.LVL399
 9146 15dc 07000000 		.4byte	.LVL401-1
 9147 15e0 0100     		.2byte	0x1
 9148 15e2 50       		.byte	0x50
 9149 15e3 07000000 		.4byte	.LVL401-1
 9150 15e7 0C000000 		.4byte	.LVL402
 9151 15eb 0100     		.2byte	0x1
 9152 15ed 54       		.byte	0x54
 9153 15ee 0C000000 		.4byte	.LVL402
 9154 15f2 16000000 		.4byte	.LFE49
 9155 15f6 0400     		.2byte	0x4
 9156 15f8 F3       		.byte	0xf3
 9157 15f9 01       		.uleb128 0x1
 9158 15fa 50       		.byte	0x50
 9159 15fb 9F       		.byte	0x9f
 9160 15fc 00000000 		.4byte	0
 9161 1600 00000000 		.4byte	0
 9162              	.LLST103:
 9163 1604 0E000000 		.4byte	.LVL403
 9164 1608 14000000 		.4byte	.LVL405
 9165 160c 0100     		.2byte	0x1
 9166 160e 54       		.byte	0x54
 9167 160f 14000000 		.4byte	.LVL405
 9168 1613 16000000 		.4byte	.LFE49
 9169 1617 0100     		.2byte	0x1
 9170 1619 50       		.byte	0x50
 9171 161a 00000000 		.4byte	0
 9172 161e 00000000 		.4byte	0
 9173              	.LLST104:
 9174 1622 04000000 		.4byte	.LVL400
 9175 1626 07000000 		.4byte	.LVL401-1
 9176 162a 0100     		.2byte	0x1
 9177 162c 50       		.byte	0x50
 9178 162d 07000000 		.4byte	.LVL401-1
 9179 1631 0C000000 		.4byte	.LVL402
 9180 1635 0100     		.2byte	0x1
 9181 1637 54       		.byte	0x54
 9182 1638 0C000000 		.4byte	.LVL402
 9183 163c 16000000 		.4byte	.LFE49
 9184 1640 0400     		.2byte	0x4
 9185 1642 F3       		.byte	0xf3
 9186 1643 01       		.uleb128 0x1
 9187 1644 50       		.byte	0x50
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccApaELb.s 			page 221


 9188 1645 9F       		.byte	0x9f
 9189 1646 00000000 		.4byte	0
 9190 164a 00000000 		.4byte	0
 9191              	.LLST105:
 9192 164e 00000000 		.4byte	.LVL406
 9193 1652 02000000 		.4byte	.LVL407
 9194 1656 0100     		.2byte	0x1
 9195 1658 50       		.byte	0x50
 9196 1659 02000000 		.4byte	.LVL407
 9197 165d 04000000 		.4byte	.LFE50
 9198 1661 0400     		.2byte	0x4
 9199 1663 F3       		.byte	0xf3
 9200 1664 01       		.uleb128 0x1
 9201 1665 50       		.byte	0x50
 9202 1666 9F       		.byte	0x9f
 9203 1667 00000000 		.4byte	0
 9204 166b 00000000 		.4byte	0
 9205              	.LLST106:
 9206 166f 00000000 		.4byte	.LVL408
 9207 1673 08000000 		.4byte	.LVL409
 9208 1677 0100     		.2byte	0x1
 9209 1679 50       		.byte	0x50
 9210 167a 08000000 		.4byte	.LVL409
 9211 167e 0A000000 		.4byte	.LVL410
 9212 1682 0400     		.2byte	0x4
 9213 1684 F3       		.byte	0xf3
 9214 1685 01       		.uleb128 0x1
 9215 1686 50       		.byte	0x50
 9216 1687 9F       		.byte	0x9f
 9217 1688 0A000000 		.4byte	.LVL410
 9218 168c 0C000000 		.4byte	.LVL411
 9219 1690 0100     		.2byte	0x1
 9220 1692 50       		.byte	0x50
 9221 1693 0C000000 		.4byte	.LVL411
 9222 1697 0E000000 		.4byte	.LFE57
 9223 169b 0400     		.2byte	0x4
 9224 169d F3       		.byte	0xf3
 9225 169e 01       		.uleb128 0x1
 9226 169f 50       		.byte	0x50
 9227 16a0 9F       		.byte	0x9f
 9228 16a1 00000000 		.4byte	0
 9229 16a5 00000000 		.4byte	0
 9230              	.LLST107:
 9231 16a9 00000000 		.4byte	.LVL412
 9232 16ad 0A000000 		.4byte	.LVL413
 9233 16b1 0100     		.2byte	0x1
 9234 16b3 50       		.byte	0x50
 9235 16b4 0A000000 		.4byte	.LVL413
 9236 16b8 0C000000 		.4byte	.LVL414
 9237 16bc 0400     		.2byte	0x4
 9238 16be F3       		.byte	0xf3
 9239 16bf 01       		.uleb128 0x1
 9240 16c0 50       		.byte	0x50
 9241 16c1 9F       		.byte	0x9f
 9242 16c2 0C000000 		.4byte	.LVL414
 9243 16c6 0E000000 		.4byte	.LVL415
 9244 16ca 0100     		.2byte	0x1
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccApaELb.s 			page 222


 9245 16cc 50       		.byte	0x50
 9246 16cd 0E000000 		.4byte	.LVL415
 9247 16d1 10000000 		.4byte	.LFE59
 9248 16d5 0400     		.2byte	0x4
 9249 16d7 F3       		.byte	0xf3
 9250 16d8 01       		.uleb128 0x1
 9251 16d9 50       		.byte	0x50
 9252 16da 9F       		.byte	0x9f
 9253 16db 00000000 		.4byte	0
 9254 16df 00000000 		.4byte	0
 9255              	.LLST108:
 9256 16e3 02000000 		.4byte	.LVL417
 9257 16e7 06000000 		.4byte	.LVL418
 9258 16eb 0200     		.2byte	0x2
 9259 16ed 30       		.byte	0x30
 9260 16ee 9F       		.byte	0x9f
 9261 16ef 06000000 		.4byte	.LVL418
 9262 16f3 12000000 		.4byte	.LVL419
 9263 16f7 0100     		.2byte	0x1
 9264 16f9 53       		.byte	0x53
 9265 16fa 1A000000 		.4byte	.LVL420
 9266 16fe 20000000 		.4byte	.LVL422
 9267 1702 0100     		.2byte	0x1
 9268 1704 53       		.byte	0x53
 9269 1705 00000000 		.4byte	0
 9270 1709 00000000 		.4byte	0
 9271              	.LLST109:
 9272 170d 00000000 		.4byte	.LVL423
 9273 1711 14000000 		.4byte	.LVL426
 9274 1715 0100     		.2byte	0x1
 9275 1717 50       		.byte	0x50
 9276 1718 14000000 		.4byte	.LVL426
 9277 171c 16000000 		.4byte	.LVL427
 9278 1720 0400     		.2byte	0x4
 9279 1722 F3       		.byte	0xf3
 9280 1723 01       		.uleb128 0x1
 9281 1724 50       		.byte	0x50
 9282 1725 9F       		.byte	0x9f
 9283 1726 16000000 		.4byte	.LVL427
 9284 172a 1E000000 		.4byte	.LVL429
 9285 172e 0100     		.2byte	0x1
 9286 1730 50       		.byte	0x50
 9287 1731 1E000000 		.4byte	.LVL429
 9288 1735 24000000 		.4byte	.LFE61
 9289 1739 0400     		.2byte	0x4
 9290 173b F3       		.byte	0xf3
 9291 173c 01       		.uleb128 0x1
 9292 173d 50       		.byte	0x50
 9293 173e 9F       		.byte	0x9f
 9294 173f 00000000 		.4byte	0
 9295 1743 00000000 		.4byte	0
 9296              	.LLST110:
 9297 1747 00000000 		.4byte	.LVL423
 9298 174b 04000000 		.4byte	.LVL424
 9299 174f 0200     		.2byte	0x2
 9300 1751 30       		.byte	0x30
 9301 1752 9F       		.byte	0x9f
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccApaELb.s 			page 223


 9302 1753 04000000 		.4byte	.LVL424
 9303 1757 12000000 		.4byte	.LVL425
 9304 175b 0100     		.2byte	0x1
 9305 175d 52       		.byte	0x52
 9306 175e 16000000 		.4byte	.LVL427
 9307 1762 1E000000 		.4byte	.LVL429
 9308 1766 0100     		.2byte	0x1
 9309 1768 52       		.byte	0x52
 9310 1769 00000000 		.4byte	0
 9311 176d 00000000 		.4byte	0
 9312              	.LLST111:
 9313 1771 00000000 		.4byte	.LVL423
 9314 1775 14000000 		.4byte	.LVL426
 9315 1779 0200     		.2byte	0x2
 9316 177b 30       		.byte	0x30
 9317 177c 9F       		.byte	0x9f
 9318 177d 14000000 		.4byte	.LVL426
 9319 1781 16000000 		.4byte	.LVL427
 9320 1785 0100     		.2byte	0x1
 9321 1787 50       		.byte	0x50
 9322 1788 16000000 		.4byte	.LVL427
 9323 178c 1E000000 		.4byte	.LVL429
 9324 1790 0200     		.2byte	0x2
 9325 1792 30       		.byte	0x30
 9326 1793 9F       		.byte	0x9f
 9327 1794 1E000000 		.4byte	.LVL429
 9328 1798 24000000 		.4byte	.LFE61
 9329 179c 0100     		.2byte	0x1
 9330 179e 50       		.byte	0x50
 9331 179f 00000000 		.4byte	0
 9332 17a3 00000000 		.4byte	0
 9333              	.LLST112:
 9334 17a7 00000000 		.4byte	.LVL430
 9335 17ab 04000000 		.4byte	.LVL431
 9336 17af 0200     		.2byte	0x2
 9337 17b1 30       		.byte	0x30
 9338 17b2 9F       		.byte	0x9f
 9339 17b3 04000000 		.4byte	.LVL431
 9340 17b7 12000000 		.4byte	.LVL432
 9341 17bb 0100     		.2byte	0x1
 9342 17bd 52       		.byte	0x52
 9343 17be 1C000000 		.4byte	.LVL433
 9344 17c2 22000000 		.4byte	.LVL435
 9345 17c6 0100     		.2byte	0x1
 9346 17c8 52       		.byte	0x52
 9347 17c9 00000000 		.4byte	0
 9348 17cd 00000000 		.4byte	0
 9349              	.LLST113:
 9350 17d1 00000000 		.4byte	.LVL436
 9351 17d5 07000000 		.4byte	.LVL438-1
 9352 17d9 0100     		.2byte	0x1
 9353 17db 50       		.byte	0x50
 9354 17dc 07000000 		.4byte	.LVL438-1
 9355 17e0 0E000000 		.4byte	.LVL440
 9356 17e4 0100     		.2byte	0x1
 9357 17e6 54       		.byte	0x54
 9358 17e7 0E000000 		.4byte	.LVL440
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccApaELb.s 			page 224


 9359 17eb 10000000 		.4byte	.LFE51
 9360 17ef 0400     		.2byte	0x4
 9361 17f1 F3       		.byte	0xf3
 9362 17f2 01       		.uleb128 0x1
 9363 17f3 50       		.byte	0x50
 9364 17f4 9F       		.byte	0x9f
 9365 17f5 00000000 		.4byte	0
 9366 17f9 00000000 		.4byte	0
 9367              	.LLST114:
 9368 17fd 04000000 		.4byte	.LVL437
 9369 1801 07000000 		.4byte	.LVL438-1
 9370 1805 0100     		.2byte	0x1
 9371 1807 50       		.byte	0x50
 9372 1808 07000000 		.4byte	.LVL438-1
 9373 180c 0E000000 		.4byte	.LVL440
 9374 1810 0100     		.2byte	0x1
 9375 1812 54       		.byte	0x54
 9376 1813 0E000000 		.4byte	.LVL440
 9377 1817 10000000 		.4byte	.LFE51
 9378 181b 0400     		.2byte	0x4
 9379 181d F3       		.byte	0xf3
 9380 181e 01       		.uleb128 0x1
 9381 181f 50       		.byte	0x50
 9382 1820 9F       		.byte	0x9f
 9383 1821 00000000 		.4byte	0
 9384 1825 00000000 		.4byte	0
 9385              	.LLST115:
 9386 1829 00000000 		.4byte	.LVL441
 9387 182d 09000000 		.4byte	.LVL442-1
 9388 1831 0100     		.2byte	0x1
 9389 1833 50       		.byte	0x50
 9390 1834 09000000 		.4byte	.LVL442-1
 9391 1838 0C000000 		.4byte	.LFE63
 9392 183c 0400     		.2byte	0x4
 9393 183e F3       		.byte	0xf3
 9394 183f 01       		.uleb128 0x1
 9395 1840 50       		.byte	0x50
 9396 1841 9F       		.byte	0x9f
 9397 1842 00000000 		.4byte	0
 9398 1846 00000000 		.4byte	0
 9399              	.LLST116:
 9400 184a 00000000 		.4byte	.LVL443
 9401 184e 09000000 		.4byte	.LVL444-1
 9402 1852 0100     		.2byte	0x1
 9403 1854 50       		.byte	0x50
 9404 1855 09000000 		.4byte	.LVL444-1
 9405 1859 1A000000 		.4byte	.LVL446
 9406 185d 0100     		.2byte	0x1
 9407 185f 54       		.byte	0x54
 9408 1860 1A000000 		.4byte	.LVL446
 9409 1864 1C000000 		.4byte	.LVL447
 9410 1868 0400     		.2byte	0x4
 9411 186a F3       		.byte	0xf3
 9412 186b 01       		.uleb128 0x1
 9413 186c 50       		.byte	0x50
 9414 186d 9F       		.byte	0x9f
 9415 186e 1C000000 		.4byte	.LVL447
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccApaELb.s 			page 225


 9416 1872 1E000000 		.4byte	.LVL448
 9417 1876 0100     		.2byte	0x1
 9418 1878 54       		.byte	0x54
 9419 1879 1E000000 		.4byte	.LVL448
 9420 187d 20000000 		.4byte	.LVL449
 9421 1881 0400     		.2byte	0x4
 9422 1883 F3       		.byte	0xf3
 9423 1884 01       		.uleb128 0x1
 9424 1885 50       		.byte	0x50
 9425 1886 9F       		.byte	0x9f
 9426 1887 20000000 		.4byte	.LVL449
 9427 188b 22000000 		.4byte	.LVL450
 9428 188f 0100     		.2byte	0x1
 9429 1891 54       		.byte	0x54
 9430 1892 22000000 		.4byte	.LVL450
 9431 1896 2A000000 		.4byte	.LFE64
 9432 189a 0400     		.2byte	0x4
 9433 189c F3       		.byte	0xf3
 9434 189d 01       		.uleb128 0x1
 9435 189e 50       		.byte	0x50
 9436 189f 9F       		.byte	0x9f
 9437 18a0 00000000 		.4byte	0
 9438 18a4 00000000 		.4byte	0
 9439              	.LLST117:
 9440 18a8 00000000 		.4byte	.LVL443
 9441 18ac 09000000 		.4byte	.LVL444-1
 9442 18b0 0100     		.2byte	0x1
 9443 18b2 51       		.byte	0x51
 9444 18b3 09000000 		.4byte	.LVL444-1
 9445 18b7 28000000 		.4byte	.LVL453
 9446 18bb 0100     		.2byte	0x1
 9447 18bd 55       		.byte	0x55
 9448 18be 28000000 		.4byte	.LVL453
 9449 18c2 2A000000 		.4byte	.LFE64
 9450 18c6 0400     		.2byte	0x4
 9451 18c8 F3       		.byte	0xf3
 9452 18c9 01       		.uleb128 0x1
 9453 18ca 51       		.byte	0x51
 9454 18cb 9F       		.byte	0x9f
 9455 18cc 00000000 		.4byte	0
 9456 18d0 00000000 		.4byte	0
 9457              	.LLST118:
 9458 18d4 18000000 		.4byte	.LVL445
 9459 18d8 1C000000 		.4byte	.LVL447
 9460 18dc 0200     		.2byte	0x2
 9461 18de 31       		.byte	0x31
 9462 18df 9F       		.byte	0x9f
 9463 18e0 22000000 		.4byte	.LVL450
 9464 18e4 28000000 		.4byte	.LVL452
 9465 18e8 0100     		.2byte	0x1
 9466 18ea 54       		.byte	0x54
 9467 18eb 28000000 		.4byte	.LVL452
 9468 18ef 2A000000 		.4byte	.LFE64
 9469 18f3 0100     		.2byte	0x1
 9470 18f5 50       		.byte	0x50
 9471 18f6 00000000 		.4byte	0
 9472 18fa 00000000 		.4byte	0
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccApaELb.s 			page 226


 9473              	.LLST119:
 9474 18fe 00000000 		.4byte	.LVL454
 9475 1902 13000000 		.4byte	.LVL456-1
 9476 1906 0100     		.2byte	0x1
 9477 1908 50       		.byte	0x50
 9478 1909 13000000 		.4byte	.LVL456-1
 9479 190d 20000000 		.4byte	.LVL458
 9480 1911 0100     		.2byte	0x1
 9481 1913 54       		.byte	0x54
 9482 1914 20000000 		.4byte	.LVL458
 9483 1918 22000000 		.4byte	.LVL459
 9484 191c 0100     		.2byte	0x1
 9485 191e 50       		.byte	0x50
 9486 191f 22000000 		.4byte	.LVL459
 9487 1923 24000000 		.4byte	.LVL460
 9488 1927 0100     		.2byte	0x1
 9489 1929 54       		.byte	0x54
 9490 192a 24000000 		.4byte	.LVL460
 9491 192e 26000000 		.4byte	.LVL461
 9492 1932 0100     		.2byte	0x1
 9493 1934 50       		.byte	0x50
 9494 1935 26000000 		.4byte	.LVL461
 9495 1939 26000000 		.4byte	.LVL462
 9496 193d 0100     		.2byte	0x1
 9497 193f 54       		.byte	0x54
 9498 1940 26000000 		.4byte	.LVL462
 9499 1944 28000000 		.4byte	.LFE65
 9500 1948 0400     		.2byte	0x4
 9501 194a F3       		.byte	0xf3
 9502 194b 01       		.uleb128 0x1
 9503 194c 50       		.byte	0x50
 9504 194d 9F       		.byte	0x9f
 9505 194e 00000000 		.4byte	0
 9506 1952 00000000 		.4byte	0
 9507              	.LLST120:
 9508 1956 00000000 		.4byte	.LVL454
 9509 195a 13000000 		.4byte	.LVL456-1
 9510 195e 0100     		.2byte	0x1
 9511 1960 51       		.byte	0x51
 9512 1961 13000000 		.4byte	.LVL456-1
 9513 1965 20000000 		.4byte	.LVL458
 9514 1969 0400     		.2byte	0x4
 9515 196b F3       		.byte	0xf3
 9516 196c 01       		.uleb128 0x1
 9517 196d 51       		.byte	0x51
 9518 196e 9F       		.byte	0x9f
 9519 196f 20000000 		.4byte	.LVL458
 9520 1973 26000000 		.4byte	.LVL461
 9521 1977 0100     		.2byte	0x1
 9522 1979 51       		.byte	0x51
 9523 197a 26000000 		.4byte	.LVL461
 9524 197e 28000000 		.4byte	.LFE65
 9525 1982 0400     		.2byte	0x4
 9526 1984 F3       		.byte	0xf3
 9527 1985 01       		.uleb128 0x1
 9528 1986 51       		.byte	0x51
 9529 1987 9F       		.byte	0x9f
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccApaELb.s 			page 227


 9530 1988 00000000 		.4byte	0
 9531 198c 00000000 		.4byte	0
 9532              	.LLST121:
 9533 1990 1C000000 		.4byte	.LVL457
 9534 1994 20000000 		.4byte	.LVL458
 9535 1998 0200     		.2byte	0x2
 9536 199a 31       		.byte	0x31
 9537 199b 9F       		.byte	0x9f
 9538 199c 26000000 		.4byte	.LVL461
 9539 19a0 28000000 		.4byte	.LFE65
 9540 19a4 0100     		.2byte	0x1
 9541 19a6 50       		.byte	0x50
 9542 19a7 00000000 		.4byte	0
 9543 19ab 00000000 		.4byte	0
 9544              	.LLST122:
 9545 19af 04000000 		.4byte	.LVL455
 9546 19b3 13000000 		.4byte	.LVL456-1
 9547 19b7 0100     		.2byte	0x1
 9548 19b9 50       		.byte	0x50
 9549 19ba 13000000 		.4byte	.LVL456-1
 9550 19be 20000000 		.4byte	.LVL458
 9551 19c2 0100     		.2byte	0x1
 9552 19c4 54       		.byte	0x54
 9553 19c5 20000000 		.4byte	.LVL458
 9554 19c9 22000000 		.4byte	.LVL459
 9555 19cd 0100     		.2byte	0x1
 9556 19cf 50       		.byte	0x50
 9557 19d0 22000000 		.4byte	.LVL459
 9558 19d4 24000000 		.4byte	.LVL460
 9559 19d8 0100     		.2byte	0x1
 9560 19da 54       		.byte	0x54
 9561 19db 24000000 		.4byte	.LVL460
 9562 19df 26000000 		.4byte	.LVL461
 9563 19e3 0100     		.2byte	0x1
 9564 19e5 50       		.byte	0x50
 9565 19e6 26000000 		.4byte	.LVL461
 9566 19ea 26000000 		.4byte	.LVL462
 9567 19ee 0100     		.2byte	0x1
 9568 19f0 54       		.byte	0x54
 9569 19f1 26000000 		.4byte	.LVL462
 9570 19f5 28000000 		.4byte	.LFE65
 9571 19f9 0400     		.2byte	0x4
 9572 19fb F3       		.byte	0xf3
 9573 19fc 01       		.uleb128 0x1
 9574 19fd 50       		.byte	0x50
 9575 19fe 9F       		.byte	0x9f
 9576 19ff 00000000 		.4byte	0
 9577 1a03 00000000 		.4byte	0
 9578              	.LLST123:
 9579 1a07 00000000 		.4byte	.LVL463
 9580 1a0b 0F000000 		.4byte	.LVL465-1
 9581 1a0f 0100     		.2byte	0x1
 9582 1a11 50       		.byte	0x50
 9583 1a12 0F000000 		.4byte	.LVL465-1
 9584 1a16 16000000 		.4byte	.LFE66
 9585 1a1a 0400     		.2byte	0x4
 9586 1a1c F3       		.byte	0xf3
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccApaELb.s 			page 228


 9587 1a1d 01       		.uleb128 0x1
 9588 1a1e 50       		.byte	0x50
 9589 1a1f 9F       		.byte	0x9f
 9590 1a20 00000000 		.4byte	0
 9591 1a24 00000000 		.4byte	0
 9592              	.LLST124:
 9593 1a28 00000000 		.4byte	.LVL463
 9594 1a2c 0C000000 		.4byte	.LVL464
 9595 1a30 0100     		.2byte	0x1
 9596 1a32 51       		.byte	0x51
 9597 1a33 0C000000 		.4byte	.LVL464
 9598 1a37 0F000000 		.4byte	.LVL465-1
 9599 1a3b 0100     		.2byte	0x1
 9600 1a3d 52       		.byte	0x52
 9601 1a3e 0F000000 		.4byte	.LVL465-1
 9602 1a42 16000000 		.4byte	.LFE66
 9603 1a46 0400     		.2byte	0x4
 9604 1a48 F3       		.byte	0xf3
 9605 1a49 01       		.uleb128 0x1
 9606 1a4a 51       		.byte	0x51
 9607 1a4b 9F       		.byte	0x9f
 9608 1a4c 00000000 		.4byte	0
 9609 1a50 00000000 		.4byte	0
 9610              	.LLST125:
 9611 1a54 00000000 		.4byte	.LVL466
 9612 1a58 0F000000 		.4byte	.LVL467-1
 9613 1a5c 0100     		.2byte	0x1
 9614 1a5e 50       		.byte	0x50
 9615 1a5f 0F000000 		.4byte	.LVL467-1
 9616 1a63 16000000 		.4byte	.LFE67
 9617 1a67 0400     		.2byte	0x4
 9618 1a69 F3       		.byte	0xf3
 9619 1a6a 01       		.uleb128 0x1
 9620 1a6b 50       		.byte	0x50
 9621 1a6c 9F       		.byte	0x9f
 9622 1a6d 00000000 		.4byte	0
 9623 1a71 00000000 		.4byte	0
 9624              		.section	.debug_aranges,"",%progbits
 9625 0000 3C010000 		.4byte	0x13c
 9626 0004 0200     		.2byte	0x2
 9627 0006 00000000 		.4byte	.Ldebug_info0
 9628 000a 04       		.byte	0x4
 9629 000b 00       		.byte	0
 9630 000c 0000     		.2byte	0
 9631 000e 0000     		.2byte	0
 9632 0010 00000000 		.4byte	.LFB52
 9633 0014 14000000 		.4byte	.LFE52-.LFB52
 9634 0018 00000000 		.4byte	.LFB58
 9635 001c 1E000000 		.4byte	.LFE58-.LFB58
 9636 0020 00000000 		.4byte	.LFB56
 9637 0024 1C000000 		.4byte	.LFE56-.LFB56
 9638 0028 00000000 		.4byte	.LFB53
 9639 002c 82000000 		.4byte	.LFE53-.LFB53
 9640 0030 00000000 		.4byte	.LFB68
 9641 0034 50000000 		.4byte	.LFE68-.LFB68
 9642 0038 00000000 		.4byte	.LFB54
 9643 003c 24000000 		.4byte	.LFE54-.LFB54
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccApaELb.s 			page 229


 9644 0040 00000000 		.4byte	.LFB55
 9645 0044 86000000 		.4byte	.LFE55-.LFB55
 9646 0048 00000000 		.4byte	.LFB32
 9647 004c 64000000 		.4byte	.LFE32-.LFB32
 9648 0050 00000000 		.4byte	.LFB34
 9649 0054 20000000 		.4byte	.LFE34-.LFB34
 9650 0058 00000000 		.4byte	.LFB33
 9651 005c 34000000 		.4byte	.LFE33-.LFB33
 9652 0060 00000000 		.4byte	.LFB39
 9653 0064 14000000 		.4byte	.LFE39-.LFB39
 9654 0068 00000000 		.4byte	.LFB40
 9655 006c 02010000 		.4byte	.LFE40-.LFB40
 9656 0070 00000000 		.4byte	.LFB35
 9657 0074 18000000 		.4byte	.LFE35-.LFB35
 9658 0078 00000000 		.4byte	.LFB36
 9659 007c 16000000 		.4byte	.LFE36-.LFB36
 9660 0080 00000000 		.4byte	.LFB37
 9661 0084 2E000000 		.4byte	.LFE37-.LFB37
 9662 0088 00000000 		.4byte	.LFB41
 9663 008c 9C000000 		.4byte	.LFE41-.LFB41
 9664 0090 00000000 		.4byte	.LFB42
 9665 0094 8A000000 		.4byte	.LFE42-.LFB42
 9666 0098 00000000 		.4byte	.LFB43
 9667 009c E4000000 		.4byte	.LFE43-.LFB43
 9668 00a0 00000000 		.4byte	.LFB44
 9669 00a4 1C010000 		.4byte	.LFE44-.LFB44
 9670 00a8 00000000 		.4byte	.LFB38
 9671 00ac 2E000000 		.4byte	.LFE38-.LFB38
 9672 00b0 00000000 		.4byte	.LFB45
 9673 00b4 E4000000 		.4byte	.LFE45-.LFB45
 9674 00b8 00000000 		.4byte	.LFB46
 9675 00bc 72000000 		.4byte	.LFE46-.LFB46
 9676 00c0 00000000 		.4byte	.LFB47
 9677 00c4 2E000000 		.4byte	.LFE47-.LFB47
 9678 00c8 00000000 		.4byte	.LFB48
 9679 00cc 12000000 		.4byte	.LFE48-.LFB48
 9680 00d0 00000000 		.4byte	.LFB49
 9681 00d4 16000000 		.4byte	.LFE49-.LFB49
 9682 00d8 00000000 		.4byte	.LFB50
 9683 00dc 04000000 		.4byte	.LFE50-.LFB50
 9684 00e0 00000000 		.4byte	.LFB57
 9685 00e4 0E000000 		.4byte	.LFE57-.LFB57
 9686 00e8 00000000 		.4byte	.LFB59
 9687 00ec 10000000 		.4byte	.LFE59-.LFB59
 9688 00f0 00000000 		.4byte	.LFB60
 9689 00f4 28000000 		.4byte	.LFE60-.LFB60
 9690 00f8 00000000 		.4byte	.LFB61
 9691 00fc 24000000 		.4byte	.LFE61-.LFB61
 9692 0100 00000000 		.4byte	.LFB62
 9693 0104 28000000 		.4byte	.LFE62-.LFB62
 9694 0108 00000000 		.4byte	.LFB51
 9695 010c 10000000 		.4byte	.LFE51-.LFB51
 9696 0110 00000000 		.4byte	.LFB63
 9697 0114 0C000000 		.4byte	.LFE63-.LFB63
 9698 0118 00000000 		.4byte	.LFB64
 9699 011c 2A000000 		.4byte	.LFE64-.LFB64
 9700 0120 00000000 		.4byte	.LFB65
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccApaELb.s 			page 230


 9701 0124 28000000 		.4byte	.LFE65-.LFB65
 9702 0128 00000000 		.4byte	.LFB66
 9703 012c 16000000 		.4byte	.LFE66-.LFB66
 9704 0130 00000000 		.4byte	.LFB67
 9705 0134 16000000 		.4byte	.LFE67-.LFB67
 9706 0138 00000000 		.4byte	0
 9707 013c 00000000 		.4byte	0
 9708              		.section	.debug_ranges,"",%progbits
 9709              	.Ldebug_ranges0:
 9710 0000 10000000 		.4byte	.LBB2
 9711 0004 44000000 		.4byte	.LBE2
 9712 0008 48000000 		.4byte	.LBB3
 9713 000c 4A000000 		.4byte	.LBE3
 9714 0010 00000000 		.4byte	0
 9715 0014 00000000 		.4byte	0
 9716 0018 1E000000 		.4byte	.LBB6
 9717 001c 7A000000 		.4byte	.LBE6
 9718 0020 7E000000 		.4byte	.LBB7
 9719 0024 90000000 		.4byte	.LBE7
 9720 0028 00000000 		.4byte	0
 9721 002c 00000000 		.4byte	0
 9722 0030 14000000 		.4byte	.LBB9
 9723 0034 6A000000 		.4byte	.LBE9
 9724 0038 6E000000 		.4byte	.LBB10
 9725 003c 80000000 		.4byte	.LBE10
 9726 0040 00000000 		.4byte	0
 9727 0044 00000000 		.4byte	0
 9728 0048 16000000 		.4byte	.LBB16
 9729 004c 58000000 		.4byte	.LBE16
 9730 0050 5C000000 		.4byte	.LBB17
 9731 0054 66000000 		.4byte	.LBE17
 9732 0058 00000000 		.4byte	0
 9733 005c 00000000 		.4byte	0
 9734 0060 00000000 		.4byte	.LFB52
 9735 0064 14000000 		.4byte	.LFE52
 9736 0068 00000000 		.4byte	.LFB58
 9737 006c 1E000000 		.4byte	.LFE58
 9738 0070 00000000 		.4byte	.LFB56
 9739 0074 1C000000 		.4byte	.LFE56
 9740 0078 00000000 		.4byte	.LFB53
 9741 007c 82000000 		.4byte	.LFE53
 9742 0080 00000000 		.4byte	.LFB68
 9743 0084 50000000 		.4byte	.LFE68
 9744 0088 00000000 		.4byte	.LFB54
 9745 008c 24000000 		.4byte	.LFE54
 9746 0090 00000000 		.4byte	.LFB55
 9747 0094 86000000 		.4byte	.LFE55
 9748 0098 00000000 		.4byte	.LFB32
 9749 009c 64000000 		.4byte	.LFE32
 9750 00a0 00000000 		.4byte	.LFB34
 9751 00a4 20000000 		.4byte	.LFE34
 9752 00a8 00000000 		.4byte	.LFB33
 9753 00ac 34000000 		.4byte	.LFE33
 9754 00b0 00000000 		.4byte	.LFB39
 9755 00b4 14000000 		.4byte	.LFE39
 9756 00b8 00000000 		.4byte	.LFB40
 9757 00bc 02010000 		.4byte	.LFE40
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccApaELb.s 			page 231


 9758 00c0 00000000 		.4byte	.LFB35
 9759 00c4 18000000 		.4byte	.LFE35
 9760 00c8 00000000 		.4byte	.LFB36
 9761 00cc 16000000 		.4byte	.LFE36
 9762 00d0 00000000 		.4byte	.LFB37
 9763 00d4 2E000000 		.4byte	.LFE37
 9764 00d8 00000000 		.4byte	.LFB41
 9765 00dc 9C000000 		.4byte	.LFE41
 9766 00e0 00000000 		.4byte	.LFB42
 9767 00e4 8A000000 		.4byte	.LFE42
 9768 00e8 00000000 		.4byte	.LFB43
 9769 00ec E4000000 		.4byte	.LFE43
 9770 00f0 00000000 		.4byte	.LFB44
 9771 00f4 1C010000 		.4byte	.LFE44
 9772 00f8 00000000 		.4byte	.LFB38
 9773 00fc 2E000000 		.4byte	.LFE38
 9774 0100 00000000 		.4byte	.LFB45
 9775 0104 E4000000 		.4byte	.LFE45
 9776 0108 00000000 		.4byte	.LFB46
 9777 010c 72000000 		.4byte	.LFE46
 9778 0110 00000000 		.4byte	.LFB47
 9779 0114 2E000000 		.4byte	.LFE47
 9780 0118 00000000 		.4byte	.LFB48
 9781 011c 12000000 		.4byte	.LFE48
 9782 0120 00000000 		.4byte	.LFB49
 9783 0124 16000000 		.4byte	.LFE49
 9784 0128 00000000 		.4byte	.LFB50
 9785 012c 04000000 		.4byte	.LFE50
 9786 0130 00000000 		.4byte	.LFB57
 9787 0134 0E000000 		.4byte	.LFE57
 9788 0138 00000000 		.4byte	.LFB59
 9789 013c 10000000 		.4byte	.LFE59
 9790 0140 00000000 		.4byte	.LFB60
 9791 0144 28000000 		.4byte	.LFE60
 9792 0148 00000000 		.4byte	.LFB61
 9793 014c 24000000 		.4byte	.LFE61
 9794 0150 00000000 		.4byte	.LFB62
 9795 0154 28000000 		.4byte	.LFE62
 9796 0158 00000000 		.4byte	.LFB51
 9797 015c 10000000 		.4byte	.LFE51
 9798 0160 00000000 		.4byte	.LFB63
 9799 0164 0C000000 		.4byte	.LFE63
 9800 0168 00000000 		.4byte	.LFB64
 9801 016c 2A000000 		.4byte	.LFE64
 9802 0170 00000000 		.4byte	.LFB65
 9803 0174 28000000 		.4byte	.LFE65
 9804 0178 00000000 		.4byte	.LFB66
 9805 017c 16000000 		.4byte	.LFE66
 9806 0180 00000000 		.4byte	.LFB67
 9807 0184 16000000 		.4byte	.LFE67
 9808 0188 00000000 		.4byte	0
 9809 018c 00000000 		.4byte	0
 9810              		.section	.debug_line,"",%progbits
 9811              	.Ldebug_line0:
 9812 0000 66070000 		.section	.debug_str,"MS",%progbits,1
 9812      02003F02 
 9812      00000201 
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccApaELb.s 			page 232


 9812      FB0E0D00 
 9812      01010101 
 9813              	.LASF131:
 9814 0000 78517565 		.ascii	"xQueueGenericSendFromISR\000"
 9814      75654765 
 9814      6E657269 
 9814      6353656E 
 9814      6446726F 
 9815              	.LASF111:
 9816 0019 75635175 		.ascii	"ucQueueType\000"
 9816      65756554 
 9816      79706500 
 9817              	.LASF141:
 9818 0025 78517565 		.ascii	"xQueuePeek\000"
 9818      75655065 
 9818      656B00
 9819              	.LASF124:
 9820 0030 70727649 		.ascii	"prvInitialiseMutex\000"
 9820      6E697469 
 9820      616C6973 
 9820      654D7574 
 9820      657800
 9821              	.LASF126:
 9822 0043 75784D75 		.ascii	"uxMutexLength\000"
 9822      7465784C 
 9822      656E6774 
 9822      6800
 9823              	.LASF145:
 9824 0051 75785175 		.ascii	"uxQueueMessagesWaiting\000"
 9824      6575654D 
 9824      65737361 
 9824      67657357 
 9824      61697469 
 9825              	.LASF3:
 9826 0068 73697A65 		.ascii	"size_t\000"
 9826      5F7400
 9827              	.LASF58:
 9828 006f 4D696E69 		.ascii	"MiniListItem_t\000"
 9828      4C697374 
 9828      4974656D 
 9828      5F7400
 9829              	.LASF67:
 9830 007e 54696D65 		.ascii	"TimeOut_t\000"
 9830      4F75745F 
 9830      7400
 9831              	.LASF91:
 9832 0088 51756575 		.ascii	"QueueRegistryItem_t\000"
 9832      65526567 
 9832      69737472 
 9832      79497465 
 9832      6D5F7400 
 9833              	.LASF132:
 9834 009c 70784869 		.ascii	"pxHigherPriorityTaskWoken\000"
 9834      67686572 
 9834      5072696F 
 9834      72697479 
 9834      5461736B 
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccApaELb.s 			page 233


 9835              	.LASF149:
 9836 00b6 78517565 		.ascii	"xQueueIsQueueEmptyFromISR\000"
 9836      75654973 
 9836      51756575 
 9836      65456D70 
 9836      74794672 
 9837              	.LASF39:
 9838 00d0 4E52465F 		.ascii	"NRF_RX_PW_P1_REG\000"
 9838      52585F50 
 9838      575F5031 
 9838      5F524547 
 9838      00
 9839              	.LASF6:
 9840 00e1 5F5F7569 		.ascii	"__uint8_t\000"
 9840      6E74385F 
 9840      7400
 9841              	.LASF33:
 9842 00eb 4E52465F 		.ascii	"NRF_RX_ADDR_P2_REG\000"
 9842      52585F41 
 9842      4444525F 
 9842      50325F52 
 9842      454700
 9843              	.LASF144:
 9844 00fe 78517565 		.ascii	"xQueuePeekFromISR\000"
 9844      75655065 
 9844      656B4672 
 9844      6F6D4953 
 9844      5200
 9845              	.LASF185:
 9846 0110 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 9846      43313120 
 9846      352E342E 
 9846      31203230 
 9846      31363036 
 9847 0143 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 9847      20726576 
 9847      6973696F 
 9847      6E203233 
 9847      37373135 
 9848 0176 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 9848      66756E63 
 9848      74696F6E 
 9848      2D736563 
 9848      74696F6E 
 9849              	.LASF80:
 9850 019e 75784C65 		.ascii	"uxLength\000"
 9850      6E677468 
 9850      00
 9851              	.LASF104:
 9852 01a7 70727643 		.ascii	"prvCopyDataFromQueue\000"
 9852      6F707944 
 9852      61746146 
 9852      726F6D51 
 9852      75657565 
 9853              	.LASF112:
 9854 01bc 70784E65 		.ascii	"pxNewQueue\000"
 9854      77517565 
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccApaELb.s 			page 234


 9854      756500
 9855              	.LASF13:
 9856 01c7 6C6F6E67 		.ascii	"long long unsigned int\000"
 9856      206C6F6E 
 9856      6720756E 
 9856      7369676E 
 9856      65642069 
 9857              	.LASF107:
 9858 01de 784E6577 		.ascii	"xNewQueue\000"
 9858      51756575 
 9858      6500
 9859              	.LASF98:
 9860 01e8 70727643 		.ascii	"prvCopyDataToQueue\000"
 9860      6F707944 
 9860      61746154 
 9860      6F517565 
 9860      756500
 9861              	.LASF87:
 9862 01fb 51554555 		.ascii	"QUEUE_REGISTRY_ITEM\000"
 9862      455F5245 
 9862      47495354 
 9862      52595F49 
 9862      54454D00 
 9863              	.LASF68:
 9864 020f 51756575 		.ascii	"QueueHandle_t\000"
 9864      6548616E 
 9864      646C655F 
 9864      7400
 9865              	.LASF64:
 9866 021d 7854494D 		.ascii	"xTIME_OUT\000"
 9866      455F4F55 
 9866      5400
 9867              	.LASF57:
 9868 0227 784D494E 		.ascii	"xMINI_LIST_ITEM\000"
 9868      495F4C49 
 9868      53545F49 
 9868      54454D00 
 9869              	.LASF156:
 9870 0237 78517565 		.ascii	"xQueueCreateSet\000"
 9870      75654372 
 9870      65617465 
 9870      53657400 
 9871              	.LASF31:
 9872 0247 4E52465F 		.ascii	"NRF_RX_ADDR_P0_REG\000"
 9872      52585F41 
 9872      4444525F 
 9872      50305F52 
 9872      454700
 9873              	.LASF139:
 9874 025a 75784869 		.ascii	"uxHighestWaitingPriority\000"
 9874      67686573 
 9874      74576169 
 9874      74696E67 
 9874      5072696F 
 9875              	.LASF1:
 9876 0273 6C6F6E67 		.ascii	"long long int\000"
 9876      206C6F6E 
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccApaELb.s 			page 235


 9876      6720696E 
 9876      7400
 9877              	.LASF5:
 9878 0281 7369676E 		.ascii	"signed char\000"
 9878      65642063 
 9878      68617200 
 9879              	.LASF70:
 9880 028d 51756575 		.ascii	"QueueSetMemberHandle_t\000"
 9880      65536574 
 9880      4D656D62 
 9880      65724861 
 9880      6E646C65 
 9881              	.LASF182:
 9882 02a4 76546173 		.ascii	"vTaskPriorityDisinheritAfterTimeout\000"
 9882      6B507269 
 9882      6F726974 
 9882      79446973 
 9882      696E6865 
 9883              	.LASF120:
 9884 02c8 78546963 		.ascii	"xTicksToWait\000"
 9884      6B73546F 
 9884      57616974 
 9884      00
 9885              	.LASF23:
 9886 02d5 4E52465F 		.ascii	"NRF_EN_RXADDR_REG\000"
 9886      454E5F52 
 9886      58414444 
 9886      525F5245 
 9886      4700
 9887              	.LASF84:
 9888 02e7 70785175 		.ascii	"pxQueueSetContainer\000"
 9888      65756553 
 9888      6574436F 
 9888      6E746169 
 9888      6E657200 
 9889              	.LASF142:
 9890 02fb 70634F72 		.ascii	"pcOriginalReadPosition\000"
 9890      6967696E 
 9890      616C5265 
 9890      6164506F 
 9890      73697469 
 9891              	.LASF10:
 9892 0312 6C6F6E67 		.ascii	"long int\000"
 9892      20696E74 
 9892      00
 9893              	.LASF117:
 9894 031b 75784D61 		.ascii	"uxMaxCount\000"
 9894      78436F75 
 9894      6E7400
 9895              	.LASF83:
 9896 0326 6354784C 		.ascii	"cTxLock\000"
 9896      6F636B00 
 9897              	.LASF189:
 9898 032e 6D656D63 		.ascii	"memcpy\000"
 9898      707900
 9899              	.LASF62:
 9900 0335 784C6973 		.ascii	"xListEnd\000"
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccApaELb.s 			page 236


 9900      74456E64 
 9900      00
 9901              	.LASF49:
 9902 033e 5469636B 		.ascii	"TickType_t\000"
 9902      54797065 
 9902      5F7400
 9903              	.LASF20:
 9904 0349 646F7562 		.ascii	"double\000"
 9904      6C6500
 9905              	.LASF71:
 9906 0350 70635265 		.ascii	"pcReadFrom\000"
 9906      61644672 
 9906      6F6D00
 9907              	.LASF47:
 9908 035b 42617365 		.ascii	"BaseType_t\000"
 9908      54797065 
 9908      5F7400
 9909              	.LASF44:
 9910 0366 4E52465F 		.ascii	"NRF_FIFO_STATUS_REG\000"
 9910      4649464F 
 9910      5F535441 
 9910      5455535F 
 9910      52454700 
 9911              	.LASF116:
 9912 037a 78517565 		.ascii	"xQueueCreateCountingSemaphore\000"
 9912      75654372 
 9912      65617465 
 9912      436F756E 
 9912      74696E67 
 9913              	.LASF123:
 9914 0398 7854696D 		.ascii	"xTimeOut\000"
 9914      654F7574 
 9914      00
 9915              	.LASF162:
 9916 03a1 70785175 		.ascii	"pxQueueOrSemaphore\000"
 9916      6575654F 
 9916      7253656D 
 9916      6170686F 
 9916      726500
 9917              	.LASF138:
 9918 03b4 75785365 		.ascii	"uxSemaphoreCount\000"
 9918      6D617068 
 9918      6F726543 
 9918      6F756E74 
 9918      00
 9919              	.LASF163:
 9920 03c5 78517565 		.ascii	"xQueueSelectFromSet\000"
 9920      75655365 
 9920      6C656374 
 9920      46726F6D 
 9920      53657400 
 9921              	.LASF108:
 9922 03d9 70727649 		.ascii	"prvInitialiseNewQueue\000"
 9922      6E697469 
 9922      616C6973 
 9922      654E6577 
 9922      51756575 
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccApaELb.s 			page 237


 9923              	.LASF157:
 9924 03ef 75784576 		.ascii	"uxEventQueueLength\000"
 9924      656E7451 
 9924      75657565 
 9924      4C656E67 
 9924      746800
 9925              	.LASF129:
 9926 0402 784D7574 		.ascii	"xMutex\000"
 9926      657800
 9927              	.LASF11:
 9928 0409 5F5F7569 		.ascii	"__uint32_t\000"
 9928      6E743332 
 9928      5F7400
 9929              	.LASF65:
 9930 0414 784F7665 		.ascii	"xOverflowCount\000"
 9930      72666C6F 
 9930      77436F75 
 9930      6E7400
 9931              	.LASF172:
 9932 0423 7076506F 		.ascii	"pvPortMalloc\000"
 9932      72744D61 
 9932      6C6C6F63 
 9932      00
 9933              	.LASF41:
 9934 0430 4E52465F 		.ascii	"NRF_RX_PW_P3_REG\000"
 9934      52585F50 
 9934      575F5033 
 9934      5F524547 
 9934      00
 9935              	.LASF165:
 9936 0441 76506F72 		.ascii	"vPortEnterCritical\000"
 9936      74456E74 
 9936      65724372 
 9936      69746963 
 9936      616C00
 9937              	.LASF176:
 9938 0454 76546173 		.ascii	"vTaskPlaceOnEventList\000"
 9938      6B506C61 
 9938      63654F6E 
 9938      4576656E 
 9938      744C6973 
 9939              	.LASF35:
 9940 046a 4E52465F 		.ascii	"NRF_RX_ADDR_P4_REG\000"
 9940      52585F41 
 9940      4444525F 
 9940      50345F52 
 9940      454700
 9941              	.LASF45:
 9942 047d 4E52465F 		.ascii	"NRF_DYNPD_REG\000"
 9942      44594E50 
 9942      445F5245 
 9942      4700
 9943              	.LASF22:
 9944 048b 4E52465F 		.ascii	"NRF_EN_AA_REG\000"
 9944      454E5F41 
 9944      415F5245 
 9944      4700
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccApaELb.s 			page 238


 9945              	.LASF74:
 9946 0499 70634865 		.ascii	"pcHead\000"
 9946      616400
 9947              	.LASF37:
 9948 04a0 4E52465F 		.ascii	"NRF_TX_ADDR_REG\000"
 9948      54585F41 
 9948      4444525F 
 9948      52454700 
 9949              	.LASF140:
 9950 04b0 78517565 		.ascii	"xQueueTakeMutexRecursive\000"
 9950      75655461 
 9950      6B654D75 
 9950      74657852 
 9950      65637572 
 9951              	.LASF96:
 9952 04c9 78526574 		.ascii	"xReturn\000"
 9952      75726E00 
 9953              	.LASF66:
 9954 04d1 7854696D 		.ascii	"xTimeOnEntering\000"
 9954      654F6E45 
 9954      6E746572 
 9954      696E6700 
 9955              	.LASF60:
 9956 04e1 75784E75 		.ascii	"uxNumberOfItems\000"
 9956      6D626572 
 9956      4F664974 
 9956      656D7300 
 9957              	.LASF12:
 9958 04f1 6C6F6E67 		.ascii	"long unsigned int\000"
 9958      20756E73 
 9958      69676E65 
 9958      6420696E 
 9958      7400
 9959              	.LASF97:
 9960 0503 70727649 		.ascii	"prvIsQueueEmpty\000"
 9960      73517565 
 9960      7565456D 
 9960      70747900 
 9961              	.LASF161:
 9962 0513 78517565 		.ascii	"xQueueRemoveFromSet\000"
 9962      75655265 
 9962      6D6F7665 
 9962      46726F6D 
 9962      53657400 
 9963              	.LASF136:
 9964 0527 78517565 		.ascii	"xQueueSemaphoreTake\000"
 9964      75655365 
 9964      6D617068 
 9964      6F726554 
 9964      616B6500 
 9965              	.LASF153:
 9966 053b 76517565 		.ascii	"vQueueAddToRegistry\000"
 9966      75654164 
 9966      64546F52 
 9966      65676973 
 9966      74727900 
 9967              	.LASF119:
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccApaELb.s 			page 239


 9968 054f 78517565 		.ascii	"xQueueGenericSend\000"
 9968      75654765 
 9968      6E657269 
 9968      6353656E 
 9968      6400
 9969              	.LASF180:
 9970 0561 76436C65 		.ascii	"vClearInterruptMaskFromISR\000"
 9970      6172496E 
 9970      74657272 
 9970      7570744D 
 9970      61736B46 
 9971              	.LASF9:
 9972 057c 73686F72 		.ascii	"short unsigned int\000"
 9972      7420756E 
 9972      7369676E 
 9972      65642069 
 9972      6E7400
 9973              	.LASF122:
 9974 058f 78596965 		.ascii	"xYieldRequired\000"
 9974      6C645265 
 9974      71756972 
 9974      656400
 9975              	.LASF21:
 9976 059e 4E52465F 		.ascii	"NRF_CONFIG_REG\000"
 9976      434F4E46 
 9976      49475F52 
 9976      454700
 9977              	.LASF135:
 9978 05ad 78517565 		.ascii	"xQueueReceive\000"
 9978      75655265 
 9978      63656976 
 9978      6500
 9979              	.LASF125:
 9980 05bb 78517565 		.ascii	"xQueueCreateMutex\000"
 9980      75654372 
 9980      65617465 
 9980      4D757465 
 9980      7800
 9981              	.LASF90:
 9982 05cd 78517565 		.ascii	"xQueueRegistryItem\000"
 9982      75655265 
 9982      67697374 
 9982      72794974 
 9982      656D00
 9983              	.LASF38:
 9984 05e0 4E52465F 		.ascii	"NRF_RX_PW_P0_REG\000"
 9984      52585F50 
 9984      575F5030 
 9984      5F524547 
 9984      00
 9985              	.LASF146:
 9986 05f1 75785265 		.ascii	"uxReturn\000"
 9986      7475726E 
 9986      00
 9987              	.LASF32:
 9988 05fa 4E52465F 		.ascii	"NRF_RX_ADDR_P1_REG\000"
 9988      52585F41 
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccApaELb.s 			page 240


 9988      4444525F 
 9988      50315F52 
 9988      454700
 9989              	.LASF25:
 9990 060d 4E52465F 		.ascii	"NRF_SETUP_RETR_REG\000"
 9990      53455455 
 9990      505F5245 
 9990      54525F52 
 9990      454700
 9991              	.LASF184:
 9992 0620 76506F72 		.ascii	"vPortFree\000"
 9992      74467265 
 9992      6500
 9993              	.LASF143:
 9994 062a 78517565 		.ascii	"xQueueReceiveFromISR\000"
 9994      75655265 
 9994      63656976 
 9994      6546726F 
 9994      6D495352 
 9995              	.LASF130:
 9996 063f 70784D75 		.ascii	"pxMutex\000"
 9996      74657800 
 9997              	.LASF164:
 9998 0647 78517565 		.ascii	"xQueueSelectFromSetFromISR\000"
 9998      75655365 
 9998      6C656374 
 9998      46726F6D 
 9998      53657446 
 9999              	.LASF27:
 10000 0662 4E52465F 		.ascii	"NRF_RF_SETUP_REG\000"
 10000      52465F53 
 10000      45545550 
 10000      5F524547 
 10000      00
 10001              	.LASF14:
 10002 0673 73697A65 		.ascii	"sizetype\000"
 10002      74797065 
 10002      00
 10003              	.LASF2:
 10004 067c 6C6F6E67 		.ascii	"long double\000"
 10004      20646F75 
 10004      626C6500 
 10005              	.LASF152:
 10006 0688 70635265 		.ascii	"pcReturn\000"
 10006      7475726E 
 10006      00
 10007              	.LASF178:
 10008 0691 78546173 		.ascii	"xTaskGetCurrentTaskHandle\000"
 10008      6B476574 
 10008      43757272 
 10008      656E7454 
 10008      61736B48 
 10009              	.LASF155:
 10010 06ab 76517565 		.ascii	"vQueueDelete\000"
 10010      75654465 
 10010      6C657465 
 10010      00
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccApaELb.s 			page 241


 10011              	.LASF86:
 10012 06b8 51756575 		.ascii	"Queue_t\000"
 10012      655F7400 
 10013              	.LASF46:
 10014 06c0 4E52465F 		.ascii	"NRF_FEATURE_REG\000"
 10014      46454154 
 10014      5552455F 
 10014      52454700 
 10015              	.LASF109:
 10016 06d0 75785175 		.ascii	"uxQueueLength\000"
 10016      6575654C 
 10016      656E6774 
 10016      6800
 10017              	.LASF43:
 10018 06de 4E52465F 		.ascii	"NRF_RX_PW_P5_REG\000"
 10018      52585F50 
 10018      575F5035 
 10018      5F524547 
 10018      00
 10019              	.LASF78:
 10020 06ef 78546173 		.ascii	"xTasksWaitingToReceive\000"
 10020      6B735761 
 10020      6974696E 
 10020      67546F52 
 10020      65636569 
 10021              	.LASF55:
 10022 0706 4C697374 		.ascii	"ListItem_t\000"
 10022      4974656D 
 10022      5F7400
 10023              	.LASF106:
 10024 0711 78517565 		.ascii	"xQueue\000"
 10024      756500
 10025              	.LASF127:
 10026 0718 75784D75 		.ascii	"uxMutexSize\000"
 10026      74657853 
 10026      697A6500 
 10027              	.LASF148:
 10028 0724 75785175 		.ascii	"uxQueueMessagesWaitingFromISR\000"
 10028      6575654D 
 10028      65737361 
 10028      67657357 
 10028      61697469 
 10029              	.LASF52:
 10030 0742 70785072 		.ascii	"pxPrevious\000"
 10030      6576696F 
 10030      757300
 10031              	.LASF95:
 10032 074d 75784869 		.ascii	"uxHighestPriorityOfWaitingTasks\000"
 10032      67686573 
 10032      74507269 
 10032      6F726974 
 10032      794F6657 
 10033              	.LASF160:
 10034 076d 78517565 		.ascii	"xQueueSet\000"
 10034      75655365 
 10034      7400
 10035              	.LASF99:
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccApaELb.s 			page 242


 10036 0777 70764974 		.ascii	"pvItemToQueue\000"
 10036      656D546F 
 10036      51756575 
 10036      6500
 10037              	.LASF19:
 10038 0785 666C6F61 		.ascii	"float\000"
 10038      7400
 10039              	.LASF85:
 10040 078b 78515545 		.ascii	"xQUEUE\000"
 10040      554500
 10041              	.LASF61:
 10042 0792 7078496E 		.ascii	"pxIndex\000"
 10042      64657800 
 10043              	.LASF54:
 10044 079a 7076436F 		.ascii	"pvContainer\000"
 10044      6E746169 
 10044      6E657200 
 10045              	.LASF89:
 10046 07a6 7848616E 		.ascii	"xHandle\000"
 10046      646C6500 
 10047              	.LASF121:
 10048 07ae 78456E74 		.ascii	"xEntryTimeSet\000"
 10048      72795469 
 10048      6D655365 
 10048      7400
 10049              	.LASF158:
 10050 07bc 78517565 		.ascii	"xQueueAddToSet\000"
 10050      75654164 
 10050      64546F53 
 10050      657400
 10051              	.LASF137:
 10052 07cb 78496E68 		.ascii	"xInheritanceOccurred\000"
 10052      65726974 
 10052      616E6365 
 10052      4F636375 
 10052      72726564 
 10053              	.LASF69:
 10054 07e0 51756575 		.ascii	"QueueSetHandle_t\000"
 10054      65536574 
 10054      48616E64 
 10054      6C655F74 
 10054      00
 10055              	.LASF4:
 10056 07f1 5F5F696E 		.ascii	"__int8_t\000"
 10056      74385F74 
 10056      00
 10057              	.LASF7:
 10058 07fa 756E7369 		.ascii	"unsigned char\000"
 10058      676E6564 
 10058      20636861 
 10058      7200
 10059              	.LASF0:
 10060 0808 756E7369 		.ascii	"unsigned int\000"
 10060      676E6564 
 10060      20696E74 
 10060      00
 10061              	.LASF72:
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccApaELb.s 			page 243


 10062 0815 75785265 		.ascii	"uxRecursiveCallCount\000"
 10062      63757273 
 10062      69766543 
 10062      616C6C43 
 10062      6F756E74 
 10063              	.LASF8:
 10064 082a 73686F72 		.ascii	"short int\000"
 10064      7420696E 
 10064      7400
 10065              	.LASF82:
 10066 0834 6352784C 		.ascii	"cRxLock\000"
 10066      6F636B00 
 10067              	.LASF40:
 10068 083c 4E52465F 		.ascii	"NRF_RX_PW_P2_REG\000"
 10068      52585F50 
 10068      575F5032 
 10068      5F524547 
 10068      00
 10069              	.LASF134:
 10070 084d 78517565 		.ascii	"xQueueGiveFromISR\000"
 10070      75654769 
 10070      76654672 
 10070      6F6D4953 
 10070      5200
 10071              	.LASF34:
 10072 085f 4E52465F 		.ascii	"NRF_RX_ADDR_P3_REG\000"
 10072      52585F41 
 10072      4444525F 
 10072      50335F52 
 10072      454700
 10073              	.LASF177:
 10074 0872 78546173 		.ascii	"xTaskResumeAll\000"
 10074      6B526573 
 10074      756D6541 
 10074      6C6C00
 10075              	.LASF150:
 10076 0881 78517565 		.ascii	"xQueueIsQueueFullFromISR\000"
 10076      75654973 
 10076      51756575 
 10076      6546756C 
 10076      6C46726F 
 10077              	.LASF114:
 10078 089a 78517565 		.ascii	"xQueueGenericCreate\000"
 10078      75654765 
 10078      6E657269 
 10078      63437265 
 10078      61746500 
 10079              	.LASF59:
 10080 08ae 784C4953 		.ascii	"xLIST\000"
 10080      5400
 10081              	.LASF128:
 10082 08b4 78517565 		.ascii	"xQueueGiveMutexRecursive\000"
 10082      75654769 
 10082      76654D75 
 10082      74657852 
 10082      65637572 
 10083              	.LASF169:
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccApaELb.s 			page 244


 10084 08cd 76546173 		.ascii	"vTaskMissedYield\000"
 10084      6B4D6973 
 10084      73656459 
 10084      69656C64 
 10084      00
 10085              	.LASF63:
 10086 08de 4C697374 		.ascii	"List_t\000"
 10086      5F7400
 10087              	.LASF30:
 10088 08e5 4E52465F 		.ascii	"NRF_RPD_REG\000"
 10088      5250445F 
 10088      52454700 
 10089              	.LASF187:
 10090 08f1 433A5C55 		.ascii	"C:\\Users\\Xwx47\\Documents\\Creator\\RNET\\v01.cyd"
 10090      73657273 
 10090      5C587778 
 10090      34375C44 
 10090      6F63756D 
 10091 091e 736E00   		.ascii	"sn\000"
 10092              	.LASF159:
 10093 0921 78517565 		.ascii	"xQueueOrSemaphore\000"
 10093      75654F72 
 10093      53656D61 
 10093      70686F72 
 10093      6500
 10094              	.LASF133:
 10095 0933 75785361 		.ascii	"uxSavedInterruptStatus\000"
 10095      76656449 
 10095      6E746572 
 10095      72757074 
 10095      53746174 
 10096              	.LASF93:
 10097 094a 70727649 		.ascii	"prvIsQueueFull\000"
 10097      73517565 
 10097      75654675 
 10097      6C6C00
 10098              	.LASF168:
 10099 0959 78546173 		.ascii	"xTaskRemoveFromEventList\000"
 10099      6B52656D 
 10099      6F766546 
 10099      726F6D45 
 10099      76656E74 
 10100              	.LASF79:
 10101 0972 75784D65 		.ascii	"uxMessagesWaiting\000"
 10101      73736167 
 10101      65735761 
 10101      6974696E 
 10101      6700
 10102              	.LASF103:
 10103 0984 70764275 		.ascii	"pvBuffer\000"
 10103      66666572 
 10103      00
 10104              	.LASF94:
 10105 098d 70785175 		.ascii	"pxQueue\000"
 10105      65756500 
 10106              	.LASF113:
 10107 0995 78517565 		.ascii	"xQueueGenericReset\000"
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccApaELb.s 			page 245


 10107      75654765 
 10107      6E657269 
 10107      63526573 
 10107      657400
 10108              	.LASF24:
 10109 09a8 4E52465F 		.ascii	"NRF_SETUP_AW_REG\000"
 10109      53455455 
 10109      505F4157 
 10109      5F524547 
 10109      00
 10110              	.LASF15:
 10111 09b9 63686172 		.ascii	"char\000"
 10111      00
 10112              	.LASF166:
 10113 09be 76506F72 		.ascii	"vPortExitCritical\000"
 10113      74457869 
 10113      74437269 
 10113      74696361 
 10113      6C00
 10114              	.LASF102:
 10115 09d0 78436F70 		.ascii	"xCopyPosition\000"
 10115      79506F73 
 10115      6974696F 
 10115      6E00
 10116              	.LASF181:
 10117 09de 70765461 		.ascii	"pvTaskIncrementMutexHeldCount\000"
 10117      736B496E 
 10117      6372656D 
 10117      656E744D 
 10117      75746578 
 10118              	.LASF88:
 10119 09fc 70635175 		.ascii	"pcQueueName\000"
 10119      6575654E 
 10119      616D6500 
 10120              	.LASF105:
 10121 0a08 70727655 		.ascii	"prvUnlockQueue\000"
 10121      6E6C6F63 
 10121      6B517565 
 10121      756500
 10122              	.LASF26:
 10123 0a17 4E52465F 		.ascii	"NRF_RF_CH_REG\000"
 10123      52465F43 
 10123      485F5245 
 10123      4700
 10124              	.LASF188:
 10125 0a25 78517565 		.ascii	"xQueueRegistry\000"
 10125      75655265 
 10125      67697374 
 10125      727900
 10126              	.LASF75:
 10127 0a34 70635461 		.ascii	"pcTail\000"
 10127      696C00
 10128              	.LASF175:
 10129 0a3b 78546173 		.ascii	"xTaskCheckForTimeOut\000"
 10129      6B436865 
 10129      636B466F 
 10129      7254696D 
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccApaELb.s 			page 246


 10129      654F7574 
 10130              	.LASF183:
 10131 0a50 78546173 		.ascii	"xTaskPriorityInherit\000"
 10131      6B507269 
 10131      6F726974 
 10131      79496E68 
 10131      65726974 
 10132              	.LASF110:
 10133 0a65 70756351 		.ascii	"pucQueueStorage\000"
 10133      75657565 
 10133      53746F72 
 10133      61676500 
 10134              	.LASF101:
 10135 0a75 7072764E 		.ascii	"prvNotifyQueueSetContainer\000"
 10135      6F746966 
 10135      79517565 
 10135      75655365 
 10135      74436F6E 
 10136              	.LASF56:
 10137 0a90 784C4953 		.ascii	"xLIST_ITEM\000"
 10137      545F4954 
 10137      454D00
 10138              	.LASF154:
 10139 0a9b 76517565 		.ascii	"vQueueUnregisterQueue\000"
 10139      7565556E 
 10139      72656769 
 10139      73746572 
 10139      51756575 
 10140              	.LASF186:
 10141 0ab1 2E2E5C46 		.ascii	"..\\FreeRTOS\\queue.c\000"
 10141      72656552 
 10141      544F535C 
 10141      71756575 
 10141      652E6300 
 10142              	.LASF16:
 10143 0ac5 696E7438 		.ascii	"int8_t\000"
 10143      5F7400
 10144              	.LASF100:
 10145 0acc 78506F73 		.ascii	"xPosition\000"
 10145      6974696F 
 10145      6E00
 10146              	.LASF118:
 10147 0ad6 7578496E 		.ascii	"uxInitialCount\000"
 10147      69746961 
 10147      6C436F75 
 10147      6E7400
 10148              	.LASF170:
 10149 0ae5 76506F72 		.ascii	"vPortYield\000"
 10149      74596965 
 10149      6C6400
 10150              	.LASF174:
 10151 0af0 76546173 		.ascii	"vTaskSuspendAll\000"
 10151      6B537573 
 10151      70656E64 
 10151      416C6C00 
 10152              	.LASF173:
 10153 0b00 76546173 		.ascii	"vTaskInternalSetTimeOutState\000"
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccApaELb.s 			page 247


 10153      6B496E74 
 10153      65726E61 
 10153      6C536574 
 10153      54696D65 
 10154              	.LASF53:
 10155 0b1d 70764F77 		.ascii	"pvOwner\000"
 10155      6E657200 
 10156              	.LASF77:
 10157 0b25 78546173 		.ascii	"xTasksWaitingToSend\000"
 10157      6B735761 
 10157      6974696E 
 10157      67546F53 
 10157      656E6400 
 10158              	.LASF50:
 10159 0b39 78497465 		.ascii	"xItemValue\000"
 10159      6D56616C 
 10159      756500
 10160              	.LASF115:
 10161 0b44 78517565 		.ascii	"xQueueSizeInBytes\000"
 10161      75655369 
 10161      7A65496E 
 10161      42797465 
 10161      7300
 10162              	.LASF73:
 10163 0b56 51756575 		.ascii	"QueueDefinition\000"
 10163      65446566 
 10163      696E6974 
 10163      696F6E00 
 10164              	.LASF17:
 10165 0b66 75696E74 		.ascii	"uint8_t\000"
 10165      385F7400 
 10166              	.LASF76:
 10167 0b6e 70635772 		.ascii	"pcWriteTo\000"
 10167      69746554 
 10167      6F00
 10168              	.LASF92:
 10169 0b78 70727647 		.ascii	"prvGetDisinheritPriorityAfterTimeout\000"
 10169      65744469 
 10169      73696E68 
 10169      65726974 
 10169      5072696F 
 10170              	.LASF81:
 10171 0b9d 75784974 		.ascii	"uxItemSize\000"
 10171      656D5369 
 10171      7A6500
 10172              	.LASF51:
 10173 0ba8 70784E65 		.ascii	"pxNext\000"
 10173      787400
 10174              	.LASF171:
 10175 0baf 764C6973 		.ascii	"vListInitialise\000"
 10175      74496E69 
 10175      7469616C 
 10175      69736500 
 10176              	.LASF42:
 10177 0bbf 4E52465F 		.ascii	"NRF_RX_PW_P4_REG\000"
 10177      52585F50 
 10177      575F5034 
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccApaELb.s 			page 248


 10177      5F524547 
 10177      00
 10178              	.LASF36:
 10179 0bd0 4E52465F 		.ascii	"NRF_RX_ADDR_P5_REG\000"
 10179      52585F41 
 10179      4444525F 
 10179      50355F52 
 10179      454700
 10180              	.LASF167:
 10181 0be3 78546173 		.ascii	"xTaskPriorityDisinherit\000"
 10181      6B507269 
 10181      6F726974 
 10181      79446973 
 10181      696E6865 
 10182              	.LASF28:
 10183 0bfb 4E52465F 		.ascii	"NRF_STATUS_REG\000"
 10183      53544154 
 10183      55535F52 
 10183      454700
 10184              	.LASF179:
 10185 0c0a 756C5365 		.ascii	"ulSetInterruptMaskFromISR\000"
 10185      74496E74 
 10185      65727275 
 10185      70744D61 
 10185      736B4672 
 10186              	.LASF147:
 10187 0c24 75785175 		.ascii	"uxQueueSpacesAvailable\000"
 10187      65756553 
 10187      70616365 
 10187      73417661 
 10187      696C6162 
 10188              	.LASF151:
 10189 0c3b 70635175 		.ascii	"pcQueueGetName\000"
 10189      65756547 
 10189      65744E61 
 10189      6D6500
 10190              	.LASF48:
 10191 0c4a 55426173 		.ascii	"UBaseType_t\000"
 10191      65547970 
 10191      655F7400 
 10192              	.LASF18:
 10193 0c56 75696E74 		.ascii	"uint32_t\000"
 10193      33325F74 
 10193      00
 10194              	.LASF29:
 10195 0c5f 4E52465F 		.ascii	"NRF_OBSERVE_TX_REG\000"
 10195      4F425345 
 10195      5256455F 
 10195      54585F52 
 10195      454700
 10196              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
